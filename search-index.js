var searchIndex = JSON.parse('{\
"developer_hub":{"doc":"Developer Hub","t":"AAAAAAAAAAAAAGGEIGDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLALLLLLLLLNLLLLLLCCCLLLLLLLLLLLLLLLLMMMMFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGEIEENGNDQGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLNLLLLLLLLCCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAGGGGGGGNNNEDDEEEEDEEDEGNNNGNLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEIGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLCCCLLLLLLLLLLLLLLLLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANENNENELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["guides","meta_contributing","polkadot_sdk","reference_docs","changing_consensus","cumulus_enabled_parachain","xcm_enabled_parachain","your_first_node","your_first_pallet","your_first_runtime","pallet","pallet_v2","shell_pallet","Balance","Balances","Call","Config","Module","Pallet","TotalIssuance","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","encode_as","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","integrity_test","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_feeless","is_in_subset","is_in_subset","mint_unsafe","mint_unsafe","module_name","name","name_hash","new_call_variant_mint_unsafe","new_call_variant_transfer","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","size_hint","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","transfer","transfer","transfer_better","transfer_better_checked","try_from","try_from","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","whitelisted_storage_keys","amount","amount","dest","dest","mint_unsafe","transfer","Balances","TotalIssuance","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Balances","Call","Config","Error","Event","InsufficientBalance","Module","NonExistentAccount","Pallet","RuntimeEvent","TotalIssuance","Transferred","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","index","infos","init","init","init","init","integrity_test","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_feeless","is_in_subset","is_in_subset","is_in_subset","is_in_subset","module_name","name","name_hash","new_call_variant_transfer","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","size_hint","size_hint","size_hint","storage_info","storage_types","tests","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transfer","transfer","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","amount","dest","amount","from","to","transfer","Balances","TotalIssuance","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","runtime_v2","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","Currency","Currency","Currency","Currency","OriginCaller","PalletInfo","Runtime","RuntimeCall","RuntimeError","RuntimeEvent","RuntimeFreezeReason","RuntimeGenesisConfig","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","System","System","System","System","SystemConfig","Void","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","add_filter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_system_ref","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","caller","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","crate_version","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch","dispatch","dispatch_bypass_filter","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter_call","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_dispatch_error","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_call_metadata","get_call_names","get_dispatch_info","get_module_names","identity","identity","identity","identity","identity","identity","identity","identity","index","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_system","is_feeless","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_sub_type","is_sub_type","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","metadata","metadata_at_version","metadata_versions","module_name","name","name_hash","none","none","pre_dispatch","reset_filter","root","root","serialize","set_caller_from","signed","signed","size_hint","size_hint","size_hint","size_hint","system","system","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Call","Config","Module","Pallet","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","before_all_runtime_migrations","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","crate_version","current_storage_version","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","dispatch_bypass_filter","dispatchables","drop","drop","encode_as","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","index","infos","init","init","integrity_test","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_feeless","is_in_subset","is_in_subset","module_name","name","name_hash","offchain_worker","on_chain_storage_version","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","storage_info","storage_types","to_keyed_vec","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","tt_default_parts","tt_error_token","tt_extra_parts","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","whitelisted_storage_keys","cumulus","frame_runtime","polkadot","smart_contracts","substrate","templates","xcm","blockchain_state_machines","chain_spec_genesis","cli","consensus_swapping","defensive_programming","extrinsic_encoding","fee_less_runtime","frame_benchmarking_weight","frame_composite_enums","frame_currency","frame_origin","frame_runtime_migration","frame_system_accounts","glossary","light_nodes","metadata","runtime_vs_smart_contract","signed_extensions","trait_based_programming","wasm_memory","wasm_meta_protocol","call_data","encoding_example","Bar","Call","Foo","PalletA","PalletACall","PalletB","PalletBCall","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","identity","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","encode_demo_extrinsic","signed_extensions_example","AddToPayload","AddToSignaturePayload","__clone_box","__clone_box","additional_signed","additional_signed","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode_as","encode_as","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","identity","identity","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","pre_dispatch","pre_dispatch","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","vzip","vzip"],"q":[[0,"developer_hub"],[4,"developer_hub::guides"],[10,"developer_hub::guides::your_first_pallet"],[13,"developer_hub::guides::your_first_pallet::pallet"],[164,"developer_hub::guides::your_first_pallet::pallet::Call"],[168,"developer_hub::guides::your_first_pallet::pallet::dispatchables"],[170,"developer_hub::guides::your_first_pallet::pallet::storage_types"],[238,"developer_hub::guides::your_first_pallet::pallet_v2"],[502,"developer_hub::guides::your_first_pallet::pallet_v2::Call"],[504,"developer_hub::guides::your_first_pallet::pallet_v2::Event"],[507,"developer_hub::guides::your_first_pallet::pallet_v2::dispatchables"],[508,"developer_hub::guides::your_first_pallet::pallet_v2::storage_types"],[576,"developer_hub::guides::your_first_pallet::pallet_v2::tests"],[577,"developer_hub::guides::your_first_pallet::pallet_v2::tests::runtime_v2"],[1284,"developer_hub::guides::your_first_pallet::shell_pallet"],[1422,"developer_hub::polkadot_sdk"],[1429,"developer_hub::reference_docs"],[1450,"developer_hub::reference_docs::extrinsic_encoding"],[1452,"developer_hub::reference_docs::extrinsic_encoding::call_data"],[1603,"developer_hub::reference_docs::extrinsic_encoding::encoding_example"],[1604,"developer_hub::reference_docs::signed_extensions"],[1605,"developer_hub::reference_docs::signed_extensions::signed_extensions_example"],[1735,"dyn_clone::sealed"],[1736,"core::any"],[1737,"sp_weights::weight_v2"],[1738,"alloc::alloc"],[1739,"alloc::vec"],[1740,"frame_support::traits::metadata"],[1741,"parity_scale_codec::error"],[1742,"core::result"],[1743,"parity_scale_codec::codec"],[1744,"frame_support::dispatch"],[1745,"parity_scale_codec::codec"],[1746,"core::fmt"],[1747,"core::fmt"],[1748,"alloc::sync"],[1749,"alloc::rc"],[1750,"frame_support::dispatch"],[1751,"frame_support::traits::metadata"],[1752,"core::option"],[1753,"core::any"],[1754,"core::ops::function"],[1755,"sp_storage"],[1756,"frame_support::dispatch"],[1757,"core::ops::function"],[1758,"core::fmt"],[1759,"frame_support::dispatch"],[1760,"sp_core"],[1761,"sp_runtime::transaction_validity"],[1762,"serde::ser"],[1763,"core::convert"],[1764,"sp_runtime::transaction_validity"]],"d":["In-depth guides about the most common components of the …","Meta information about this crate, how it is built, what …","An introduction to the Polkadot SDK. Read this module to …","Reference documents covering in-depth topics across the …","How to change the consensus engine of both the node and …","How to enhance a given runtime and node to be …","How to make a given runtime XCM-enabled, capable of …","Running the given runtime with a node. No specific …","Write your first simple pallet, learning the most most …","Writing your first real runtime, and successfully …","The <code>pallet</code> module in each FRAME pallet hosts the most …","The <code>pallet</code> module in each FRAME pallet hosts the most …","The <code>pallet</code> module in each FRAME pallet hosts the most …","","A mapping from <code>T::AccountId</code> to <code>Balance</code>","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","Single storage item, of type <code>Balance</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An unsafe mint that can be called by anyone. Not a great …","See <code>Pallet::mint_unsafe</code>.","","","","Create a call with the variant <code>mint_unsafe</code>.","Create a call with the variant <code>transfer</code>.","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","Transfer <code>amount</code> from <code>origin</code> to <code>dest</code>.","See <code>Pallet::transfer</code>.","","Transfer <code>amount</code> from <code>origin</code> to <code>dest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An unsafe mint that can be called by anyone. Not a great …","Transfer <code>amount</code> from <code>origin</code> to <code>dest</code>.","A mapping from <code>T::AccountId</code> to <code>Balance</code>","Single storage item, of type <code>Balance</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Storage type is <code>StorageMap</code> with key type <code>T :: AccountId</code> …","Contains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","The <code>Error</code> enum of this pallet.","The <code>Event</code> enum of this pallet","Account does not have enough balance.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","Account does not exist.","The <code>Pallet</code> struct, the main type that implements traits …","The overarching event type of the runtime.","Storage type is <code>StorageValue</code> with value type <code>Balance</code>.","A transfer succeeded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a call with the variant <code>transfer</code>.","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","See <code>Pallet::transfer</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Warning: Doc-Only","Warning: Doc-Only","Warning: Doc-Only","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","","","","Provides an implementation of <code>PalletInfo</code> to provide …","","","","","A reason for placing a freeze on funds.","","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing fundseturns the argument unchanged.","Convert to runtime origin, using as filter: …","Convert to runtime origin with caller being system signed …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Optionally convert the <code>DispatchError</code> into the <code>RuntimeError</code>.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create with system none origin and …","","","Create with system root origin and …","","","","Create with system signed origin and …ontains a variant per dispatchable extrinsic that this …","Configuration trait of this pallet.","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The <code>Pallet</code> struct, the main type that implements traits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-generated docs-only module listing all (public and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lean about Cumulus, the framework that transforms <code>substrate</code>…","Learn about FRAME, the framework used to build Substrate …","Learn about Polkadot as a platform.","Learn about different ways through which smart contracts …","Learn about Substrate, the main blockchain framework used …","Index of all the templates that can act as first scaffold …","Learn about XCM, the de-facto communication language …","Learn about the way Substrate and FRAME view their …","Learn about chain specification file and the genesis state …","Learn about Substrate’s CLI, and how it can be extended.","Learn about Substrate’s consensus algorithms, and how …","Learn about how to write safe and defensive code in your …","Learn about how extrinsics are encoded to be transmitted …","Learn about how to make a pallet/runtime that is fee-less …","Learn about benchmarking and weight.","Learn about composite enums in FRAME-based runtimes, such …","Learn about the currency-related abstractions provided in …","Learn about <em>“Origin”</em> A topic in FRAME that enables …","Learn about all the advance ways to test your coordinate a …","Learn about how frame-system handles <code>account-ids</code>, nonces, …","The glossary.","Learn about light nodes, how they function, and how …","Learn about metadata, the main means through which an …","Learn about the differences between smart contracts and a …","Learn about the signed extensions that form a part of …","Learn how Substrate and FRAME use traits and associated …","Learn about all the memory limitations of the WASM runtime …","Learn about the WASM meta-protocol of all Substrate-based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,9,10,9,10,9,10,10,10,9,10,9,10,9,10,9,10,9,9,9,10,10,10,10,9,10,9,10,10,0,9,10,10,10,9,10,9,9,9,9,9,10,10,10,10,10,9,10,9,10,9,9,10,10,9,9,10,10,9,10,10,10,10,10,10,10,9,9,9,10,9,9,10,9,9,10,10,9,9,10,10,9,9,10,10,9,10,9,10,10,9,10,9,10,9,9,9,10,10,9,9,9,9,9,9,9,10,9,0,10,9,10,9,10,9,10,9,10,9,9,9,10,9,10,0,0,0,10,10,10,9,10,10,9,10,9,10,9,10,10,9,10,9,87,88,87,88,0,0,0,0,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,89,90,90,89,89,90,90,89,90,89,90,89,90,89,89,90,90,89,89,90,90,89,89,90,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,0,0,0,0,0,45,0,45,0,43,0,42,41,42,44,41,45,42,44,41,45,42,44,41,45,42,44,45,42,44,45,42,44,41,45,42,44,41,45,42,44,41,42,44,41,42,44,41,41,41,45,42,44,45,42,44,45,42,44,45,42,44,41,45,42,44,41,45,42,44,44,0,41,45,42,44,45,42,44,45,42,44,41,42,44,41,41,41,41,41,42,42,42,42,42,44,44,44,44,44,41,45,42,44,41,45,42,44,41,41,45,45,42,42,44,44,41,41,45,45,42,42,44,44,41,45,42,44,44,44,44,44,44,45,42,44,41,41,41,45,42,44,41,41,45,42,44,41,41,45,45,42,42,44,44,41,41,45,45,42,42,44,44,41,41,45,45,42,42,44,44,41,45,42,44,41,45,42,44,44,41,45,42,44,41,41,41,44,41,41,41,41,41,41,41,45,42,44,41,0,0,45,42,44,41,42,44,41,45,42,44,41,45,42,44,41,44,41,45,42,44,41,45,42,44,0,0,0,45,42,44,45,42,44,45,42,44,41,45,42,44,45,42,44,41,45,42,44,41,45,42,44,41,45,42,44,42,44,41,45,42,44,41,45,91,91,92,92,92,0,0,0,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,93,94,94,93,93,94,94,93,94,93,94,93,94,93,93,94,94,93,93,94,94,93,93,94,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,0,0,0,0,0,0,0,0,57,60,58,0,0,0,0,0,0,0,0,0,0,0,0,0,57,60,58,0,50,48,53,54,55,56,57,50,58,59,95,48,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,50,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,52,48,48,53,54,55,56,57,50,58,59,48,53,54,55,56,57,50,58,59,96,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,52,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,52,57,57,57,96,48,53,54,55,56,52,57,50,60,58,59,53,54,55,56,57,50,60,58,57,50,60,58,59,53,54,55,56,57,50,58,59,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,56,56,56,56,56,57,57,57,57,57,50,50,50,50,50,58,58,58,58,58,59,59,59,59,59,48,48,53,54,55,56,57,50,60,58,59,96,48,48,48,48,53,54,55,56,52,57,57,57,50,50,60,60,60,58,58,58,59,60,96,96,48,48,53,53,54,54,55,55,56,56,52,52,57,57,50,50,60,60,58,58,59,59,96,96,48,48,53,53,54,54,55,55,56,56,52,52,57,57,50,50,60,60,58,58,59,59,96,48,53,54,55,56,52,57,50,60,58,59,57,57,57,57,53,54,55,56,57,50,60,58,96,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,96,96,48,48,53,53,54,54,55,55,56,56,52,52,57,57,50,50,60,60,58,58,59,59,96,96,53,53,54,54,55,55,56,56,52,52,57,57,50,50,60,60,58,58,59,59,96,96,48,48,53,53,54,54,55,55,56,56,52,52,57,57,50,50,60,60,58,58,59,59,48,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,50,57,96,48,53,54,55,56,52,57,50,60,58,59,57,57,53,54,55,56,50,59,59,59,96,96,96,48,48,59,48,48,48,52,48,48,48,57,50,60,58,52,50,53,54,55,56,57,50,60,58,48,53,54,55,56,57,50,58,59,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,60,60,58,58,58,59,48,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,53,54,55,56,57,50,60,58,96,48,53,54,55,56,52,57,50,60,58,59,53,54,55,56,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,96,48,53,54,55,56,52,57,50,60,58,59,53,54,55,56,57,50,58,59,96,48,53,54,55,56,52,57,50,60,58,59,0,0,0,0,78,79,78,79,78,79,78,79,79,79,78,79,78,79,78,79,78,79,78,78,78,79,79,79,79,78,79,78,79,79,0,78,79,79,78,79,78,78,78,78,78,79,79,79,79,79,78,79,78,79,78,78,79,79,78,78,79,79,78,79,79,79,79,79,79,79,78,78,78,79,78,78,79,78,78,79,79,78,78,79,79,78,78,79,79,78,79,78,79,79,78,79,78,78,78,78,78,78,78,78,78,78,78,0,79,78,79,78,79,78,79,78,79,78,79,0,0,0,79,79,79,78,79,79,78,79,78,79,78,79,79,78,79,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,82,83,0,83,0,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,81,82,82,83,83,81,81,82,82,83,83,81,82,83,81,82,83,81,82,83,81,82,83,81,81,82,82,83,83,81,81,82,82,83,83,81,81,82,82,83,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,0,0,0,0,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,85,84,85,84,85,84,85,84,84,84,84,84,85,85,85,85,85,84,85,84,85,84,84,85,85,84,84,85,85,84,85,84,85,84,85,84,85,84,84,85,85,84,84,85,85,84,84,85,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,85,84,85],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[],4],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[-1]]],[]],[[[10,[-1]]],[[10,[-1]]],11],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],12],[[],13],[[]],[-1,[[15,[[10,[-2]],14]]],16,11],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[[[10,[-1]]],19,11],0,[12,2],[12,2],[-1,[[8,[5,7]]],[]],[[[10,[-1]],-2],2,11,[20,21]],[[[9,[-1]],[9,[-1]]],22,[]],[[[10,[-1]],[10,[-1]]],22,11],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[[9,[-1]],23],24,[]],[[[10,[-1]],23],24,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],5,11],[[],[[17,[5]]]],[[[10,[-1]]],25,11],[[],[[17,[25]]]],[[[10,[-1]]],26,11],[-1,[[8,[5,7]]],[]],[[],12],[[],[[8,[27]]]],[[],12],[[],12],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],22,11],[-1,22,[]],[-1,22,[]],[31,32],0,[[],25],[[],25],[[],[[6,[5]]]],[31,[[10,[-1]]],11],[31,[[10,[-1]]],11],[[[33,[-1]]],2,11],[[],34],[[[33,[-1]]],2,11],[[],2],[[[33,[-1]],4],4,11],[[[33,[-1]]],4,11],[[],4],[[[10,[-1]]],12,11],[[],[[8,[35]]]],0,[[-1,[17,[5]]],[[8,[5,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,32],0,[31,32],[31,32],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,37,[]],[-1,37,[]],[[],38],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,22],-3,[],39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[40]]]],0,0,0,0,[31,2],[31,2],0,0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,2],[12,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[-1,22,[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[],4],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]]],[[41,[-1]]],[]],[[[42,[-1]]],[[42,[-1]]],43],[[[44,[-1]]],[[44,[-1]]],43],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],12],[[],13],[[]],[-1,[[15,[[45,[-2]],14]]],16,[]],[-1,[[15,[[42,[-2]],14]]],16,43],[-1,[[15,[[44,[-2]],14]]],16,43],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[[[44,[-1]]],19,43],0,[12,2],[12,2],[12,2],[12,2],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[[45,[-1]],-2],2,[],[20,21]],[[[42,[-1]],-2],2,43,[20,21]],[[[44,[-1]],-2],2,43,[20,21]],[[[41,[-1]],[41,[-1]]],22,[]],[[[42,[-1]],[42,[-1]]],22,43],[[[44,[-1]],[44,[-1]]],22,43],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[[41,[-1]],23],24,[]],[[[45,[-1]],23],24,43],[[[42,[-1]],23],24,43],[[[44,[-1]],23],24,43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],5,43],[[],[[17,[5]]]],[[[44,[-1]]],25,43],[[],[[17,[25]]]],[[[44,[-1]]],26,43],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[],12],[[],[[8,[27]]]],[[],12],[[],12],[[],12],[[],12],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],22,43],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[],25],[[],25],[[],[[6,[5]]]],[31,[[44,[-1]]],43],[[[33,[-1]]],2,43],[[],34],[[[33,[-1]]],2,43],[[],2],[[[33,[-1]],4],4,43],[[[33,[-1]]],4,43],[[],4],[[[45,[-1]]],12,[]],[[[42,[-1]]],12,43],[[[44,[-1]]],12,43],[[],[[8,[35]]]],0,0,[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,32],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[[],38],[[],38],[[],38],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[40]]]],[[-1,4],[[47,[46]]],[]],0,0,0,0,0,[31,2],0,0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,2],[12,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[-1,22,[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[[48,-1],2,49],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[50,[[36,[51]]]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,2],[48],[48,48],[53,53],[54,54],[55,55],[56,56],[57,57],[50,50],[58,58],[59,59],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[36,[13]]]],[-1,[[15,[53,14]]],16],[-1,[[15,[54,14]]],16],[-1,[[15,[55,14]]],16],[-1,[[15,[56,14]]],16],[-1,[[15,[57,14]]],16],[-1,[[15,[50,14]]],16],[-1,[[15,[60,14]]],16],[-1,[[15,[58,14]]],16],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[],52],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[-1,[[15,[52]]],61],[[57,48],19],[-1,[[15,[47]]],[]],[[57,48],19],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[57,-1],2,[20,21]],[[50,-1],2,[20,21]],[[60,-1],2,[20,21]],[[58,-1],2,[20,21]],[[],[[15,[2,18]]]],[[53,53],22],[[54,54],22],[[55,55],22],[[56,56],22],[[57,57],22],[[50,50],22],[[58,58],22],[[59,59],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[48,22],[[48,23],[[15,[2,62]]]],[[53,23],24],[[54,23],24],[[55,23],24],[[56,23],24],[[57,23],24],[[50,23],24],[[60,23],24],[[58,23],24],[[59,23],24],[-1,-1,[]],[[[63,[59]]],48],[36,48],[50,48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[65,[64,59]]],57],[[[65,[66,59]]],57],[-1,-1,[]],[[[63,[59]]],50],[-1,-1,[]],[[[45,[59]]],60],[[[67,[59]]],60],[[[42,[59]]],58],[-1,-1,[]],[[[68,[59]]],58],[-1,-1,[]],[69,[[36,[60]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,70],[25,[[17,[25]]]],[57,26],[[],[[17,[25]]]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[],[[36,[12]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,[[36,[51]]]],[57,22],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[57,[[36,[[65,[64,59]]]]]],[57,[[36,[[65,[66,59]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],71],[18,[[36,[72]]]],[[],[[8,[18]]]],[[],[[36,[25]]]],[[],[[36,[25]]]],[[],[[36,[[6,[5]]]]]],[[],48],[[],48],[[],[[15,[2,73]]]],[48,2],[[],48],[[],48],[[52,-1],15,74],[[48,-1],2,[[75,[48]]]],[[],48],[[],48],[57,12],[50,12],[60,12],[58,12],0,0,[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[60,[[15,[[45,[59]]]]]],[-1,[[15,[-2]]],[],[]],[60,[[15,[[67,[59]]]]]],[-1,[[15,[-2]]],[],[]],[58,[[15,[[68,[59]]]]]],[58,[[15,[[42,[59]]]]]],[-1,[[15,[-2]]],[],[]],[[48,-1],[[15,[-2,48]]],39,[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[76,77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[],4],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1]]],[[78,[-1]]],[]],[[[79,[-1]]],[[79,[-1]]],80],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],12],[[],13],[[]],[-1,[[15,[[79,[-2]],14]]],16,80],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[[[79,[-1]]],19,80],0,[12,2],[12,2],[-1,[[8,[5,7]]],[]],[[[78,[-1]],[78,[-1]]],22,[]],[[[79,[-1]],[79,[-1]]],22,80],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[[78,[-1]],23],24,[]],[[[79,[-1]],23],24,80],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[79,[-1]]],5,80],[[],[[17,[5]]]],[[[79,[-1]]],25,80],[[],[[17,[25]]]],[[[79,[-1]]],26,80],[-1,[[8,[5,7]]],[]],[[],12],[[],[[8,[27]]]],[[],12],[[],12],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[79,[-1]]],22,80],[-1,22,[]],[-1,22,[]],[[],25],[[],25],[[],[[6,[5]]]],[[[33,[-1]]],2,80],[[],34],[[[33,[-1]]],2,80],[[],2],[[[33,[-1]],4],4,80],[[[33,[-1]]],4,80],[[],4],[[],[[8,[35]]]],0,[[-1,[17,[5]]],[[8,[5,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,37,[]],[-1,37,[]],[[],38],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,22],-3,[],39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[81,14]]],16],[-1,[[15,[82,14]]],16],[-1,[[15,[83,14]]],16],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,2],[12,2],[12,2],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[81,-1],2,[20,21]],[[82,-1],2,[20,21]],[[83,-1],2,[20,21]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[81,12],[82,12],[83,12],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[5]]]],0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[84,[[15,[73]]]],[85,[[15,[73]]]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[85,85],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[15,[84,14]]],16],[-1,[[15,[85,14]]],16],[[[17,[5]]],[[15,[-1,14]]],[]],[[[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,[17,[5]]],[[15,[-1,14]]],[]],[[18,-1],[[15,[-2,14]]],16,[]],[[18,-1],[[15,[-2,14]]],16,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,2],[12,2],[85,[[8,[5]]]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[84,-1],2,[20,21]],[[85,-1],2,[20,21]],[[84,84],22],[[85,85],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[84,23],24],[[85,23],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[28,[-1,7]]],[[28,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[29,[-1,7]]],[[29,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[[[30,[-1,7]]],[[30,[3,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[-1,22,[]],[[84,86,12],[[15,[73]]]],[[85,86,12],[[15,[73]]]],[84,12],[85,12],[[-1,[17,[5]]],[[8,[5,7]]],[]],[[-1,[17,[5]]],[[8,[5,7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[-2]]],[],[]],[-1,[[36,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,[[8,[5,7]]],[]],[-1,[[8,[5,7]]],[]],[-1,37,[]],[-1,37,[]],[[],38],[[],38],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,22],-3,[],39,[]],[[-1,-2,22],-3,[],39,[]],[[85,-1],-2,39,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[17,244,577,578,580,582,1286],"p":[[3,"Private",1735],[15,"tuple"],[8,"Any",1736],[3,"Weight",1737],[15,"u8"],[15,"array"],[3,"Global",1738],[3,"Vec",1739],[3,"Pallet",13],[4,"Call",13],[8,"Config",13],[15,"usize"],[3,"CrateVersion",1740],[3,"Error",1741],[4,"Result",1742],[8,"Input",1743],[15,"slice"],[15,"u32"],[6,"DispatchResultWithPostInfo",1744],[8,"Output",1743],[8,"Sized",1745],[15,"bool"],[3,"Formatter",1746],[6,"Result",1746],[15,"str"],[3,"DispatchInfo",1744],[3,"PalletInfoData",1740],[3,"Box",1747],[3,"Arc",1748],[3,"Rc",1749],[6,"Balance",13],[6,"DispatchResult",1744],[6,"BlockNumberFor",1750],[3,"StorageVersion",1740],[3,"StorageInfo",1751],[4,"Option",1752],[3,"TypeId",1736],[3,"Type",1753],[8,"FnOnce",1754],[3,"TrackedStorageKey",1755],[3,"Pallet",238],[4,"Event",238],[8,"Config",238],[4,"Call",238],[4,"Error",238],[3,"PostDispatchInfo",1744],[3,"DispatchErrorWithPostInfo",1756],[3,"RuntimeOrigin",577],[8,"Fn",1754],[4,"OriginCaller",577],[4,"RawOrigin",1744],[3,"RuntimeGenesisConfig",577],[4,"RuntimeSlashReason",577],[4,"RuntimeLockId",577],[4,"RuntimeHoldReason",577],[4,"RuntimeFreezeReason",577],[4,"RuntimeCall",577],[4,"RuntimeEvent",577],[3,"Runtime",577],[4,"RuntimeError",577],[8,"Deserializer",1757],[3,"Error",1746],[6,"Origin",1758],[6,"System",577],[6,"CallableCallFor",1744],[6,"Currency",577],[4,"Error",1758],[4,"Event",1758],[4,"DispatchError",1756],[3,"CallMetadata",1740],[3,"RuntimeMetadataPrefixed",1759],[3,"OpaqueMetadata",1760],[4,"TransactionValidityError",1761],[8,"Serializer",1762],[8,"Into",1763],[4,"TransactionSource",1761],[6,"TransactionValidity",1761],[3,"Pallet",1284],[4,"Call",1284],[8,"Config",1284],[4,"PalletBCall",1452],[4,"PalletACall",1452],[4,"Call",1452],[3,"AddToSignaturePayload",1605],[3,"AddToPayload",1605],[6,"DispatchInfoOf",1764],[13,"mint_unsafe",164],[13,"transfer",164],[3,"TotalIssuance",170],[3,"Balances",170],[13,"transfer",502],[13,"Transferred",504],[3,"Balances",508],[3,"TotalIssuance",508],[6,"SystemConfig",577],[3,"PalletInfo",577]]},\
"frame":{"doc":"FRAME","t":"","n":["arithmetic","deps","derive","import_section","log","pallet","pallet_macros","pallet_section","prelude","primitives","runtime","testing_prelude","traits","ACCURACY","ArithmeticError","AtLeast16Bit","AtLeast16BitUnsigned","AtLeast32Bit","AtLeast32BitUnsigned","AtLeast8Bit","AtLeast8BitUnsigned","BaseArithmetic","Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","DIV","DivisionByZero","Down","Ensure","EnsureAdd","EnsureAddAssign","EnsureDiv","EnsureDivAssign","EnsureFixedPointNumber","EnsureFrom","EnsureInto","EnsureMul","EnsureMulAssign","EnsureOp","EnsureOpAssign","EnsureSub","EnsureSubAssign","FixedI128","FixedI64","FixedPointNumber","FixedPointOperand","FixedU128","FixedU64","High","Inner","Inner","InnerOf","IntegerSquareRoot","Low","Major","Minor","MultiplyArg","MultiplyRational","NearestPrefDown","NearestPrefHigh","NearestPrefLow","NearestPrefMajor","NearestPrefMinor","NearestPrefUp","Normalizable","One","Overflow","PerThing","PerU16","Perbill","Percent","Permill","Perquintill","Rational128","RationalArg","RationalInfinite","ReciprocalArg","Rounding","SIGNED","SaturatedConversion","Saturating","Signed","SignedRounding","ThresholdOrd","Underflow","UniqueSaturatedFrom","UniqueSaturatedInto","Unsigned","Up","Upper","UpperOf","Zero","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","abs_sub","accuracy","add","add","add","add","add","add","add","add","add","add","add","add","add","assert_eq_error_rate","biguint","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div_int","checked_from_integer","checked_from_rational","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul_int","checked_neg","checked_pow","checked_rem","checked_rounding_div","checked_rounding_div","checked_rounding_div","checked_rounding_div","checked_shl","checked_shr","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","const_checked_div","const_checked_div","const_checked_div","const_checked_div","const_checked_mul","const_checked_mul","const_checked_mul","const_checked_mul","const_checked_mul_with_rounding","const_checked_mul_with_rounding","const_checked_mul_with_rounding","const_checked_mul_with_rounding","d","d","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","default","default","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_add","ensure_add_assign","ensure_div","ensure_div_assign","ensure_div_int","ensure_from","ensure_from_rational","ensure_into","ensure_mul","ensure_mul_assign","ensure_mul_int","ensure_pow","ensure_sub","ensure_sub_assign","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fixed_point","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frac","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_fraction","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_perbill","from_perbill","from_perbill","from_perbill","from_percent","from_percent","from_percent","from_percent","from_percent","from_percent","from_perthousand","from_perthousand","from_perthousand","from_perthousand","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signed","from_str","from_str","from_str","from_str","from_u32","from_u32","from_u32","from_u32","from_unchecked","helpers_128bit","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","int_div","int_div","int_div","int_div","int_div","int_mul","int_mul","int_mul","int_mul","int_mul","integer_sqrt","integer_sqrt_checked","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_clamped_perthing","into_clamped_perthing","into_clamped_perthing","into_clamped_perthing","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_perbill","into_perbill","into_perbill","into_perbill","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_negative","is_negative","is_one","is_one","is_one","is_one","is_one","is_one","is_one","is_one","is_positive","is_positive","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","lazy_saturating_add","lazy_saturating_sub","lcm","left_from_one","less_epsilon","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_ceil","mul_ceil","mul_ceil","mul_ceil","mul_floor","mul_floor","mul_floor","mul_floor","mul_floor","mul_floor","multiply_rational","n","n","neg","neg","neg","neg","neg","neg","neg","neg","normalize","normalize","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","per_things","plus_epsilon","pow","pow","pow","pow","pow","rational","reciprocal","round","saturated_from","saturated_into","saturating_abs","saturating_accrue","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_dec","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div_int","saturating_from_integer","saturating_from_rational","saturating_inc","saturating_less_one","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul_acc_int","saturating_mul_int","saturating_plus_one","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reduce","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_one","set_zero","signum","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sqrt","sqrt","sqrt","sqrt","square","square","square","square","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","to_den","to_float","to_float","to_float","to_float","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","traits","trunc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_perthing","try_into_perthing","try_into_perthing","try_into_perthing","try_less_epsilon","try_plus_epsilon","try_sqrt","try_sqrt","try_sqrt","try_sqrt","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_weight","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","BigUint","Double","Single","__clone_box","add","add","add_single","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","checked_get","clear","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref_mut","div","div_unit","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from_limbs","from_mut","from_mut","from_ref","from_ref","get","identity","init","into","into_mut","into_ref","is_clear","is_zero","len","lpad","lsb","lstrip","msb","mul","mul","mul_single","one","partial_cmp","set","size_hint","split","sub","sub","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","unchecked_into","unique_saturated_into","using_encoded","vzip","with_capacity","zero","DIV","FixedI128","FixedI64","FixedPointNumber","FixedPointOperand","FixedU128","FixedU64","Inner","SIGNED","accuracy","ceil","checked_div_int","checked_from_integer","checked_from_rational","checked_mul_int","floor","frac","from_inner","into_inner","is_negative","is_one","is_positive","reciprocal","round","saturating_abs","saturating_div_int","saturating_from_integer","saturating_from_rational","saturating_mul_acc_int","saturating_mul_int","trunc","gcd","multiply_by_rational_with_rounding","split","sqrt","to_big_uint","ACCURACY","Down","High","Inner","InnerOf","Low","Major","Minor","MultiplyArg","NearestPrefDown","NearestPrefHigh","NearestPrefLow","NearestPrefMajor","NearestPrefMinor","NearestPrefUp","PerThing","PerU16","Perbill","Percent","Permill","Perquintill","RationalArg","ReciprocalArg","Rounding","SignedRounding","Up","Upper","UpperOf","deconstruct","from_float","from_fraction","from_parts","from_percent","from_rational","from_rational_approximation","from_rational_with_rounding","is_one","is_zero","left_from_one","less_epsilon","mul_ceil","mul_floor","one","plus_epsilon","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","square","try_less_epsilon","try_plus_epsilon","zero","MultiplyRational","Rational128","RationalInfinite","multiply_rational","AtLeast16Bit","AtLeast16BitUnsigned","AtLeast32Bit","AtLeast32BitUnsigned","AtLeast8Bit","AtLeast8BitUnsigned","BaseArithmetic","Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Ensure","EnsureAdd","EnsureAddAssign","EnsureDiv","EnsureDivAssign","EnsureFixedPointNumber","EnsureFrom","EnsureInto","EnsureMul","EnsureMulAssign","EnsureOp","EnsureOpAssign","EnsureSub","EnsureSubAssign","IntegerSquareRoot","One","SaturatedConversion","Saturating","Signed","UniqueSaturatedFrom","UniqueSaturatedInto","Unsigned","Zero","abs","abs_sub","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_shl","checked_shr","checked_sub","ensure_add","ensure_add_assign","ensure_div","ensure_div_assign","ensure_div_int","ensure_from","ensure_from_rational","ensure_into","ensure_mul","ensure_mul_assign","ensure_mul_int","ensure_pow","ensure_sub","ensure_sub_assign","integer_sqrt","integer_sqrt_checked","is_negative","is_one","is_positive","is_zero","max_value","min_value","one","saturated_from","saturated_into","saturating_accrue","saturating_add","saturating_dec","saturating_inc","saturating_less_one","saturating_mul","saturating_plus_one","saturating_pow","saturating_reduce","saturating_sub","set_one","set_zero","signum","unique_saturated_from","unique_saturated_into","zero","codec","frame_executive","frame_support","frame_system","scale_info","sp_api","sp_arithmetic","sp_block_builder","sp_consensus_aura","sp_consensus_grandpa","sp_core","sp_inherents","sp_io","sp_offchain","sp_runtime","sp_std","sp_version","CloneNoBound","Debug","Debug","DebugNoBound","Decode","Decode","DefaultNoBound","Encode","Encode","EqNoBound","Identity","PartialEqNoBound","RuntimeDebug","RuntimeDebugNoBound","TypeInfo","TypeInfo","decode","decode_into","encode","encode_to","encoded_fixed_size","encoded_size","fmt","size_hint","skip","type_info","using_encoded","call","call_index","compact","composite_enum","config","constant","derive_impl","disable_frame_system_supertrait_check","error","event","extra_constants","feeless_if","generate_deposit","generate_store","genesis_build","genesis_config","getter","hooks","import_section","inherent","no_default","no_default_bounds","origin","pallet","pallet_section","storage","storage_prefix","storage_version","type_value","unbounded","validate_unsigned","weight","whitelist_storage","Account","AccountData","AccountData","AccountId","AccountId","AccountInfo","ApplyExtrinsic","BaseCallFilter","BaseCallFilter","Block","BlockHash","BlockHashCount","BlockHashCount","BlockLength","BlockLength","BlockWeights","BlockWeights","Call","CallFiltered","ChainContext","CheckEra","CheckGenesis","CheckMortality","CheckNonZeroSender","CheckNonce","CheckSpecVersion","CheckTxVersion","CheckWeight","CodeUpdated","Config","ConsumedWeight","Consumer","ConsumerLimits","Created","DbWeight","DbWeight","DecRefStatus","DefaultConfig","EnsureNever","EnsureNone","EnsureRoot","EnsureRootWithSuccess","EnsureSigned","EnsureSignedBy","EnsureWithSuccess","Error","Event","EventRecord","Existed","Exists","ExtrinsicFailed","ExtrinsicSuccess","FailedToExtractRuntimeVersion","Finalization","GenesisConfig","Hash","Hash","Hashing","Hashing","IncRefStatus","Initialization","InvalidSpecName","Key","KeyValue","KilledAccount","LastRuntimeUpgrade","LastRuntimeUpgradeInfo","Lookup","Lookup","MaxConsumers","MaxConsumers","Module","NewAccount","NonDefaultComposite","NonZeroRefCount","Nonce","Nonce","None","None","OnKilledAccount","OnKilledAccount","OnNewAccount","OnNewAccount","OnSetCode","OnSetCode","Origin","Pallet","PalletInfo","PalletInfo","Phase","Provider","RawOrigin","Reaped","RefCount","RefStatus","Referenced","Remarked","Root","Root","RuntimeCall","RuntimeCall","RuntimeEvent","RuntimeEvent","RuntimeOrigin","RuntimeOrigin","SS58Prefix","SS58Prefix","SelfSufficient","SetCode","Signed","Signed","SpecVersionNeedsToIncrease","SystemWeightInfo","SystemWeightInfo","Unreferenced","Version","Version","WeightInfo","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_config","account","account_exists","account_nonce","additional_signed","additional_signed","additional_signed","additional_signed","additional_signed","additional_signed","additional_signed","all_extrinsics_len","allow_death","as_signed","assert_has_event","assert_last_event","assimilate_storage","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","block_hash","block_number","block_weight","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","can_accrue_consumers","can_dec_provider","can_inc_consumer","can_set_code","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consumers","consumers","count","crate_version","created","created","created","current_block_number","current_storage_version","data","dec_consumers","dec_providers","dec_ref","dec_sufficients","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","deposit_event","deposit_event_indexed","deposit_log","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","digest","dispatch_bypass_filter","do_pre_dispatch","do_validate","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_none","ensure_root","ensure_signed","ensure_signed_or_root","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","event_count","event_no_consensus","event_topics","events","externalities","extrinsic_count","extrinsic_data","extrinsic_index","extrinsics_data_root","extrinsics_root","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","inc_account_nonce","inc_consumers","inc_consumers_without_limit","inc_providers","inc_ref","inc_sufficients","index","infos","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","integrity_test","integrity_test","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_feeless","is_none","is_provider_required","is_root","kill_prefix","kill_prefix","kill_prefix","kill_storage","kill_storage","kill_storage","killed","killed","killed","last_runtime_upgrade_spec_version","limits","lookup","max_consumers","max_encoded_len","max_encoded_len","max_encoded_len","max_overflow","migrations","mocking","module_name","name","name_hash","new","new","new","new","new","new_call_variant_kill_prefix","new_call_variant_kill_storage","new_call_variant_remark","new_call_variant_remark_with_event","new_call_variant_set_code","new_call_variant_set_code_without_checks","new_call_variant_set_heap_pages","new_call_variant_set_storage","nonce","note_applied_extrinsic","note_extrinsic","note_finished_extrinsics","note_finished_initialize","offchain","offchain_worker","on_chain_storage_version","on_created_account","on_finalize","on_genesis","on_idle","on_initialize","on_runtime_upgrade","pallet","pallet_prelude","parent_hash","phase","post_dispatch","pre_dispatch","pre_dispatch","pre_dispatch","pre_dispatch","pre_dispatch","pre_dispatch","pre_dispatch","pre_dispatch_unsigned","providers","providers","read_events_for_pallet","read_events_no_consensus","reference_count","refs","register_extra_weight_unchecked","remark","remark","remark","remark_with_event","remark_with_event","remark_with_event","reset_events","runtime_version","serialize","serialize","serialize","set_block_consumed_resources","set_block_number","set_code","set_code","set_code","set_code","set_code_without_checks","set_code_without_checks","set_extrinsic_index","set_heap_pages","set_heap_pages","set_heap_pages","set_parent_hash","set_storage","set_storage","set_storage","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","spec_name","spec_version","split_inner","storage_info","sufficients","sufficients","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_mutate_exists","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update_code_in_storage","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate","validate","validate","validate","validate_unsigned","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","was_upgraded","weights","whitelisted_storage_keys","with_weight","code","code","items","keys","pages","prefix","remark","remark","subkeys","account","account","dispatch_error","dispatch_info","dispatch_info","hash","sender","BlockLength","BlockWeights","BlockWeightsBuilder","Err","Ok","ValidationErrors","ValidationResult","WeightsPerClass","__clone_box","__clone_box","__clone_box","avg_block_initialization","base_block","base_block","base_extrinsic","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_or_panic","builder","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","errors","fmt","fmt","fmt","fmt","for_class","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","has_errors","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","max","max","max_block","max_extrinsic","max_total","max_with_normal_ratio","per_class","reserved","simple_max","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","validate","vzip","vzip","vzip","vzip","vzip","with_sensible_defaults","AccountData","AccountId","Nonce","Pallet","V2ToV3","migrate_from_dual_to_triple_ref_count","migrate_from_single_to_triple_ref_count","migrate_from_single_u8_to_triple_ref_count","MockBlock","MockBlockU128","MockBlockU32","MockUncheckedExtrinsic","extrinsics","extrinsics","extrinsics","function","header","header","header","signature","Account","AppCrypto","CreateSignedTransaction","Extrinsic","ForAll","ForAny","GenericPublic","GenericSignature","OverarchingCall","Public","Result","Result","RuntimeAppPublic","SendSignedTransaction","SendTransactionTypes","SendUnsignedTransaction","SignMessage","Signature","SignatureData","SignedPayload","Signer","SigningTypes","SubmitTransaction","__clone_box","accounts_from_keys","all_accounts","any_account","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_sign","clone","clone_into","create_transaction","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","id","index","init","init","init","init","init","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","keystore_accounts","new","public","public","send_signed_transaction","send_signed_transaction","send_signed_transaction","send_single_signed_transaction","send_unsigned_transaction","send_unsigned_transaction","send_unsigned_transaction","sign","sign","sign","sign","sign","sign_message","sign_message","sign_message","submit_transaction","submit_unsigned_transaction","submit_unsigned_transaction","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","verify","verify","vzip","vzip","vzip","vzip","vzip","with_filter","Account","AccountData","AccountData","AccountId","AccountId","BaseCallFilter","BaseCallFilter","Block","BlockHash","BlockHashCount","BlockHashCount","BlockLength","BlockLength","BlockWeights","BlockWeights","Call","CallFiltered","CodeUpdated","Config","DbWeight","DbWeight","DefaultConfig","Error","Event","ExtrinsicFailed","ExtrinsicSuccess","FailedToExtractRuntimeVersion","GenesisConfig","Hash","Hash","Hashing","Hashing","InvalidSpecName","KilledAccount","LastRuntimeUpgrade","Lookup","Lookup","MaxConsumers","MaxConsumers","Module","NewAccount","NonDefaultComposite","NonZeroRefCount","Nonce","Nonce","None","OnKilledAccount","OnKilledAccount","OnNewAccount","OnNewAccount","OnSetCode","OnSetCode","Origin","Pallet","PalletInfo","PalletInfo","Remarked","Root","RuntimeCall","RuntimeCall","RuntimeEvent","RuntimeEvent","RuntimeOrigin","RuntimeOrigin","SS58Prefix","SS58Prefix","Signed","SpecVersionNeedsToIncrease","SystemWeightInfo","SystemWeightInfo","Version","Version","_config","config_preludes","kill_prefix","kill_storage","remark","remark_with_event","set_code","set_code_without_checks","set_heap_pages","set_storage","code","code","items","keys","pages","prefix","remark","remark","subkeys","account","account","dispatch_error","dispatch_info","dispatch_info","hash","sender","SolochainDefaultConfig","TestDefaultConfig","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","BlockNumberFor","ExtrinsicFor","HeaderFor","OriginFor","RuntimeCallFor","ensure_none","ensure_root","ensure_signed","ensure_signed_or_root","SubstrateWeight","WeightInfo","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","kill_prefix","kill_prefix","kill_storage","kill_storage","remark","remark","remark_with_event","remark_with_event","set_code","set_code","set_heap_pages","set_heap_pages","set_storage","set_storage","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","BlakeTwo256","H160","H256","H512","Hash","Keccak256","MAX","MAX","Output","U256","U512","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs_diff","abs_diff","add","add","add","add","add_assign","add_assign","as_bits","as_bits","as_bits","as_bits","as_bits","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_bytes","as_bytes","as_bytes","as_bytes_mut","as_bytes_mut","as_bytes_mut","as_fixed_bytes","as_fixed_bytes","as_fixed_bytes","as_fixed_bytes_mut","as_fixed_bytes_mut","as_fixed_bytes_mut","as_mut","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_bits","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_ptr","as_mut_ptr","as_mut_ptr","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","as_slice_of","as_u128","as_u128","as_u32","as_u32","as_u64","as_u64","as_usize","as_usize","assign_from_slice","assign_from_slice","assign_from_slice","bit","bit","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","byte","check_equal","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_div","checked_mul","checked_mul","checked_mul","checked_mul","checked_neg","checked_neg","checked_pow","checked_pow","checked_rem","checked_rem","checked_sub","checked_sub","checked_sub","checked_sub","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","covers","covers","covers","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div_assign","div_assign","div_mod","div_mod","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exp10","exp10","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_big_endian","from_big_endian","from_dec_str","from_dec_str","from_ffi_value","from_ffi_value","from_ffi_value","from_inner","from_inner","from_inner","from_little_endian","from_little_endian","from_low_u64_be","from_low_u64_be","from_low_u64_be","from_low_u64_le","from_low_u64_le","from_low_u64_le","from_low_u64_ne","from_low_u64_ne","from_low_u64_ne","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_slice","from_slice","from_str","from_str","from_str","from_str","from_str","from_str_radix","from_str_radix","from_str_radix","from_str_radix","full_mul","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_of","identity","identity","identity","identity","identity","index","index","index","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","inner","inner","inner","integer_sqrt","integer_sqrt","integer_sqrt_checked","integer_sqrt_checked","into","into","into","into","into","into","into","into_ffi_value","into_ffi_value","into_ffi_value","into_inner","into_inner","into_inner","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","leading_zeros","leading_zeros","len_bytes","len_bytes","len_bytes","low_u128","low_u128","low_u32","low_u32","low_u64","low_u64","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","not","not","one","one","one","one","ordered_trie_root","ordered_trie_root","ordered_trie_root","overflowing_add","overflowing_add","overflowing_mul","overflowing_mul","overflowing_neg","overflowing_neg","overflowing_pow","overflowing_pow","overflowing_sub","overflowing_sub","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pow","pow","random","random","random","random_using","random_using","random_using","randomize","randomize","randomize","randomize_using","randomize_using","randomize_using","rem","rem","rem","rem","rem_assign","rem_assign","repeat_byte","repeat_byte","repeat_byte","saturating_add","saturating_add","saturating_mul","saturating_mul","saturating_sub","saturating_sub","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shl","shl","shl","shl","shl_assign","shl_assign","shr","shr","shr","shr","shr_assign","shr_assign","sub","sub","sub","sub","sub_assign","sub_assign","to_big_endian","to_big_endian","to_fixed_bytes","to_fixed_bytes","to_fixed_bytes","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_little_endian","to_little_endian","to_low_u64_be","to_low_u64_be","to_low_u64_be","to_low_u64_le","to_low_u64_le","to_low_u64_le","to_low_u64_ne","to_low_u64_ne","to_low_u64_ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trailing_zeros","trailing_zeros","trie_root","trie_root","trie_root","try_as_bits","try_as_bits","try_as_bits","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zero","zero","zero","zero","zero","zero","apis","prelude","testing_prelude","types_common","AURA_ENGINE_ID","AccountNonceApi","Api","ApiError","ApiExt","ApiId","ApiRef","ApisVec","Application","ApplyExtrinsicResult","AsTrieBackend","AuraApi","AuthorityId","AuthorityList","AuthorityPair","AuthoritySignature","AuthorityWeight","BlockBuilder","BlockId","BlockT","Borrowed","Borrowed","CLIENT_LOG_TARGET","CallApiAt","CallApiAtParams","CallContext","CatchUp","CheckInherentsResult","Commit","Commit","CompactCommit","ConstructRuntimeApi","Core","Decode","Decode","DecodeLimit","Encode","Encode","Equivocation","EquivocationProof","Err","Err","Error","Extension","Extensions","Extrinsic","FailedToConvertParameter","FailedToConvertReturnValue","FailedToDecodeReturnValue","GRANDPA_ENGINE_ID","GrandpaApi","GrandpaJustification","Hash","Hash","Hash","HashT","Hasher","Hashing","HashingFor","Header","HeaderT","ID","InMemoryBackend","InherentData","KEY_TYPE","KeyTypeId","LENGTH","MAX_EXTRINSIC_DEPTH","Message","Metadata","Number","Number","NumberFor","Offchain","OffchainWorkerApi","Ok","Ok","Onchain","OpaqueKeyOwnershipProof","OpaqueMetadata","Out","Output","OverlayedChanges","Owned","Owned","Precommit","Precommit","Precommit","Prevote","Prevote","Prevote","PrimaryPropose","PrimaryPropose","ProofRecorder","ProvideRuntimeApi","RUNTIME_API_INFO_SIZE","RUNTIME_LOG_TARGET","RawIter","Rollback","RoundNumber","RuntimeApi","RuntimeApiInfo","RuntimeString","RuntimeVersion","STORAGE_PREFIX","ScheduledChange","SessionKeys","SetId","SignedMessage","Slot","SlotDuration","StateBackend","StateBackend","StateBackendIsNotTrie","StateVersion","StdHasher","StorageChanges","StorageProof","TaggedTransactionQueue","TransactionOutcome","TransactionValidity","TrieBackend","TrieBackendBuilder","TrieBackendStorage","TrieBackendStorage","UnknownBlock","UsingSameInstanceForDifferentBlocks","V0","V1","VERSION","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_std_disabled","_std_enabled","account_nonce","add","add","add_assign","add_transaction_index","api_version","api_version","apis","apply_extrinsic","apply_extrinsic_before_version_6","apply_transaction","arguments","as_bits","as_byte_slice","as_duration","as_millis","as_mut_any","as_ref","as_slice_of","as_trie_backend","as_trie_backend","at","aura_inherent_data","aura_replace_inherent_data","auth_data","authoring_version","authorities","backend_storage","backend_storage_mut","base_hash","base_number","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call_api_at","call_context","can_call_with","changes","check_equivocation_proof","check_inherents","check_message_signature","check_message_signature_with_buffer","child_changes","child_closest_merkle_value","child_closest_merkle_value","child_iter_after","child_storage","child_storage","child_storage","child_storage_changes","child_storage_hash","child_storage_hash","child_storage_root","child_storage_root","child_storage_root","children","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_merkle_value","closest_merkle_value","cmp","cmp","cmp","cmp","commit","commit","commit_transaction","construct_runtime_api","create_apis_vec","current_set_id","decl_runtime_apis","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_version_hint","deconstruct","default","default","default","default","default","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deregister","deserialize","deserialize","deserialize","deserialize","deserialize_runtime_api_info","digest","digest_mut","digests","drain_storage_changes","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ed25519","empty","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_from","encode_hex","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_compact_size","encoded_fixed_size","encoded_size","enter_runtime","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","essence","execute_block","execute_in_transaction","exists_child_storage","exists_storage","exit_runtime","extend","extensions","extract_proof","extract_proof","extrinsics","extrinsics_root","fatal_error","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_ffi_value","from_ffi_value","from_filelike","from_inner","from_into_filelike","from_into_socketlike","from_millis","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","from_timestamp","full_storage_root","function","generate_key_ownership_proof","generate_session_keys","get_data","get_error","get_hash","get_hash","get_hash","get_mut","get_read_and_written_keys","get_whitelist","grandpa_authorities","has_api","has_api_with","has_api_with","hash","hash","hash","hash","hash","hash","hash","hash","hash_of","header","id","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","impl_name","impl_runtime_apis","impl_version","inherent_extrinsics","inherents","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_runtime_logger","initialize_block","initialize_extensions","inner","insert","inspect_state","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_compact_proof","into_errors","into_ffi_value","into_ffi_value","into_inner","into_inner","into_iter_nodes","into_memory_db","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_nodes","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage","into_storage_changes","is_clear","is_clear","is_clear","is_clear","is_clear","is_empty","is_empty","is_pre_genesis","iter_after","iter_mut","iter_nodes","keys","len","localized_payload","localized_payload_with_buffer","main_storage_changes","max_encoded_len","merge","merge","message","metadata","metadata_at_version","metadata_versions","mock_impl_runtime_apis","new","new","new","new","new","new","new","new","new","new","new_with_cache","next_authorities","next_child_storage_key","next_child_storage_key","next_storage_key","next_storage_key","number","number","offchain","offchain_drain_committed","offchain_storage_changes","offchain_worker","offchain_worker_before_version_2","offender","offender","ok","ordered_trie_root","overlayed_changes","pairs","parent_hash","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pre_genesis","precommits","precommits","precommits","prevotes","proof_recorder","proof_size","put_data","put_error","raw_iter","raw_iter","read_write_count","record_proof","recorder","register","register_extension","register_overlay_stats","register_overlay_stats","register_with_type_id","replace_data","reset_read_write_count","rollback_transaction","root","round","round","round_number","round_number","runtime_api","runtime_version_at","saturating_add","saturating_sub","serialize","serialize","serialize","serialize","serialize","serialize_runtime_api_info","set_call_context","set_collect_extrinsics","set_extrinsics_root","set_id","set_number","set_offchain_storage","set_parent_hash","set_root","set_state_root","set_storage","set_whitelist","sign_message","signature","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","slot_duration","source","sp_api","spec_name","spec_version","sr25519","start_transaction","state_at","state_root","state_value_threshold","state_version","state_version","std_disabled","std_enabled","storage","storage","storage","storage_hash","storage_hash","storage_root","storage_root","storage_root","sub","sub_assign","submit_report_equivocation_unsigned_extrinsic","target_hash","target_hash","target_hash","target_hash","target_hash","target_number","target_number","target_number","target_number","target_number","timestamp_inherent_data","to_compact_proof","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_memory_db","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","transaction","transaction_depth","transaction_index_changes","transaction_index_ops","transaction_storage_root","transaction_version","trie_root","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","update_backend","usage_info","usage_info","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","validate_transaction","validate_transaction_before_version_2","validate_transaction_before_version_3","value_mut_or_insert_with","vec","version","votes_ancestries","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","with_cache","with_optional_cache","with_optional_recorder","with_recorder","wrap","error","error","error","function","function","function","parameter","CompatibleDigestItem","as_aura_pre_digest","as_aura_seal","aura_pre_digest","aura_seal","AuthorityId","AuthorityPair","AuthoritySignature","AuraInherentData","INHERENT_IDENTIFIER","InherentDataProvider","InherentType","aura_inherent_data","aura_replace_inherent_data","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","from_timestamp_and_slot_duration","init","into","into_mut","into_ref","new","provide_inherent_data","try_from","try_handle_error","try_into","type_id","unchecked_into","unique_saturated_into","vzip","AuthorityId","AuthorityPair","AuthoritySignature","CallOf","CheckedOf","ConstBool","ConstI128","ConstI16","ConstI32","ConstI64","ConstI8","ConstU128","ConstU16","ConstU32","ConstU64","ConstU8","Executive","NativeVersion","OriginOf","RuntimeVersion","apis","apply_extrinsic","authoring_version","borrow","borrow","borrow_mut","borrow_mut","can_author_with","can_author_with","construct_runtime","create_runtime_str","deref","deref","deref_mut","deref_mut","derive_impl","drop","drop","execute_block","execute_block","execute_on_runtime_upgrade","finalize_block","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","impl_name","impl_runtime_apis","impl_version","init","init","initialize_block","into","into","into_mut","into_mut","into_ref","into_ref","offchain_worker","ord_parameter_types","parameter_types","runtime_version","runtime_version","spec_name","spec_version","state_version","transaction_version","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","validate_transaction","vzip","vzip","BuildStorage","Storage","__clone_box","assimilate_storage","assimilate_storage","borrow","borrow_mut","build_storage","children_default","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","to_owned","top","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","AccountId","BlockNumber","BlockOf","Ecdsa","Ed25519","OpaqueBlock","Signature","Sr25519","SystemSignedExtensionsOf","extrinsics","extrinsics","header","header","MockBlock","MockBlockU128","MockBlockU32","MockUncheckedExtrinsic","TestState","assert_err","assert_err_ignore_postinfo","assert_error_encoded_size","assert_noop","assert_ok","assert_storage_noop","backend","extensions","extrinsics","extrinsics","extrinsics","frame_system","function","header","header","header","if_std","signature","state_version","storage_alias","AccountId","AccountId","AccountId","AccountId","AccountId","AccountIdConversion","AccountIdLookup","AccountTouch","ActiveIssuanceOf","AdditionalSigned","AllowAll","AllowDeath","AlreadyEntered","AlreadyExited","AlreadyPaused","AlreadyProcessed","AlreadyUnpaused","AppVerify","AppendZerosInput","Applyable","AsContains","AsEnsureOriginWithArg","AtLeast32Bit","AtLeast32BitUnsigned","Backing","BadFormat","BadOrigin","Balance","Balance","BalanceStatus","BeforeAllRuntimeMigrations","BlakeTwo256","BlindCheckable","Block","BlockIdTo","BlockNumber","BlockNumber","BlockNumberProvider","BoundedInline","BuildGenesisConfig","Call","Call","Call","Call","Call","CallIdentifier","CallMetadata","CallerTrait","ChangeMembers","CheckEqual","Checkable","Checked","Checked","CheckedAdd","CheckedConversion","CheckedDiv","CheckedMul","CheckedReduceBy","CheckedShl","CheckedShr","CheckedSub","Class","ClassCountOf","Clear","ClearFilterGuard","Completed","Config","Consideration","ConstBool","ConstI128","ConstI16","ConstI32","ConstI64","ConstI8","ConstU128","ConstU16","ConstU32","ConstU64","ConstU8","Contains","ContainsLengthBound","ContainsPair","Convert","ConvertBack","ConvertInto","ConvertToValue","Corrupt","CrateVersion","Currency","Currency","CurrentStorageVersion","Defensive","DefensiveMax","DefensiveMin","DefensiveOption","DefensiveResult","DefensiveSaturating","DefensiveTruncateFrom","DenyAll","DisabledValidators","DispatchInfoOf","Dispatchable","EitherOf","EitherOfDiverse","EnqueueMessage","EnqueueWithOrigin","Ensure","EnsureAdd","EnsureAddAssign","EnsureDiv","EnsureDivAssign","EnsureFixedPointNumber","EnsureFrom","EnsureInherentsAreFirst","EnsureInto","EnsureMul","EnsureMulAssign","EnsureOneOf","EnsureOp","EnsureOpAssign","EnsureOrigin","EnsureOriginEqualOrHigherPrivilege","EnsureOriginWithArg","EnsureSub","EnsureSubAssign","EqualPrivilegeOnly","Equals","Err","Error","Error","EstimateCallFee","EstimateNextNewSession","EstimateNextSessionRotation","Everything","EverythingBut","ExecuteBlock","ExecuteOverweightError","ExistenceRequirement","Extrinsic","Extrinsic","ExtrinsicCall","ExtrinsicMetadata","FEE","FetchResult","Filter","FilterStack","FilterStackGuard","FindAuthor","Footprint","Free","FromContainsPair","GenesisBuild","Get","GetBacking","GetCallIndex","GetCallMetadata","GetCallName","GetDefault","GetNodeBlockType","GetRuntimeBlockType","GetStorageVersion","H","HandleLifetime","HandleMessage","Hash","Hash","Hash","HashOutput","Hashing","HashingFor","Header","Header","Hooks","IDENTIFIER","INDEX","Identification","IdentificationOf","IdentificationTuple","IdentifyAccount","Identity","IdentityLookup","Imbalance","Incrementable","Index","Info","InitializeMembers","InsideBoth","Instance","InstanceFilter","InsufficientWeight","IntegerSquareRoot","IntegrityTest","IsInVec","IsMember","IsSubType","IsType","Keccak256","KeepAlive","Key","KeyOwnerProofSystem","KeyTypeIdProviders","Lateness","Lazy","Len","LinearStoragePrice","LockIdentifier","LockableCurrency","Locker","Lookup","LookupError","MAX_ENCODED_SIZE","MAX_LENGTH","MapSuccess","MaxLocks","MaxMessageLen","MaxMessageLen","MaxSize","MaybeConvert","MaybeConvertBack","MaybeDisplay","MaybeEquivalence","MaybeFromStr","MaybeHash","MaybeSerialize","MaybeSerializeDeserialize","Member","Moment","Moment","Moment","Moment","Morph","MorphInto","MorphWithUpperLimit","NamedReservableCurrency","Negative","NegativeImbalance","NeverEnsureOrigin","NoStorageVersionSet","NodeBlock","None","None","NoopServiceQueues","NotFound","NotFound","Nothing","Number","NumberFor","OffchainWorker","Ok","OnFinalize","OnGenesis","OnIdle","OnInitialize","OnKilledAccount","OnNewAccount","OnRuntimeUpgrade","OnTimestampSet","OnUnbalanced","One","OneSessionHandler","Ongoing","OpaqueKeys","Opposite","Origin","OriginTrait","Other","Other","Outcome","Outcome","Output","Output","Overweight","OverweightMessageAddress","PREFIX","PalletError","PalletInfo","PalletInfoAccess","PalletInfoData","PalletsInfoAccess","PalletsOrigin","PartialStorageInfoTrait","PhantomData","PollStatus","Polling","Positive","PositiveImbalance","PostDispatchInfoOf","PostInfo","Pre","PreimageProvider","PreimageRecipient","Printable","PrivilegeCmp","ProcessMessage","ProcessMessageError","Proof","QueryPreimage","QueueFootprint","QueuePaused","QueuePausedQuery","RESERVE","Randomness","Rank","RankedMembers","ReduceBy","Replace","ReservableCurrency","ReserveIdentifier","Reserved","RuntimeBlock","RuntimeOrigin","RuntimeOrigin","STORAGE_PREFIX","STORAGE_VERSION_STORAGE_KEY_POSTFIX","SafeMode","SafeModeError","SafeModeNotify","Same","SameOrOther","SaturatedConversion","Saturating","Scale","ServiceQueues","Signature","SignatureAddress","SignatureExtra","SignaturePayload","SignaturePayload","SignedExtension","SignedExtensionMetadata","SignedExtensions","SignedImbalance","Signer","SimpleBitOps","SortedMembers","Source","Source","Stack","StaticLookup","StorageInfo","StorageInfoTrait","StorageInstance","StorageMapShim","StorageVersion","StorePreimage","StoredMap","Success","Success","TIP","TRANSACTION_PAYMENT","TRANSFER","TakeFirst","Target","Target","TheseExcept","Time","TotalIssuanceOf","TrackedStorageKey","TrailingZeroInput","TransactionPause","TransactionPauseError","TransformOrigin","TryCollect","TryConvert","TryConvertBack","TryConvertInto","TryDrop","TryMapSuccess","TryMorph","TryMorphInto","TryWithMorphedArg","Type","TypedGet","UnfilteredDispatchable","UniqueSaturatedFrom","UniqueSaturatedInto","UnixTime","Unknown","Unknown","Unpausable","Unsupported","VARIANT_COUNT","VERSION","ValidateUnsigned","ValidatorId","ValidatorIdOf","ValidatorRegistration","ValidatorSet","ValidatorSetWithIdentification","VariantCount","Verify","VerifySeal","VestingSchedule","VoteTally","Votes","WhitelistedStorageKeys","WithdrawReasons","WrapperKeepOpaque","WrapperOpaque","Yield","Zero","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_poll","active_issuance","add","add_filter","add_read","add_vesting_schedule","add_write","additional_signed","additional_signed","all","apply","approval","approvals","as_ongoing","as_signed","as_signed","as_system_ref","as_system_ref","assimilate_storage","average_session_length","average_session_length","ayes","before_all_runtime_migrations","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","build","build","build_storage","burn","burn","call","caller","can_add_vesting_schedule","can_pause","can_reserve","can_slash","change_members","change_members_sorted","check","check","check_equal","check_proof","checked_add","checked_div","checked_from","checked_into","checked_mul","checked_pow","checked_shl","checked_shr","checked_sub","classes","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp_privilege","cmp_privilege","complement","compute_members_diff_sorted","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert_back","convert_back","convert_back","convert_back","convert_back","convert_back","convert_back","count","count","count","crate_version","crate_version","crate_version","created","current_block_number","current_storage_version","deactivate","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","defensive","defensive_map","defensive_map","defensive_map_err","defensive_map_or_else","defensive_map_or_else","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_ok","defensive_ok_or","defensive_ok_or_else","defensive_prelude","defensive_proof","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_truncate_from","defensive_unwrap_or","defensive_unwrap_or_default","defensive_unwrap_or_else","demote","deposit_creating","deposit_into_existing","deposit_required","der_cmp","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","difference","digest","digest_mut","dispatch","dispatch_bypass_filter","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_zero","drop_zero","eligible","empty","encode","encode","encode","encode","encode","encode_from","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded","encoded_len","encoded_len","enqueue_message","enqueue_message","enqueue_messages","enqueue_messages","ensure_add","ensure_add_assign","ensure_can_withdraw","ensure_div","ensure_div_assign","ensure_div_int","ensure_from","ensure_from_rational","ensure_inherents_are_first","ensure_into","ensure_mul","ensure_mul_assign","ensure_mul_int","ensure_ongoing","ensure_origin","ensure_origin","ensure_origin","ensure_origin_or_root","ensure_pow","ensure_reserved_named","ensure_sub","ensure_sub_assign","enter","entered","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_call_fee","estimate_call_fee","estimate_current_session_progress","estimate_next_new_session","estimate_next_session_rotation","except","execute_block","execute_overweight","exists","exit","exited","extend","extend","extend_lock","extract","extrinsics","extrinsics_root","fetch","filter","filter","filter","filter","filter","filter","filter","filter","filter","filter","filter","filter_call","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","footprint","footprint","footprint","footprint","free_balance","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_encodable","from_encoded","from_fd","from_ffi_value","from_filelike","from_into_filelike","from_into_socketlike","from_iter","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","function_name","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_backing","get_call_index","get_call_indices","get_call_metadata","get_call_name","get_call_names","get_call_names","get_hash","get_hash","get_hash","get_module_names","get_preimage","get_prime","get_raw","handle_message","handle_message","handle_messages","handle_messages","has_been_read","has_been_written","hash","hash","hash","hash","hash","hash","hash_of","have","have_preimage","header","hold","identifier","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","increment","index","index","index","induct","infos","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_value","initialize_members","insert","insert","insert","integer_sqrt","integer_sqrt_checked","integrity_test","integrity_test","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_account","into_account_truncating","into_caller","into_ffi_value","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_signer","into_sub_account_truncating","into_system","is_all","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_disabled","is_empty","is_entered","is_locked","is_member","is_none","is_one","is_paused","is_paused","is_registered","is_requested","is_root","is_signed","is_sub_type","is_superset","is_zero","issue","key","key_ids","killed","lateness","len","len","lookup","lookup","lookup","lookup","lookup","major","make_free_balance_be","max_consumers","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_len","max_overflow","max_size","max_values","maybe_convert","maybe_convert","maybe_convert","maybe_convert","maybe_convert","maybe_convert_back","maybe_convert_back","maybe_convert_back","maybe_convert_back","maybe_convert_back","maybe_merge","maybe_subsume","merge","merge","merge_into","metadata","min_len","min_rank","minimum_balance","minor","module_name","module_name","module_name","morph","morph","morph","morph","morph","morph","morph","morph","morph","mul","mutate","mutate","mutate_exists","mutate_exists","name","name","name","name_hash","name_hash","new","new","new","new","new","new","new","new","new","new","new","new","none","not","note","note_preimage","now","now","number","offchain_worker","offchain_worker","offset","on_before_session_ending","on_chain_storage_version","on_disabled","on_finalize","on_finalize","on_genesis","on_genesis_session","on_idle","on_idle","on_initialize","on_initialize","on_killed_account","on_new_account","on_new_session","on_nonzero_unbalanced","on_runtime_upgrade","on_runtime_upgrade","on_timestamp_set","on_unbalanced","on_unbalanceds","one","ordered_trie_root","other","ownership_proof_is_valid","pages","pair","pallet_name","pallet_name","pallet_prefix","pallet_prefix_hash","parameter_types","parent_hash","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_storage_info","patch","pause","peek","peek","pick","pop","post_dispatch","pre_dispatch","pre_dispatch","pre_dispatch_unsigned","prefix","prefix_hash","preimage_requested","print","process_message","promote","prove","push","put","random","random_seed","rank_of","ration","ration_merge","ration_merge_into","reactivate","read","read","reads","realize","rem","remaining","remaining_len","remaining_len","remove","remove","remove","remove_lock","remove_vesting_schedule","repatriate_all_reserved_named","repatriate_reserved","repatriate_reserved_named","request","request_preimage","reserve","reserve_named","reserved_balance","reserved_balance_named","reset_filter","resolve_creating","resolve_into_existing","restore","root","same","saturated_from","saturated_into","saturating_accrue","saturating_add","saturating_dec","saturating_inc","saturating_less_one","saturating_mul","saturating_plus_one","saturating_pow","saturating_reduce","saturating_sub","schedule","serialize","serialize","service_queues","service_queues","session_index","set","set_caller_from","set_extrinsics_root","set_lock","set_members_sorted","set_number","set_one","set_parent_hash","set_prime","set_state_root","set_zero","settle","signed","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","slash","slash_all_reserved_named","slash_reserved","slash_reserved_named","sorted_members","sorted_members","split","split_merge","split_merge_into","state_root","storage","storage_info","storage_key","storage_name","storage_prefix_hash","store_current_storage_version","store_current_storage_version","sub","sub_assign","subsume","support","sweep_queue","sweep_queue","sweep_queue","sweep_queue","symmetric_difference","take","to_hash","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","tokens","total_balance","total_issuance","touch","transfer","trie_root","try_access_poll","try_collect","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert_back","try_convert_back","try_convert_back","try_convert_back","try_convert_back","try_decode","try_drop","try_drop","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account","try_from_sub_account","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_account","try_into_sub_account","try_morph","try_morph","try_morph","try_morph","try_morph","try_morph","try_morph","try_mutate_exists","try_mutate_exists","try_none","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin_or_root","try_other","try_same","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","union","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlookup","unlookup","unlookup","unnote","unnote_preimage","unpause","unrequest","unrequest_preimage","unreserve","unreserve_all_named","unreserve_named","update","using_encoded","using_encoded","using_encoded","using_encoded","validate","validate","validate_unsigned","validate_unsigned","validators","value_cmp","verify","verify","verify_seal","vesting_balance","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","whitelisted","whitelisted_storage_keys","with_weight","with_weight","withdraw","writes","zero","zero","zero","zeroes","zeroize","Defensive","DefensiveOption","DefensiveResult","defensive","defensive_map","defensive_map","defensive_map_err","defensive_map_or_else","defensive_map_or_else","defensive_ok","defensive_ok_or","defensive_ok_or_else","defensive_proof","defensive_unwrap_or","defensive_unwrap_or_default","defensive_unwrap_or_else","Address","Address","After","Anon","At","BadFormat","DispatchTime","HARD_DEADLINE","HIGHEST_PRIORITY","Hash","LOWEST_PRIORITY","LookupError","MaybeHashed","Named","Period","Priority","Unknown","Value","__clone_box","__clone_box","__clone_box","as_hash","as_value","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel","cancel_named","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","ensure_requested","ensure_unrequested","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","evaluate","fmt","fmt","fmt","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","identity","identity","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","max_encoded_len","max_encoded_len","max_encoded_len","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","resolved","schedule","schedule_named","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","v1","v2","v3","vzip","vzip","vzip","Address","Address","Anon","Named","cancel","cancel_named","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","schedule","schedule_named","Address","Address","Anon","Hash","Hash","Named","cancel","cancel_named","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","schedule","schedule_named","Address","Address","Anon","Hasher","Hasher","Named","TaskName","cancel","cancel_named","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","schedule","schedule_named","AllowDeath","AssetId","AssetKind","Balance","Balance","BalanceLow","BalanceStatus","BelowMinimum","Beneficiary","BestEffort","Blocked","CannotCreate","ConversionFromAssetBalance","ConversionToAssetBalance","ConvertRank","DepositConsequence","Error","Error","Error","Exact","ExistenceRequirement","Expendable","Extant","Failure","Force","Fortitude","Free","Free","Frozen","GetSalary","Id","Imbalance","InProgress","KeepAlive","Locker","Minted","OnHold","Opposite","Overflow","Overflow","Pay","PayFromAccount","PaymentStatus","Polite","Precision","Preservation","Preserve","Protect","Provenance","ReducedToZero","Reserved","Restriction","Success","Success","Success","Underflow","UnityAssetBalanceConversion","Unknown","UnknownAsset","UnknownAsset","WithdrawConsequence","WithdrawReasons","WouldDie","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_payment","check_payment","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","currency","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_zero","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_asset_balance","from_asset_balance","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","fungible","fungibles","get_salary","get_salary","identity","imbalance","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_result","into_result","is_locked","max_encoded_len","maybe_merge","maybe_subsume","merge","merge_into","nonfungible","nonfungible_v2","nonfungibles","nonfungibles_v2","offset","pay","pay","pay","peek","ration","ration_merge","ration_merge_into","size_hint","split","split_merge","split_merge_into","subsume","to_asset_balance","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","ActiveIssuanceOf","Balance","Currency","Currency","LockIdentifier","LockableCurrency","MaxLocks","Moment","Moment","NamedReservableCurrency","NegativeImbalance","PositiveImbalance","ReservableCurrency","ReserveIdentifier","TotalIssuanceOf","VestingSchedule","active_issuance","add_vesting_schedule","burn","can_add_vesting_schedule","can_reserve","can_slash","deactivate","deposit_creating","deposit_into_existing","ensure_can_withdraw","ensure_reserved_named","extend_lock","free_balance","issue","make_free_balance_be","minimum_balance","pair","reactivate","remove_lock","remove_vesting_schedule","repatriate_all_reserved_named","repatriate_reserved","repatriate_reserved_named","reserve","reserve_named","reserved_balance","reserved_balance_named","resolve_creating","resolve_into_existing","set_lock","settle","slash","slash_all_reserved_named","slash_reserved","slash_reserved_named","total_balance","total_issuance","transfer","unreserve","unreserve_all_named","unreserve_named","vesting_balance","withdraw","Balance","Balanced","BalancedHold","Credit","Debt","DecreaseIssuance","Dust","FreezeConsideration","HandleImbalanceDrop","HoldConsideration","Id","Imbalance","IncreaseIssuance","Inspect","InspectFreeze","InspectHold","ItemOf","LoneFreezeConsideration","LoneHoldConsideration","Mutate","MutateFreeze","MutateHold","OnDropCredit","OnDropDebt","Reason","Unbalanced","UnbalancedHold","__clone_box","__clone_box","__clone_box","__clone_box","active_issuance","active_issuance","balance","balance","balance_freezable","balance_freezable","balance_frozen","balance_frozen","balance_on_hold","balance_on_hold","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","burn","burn_all_held","burn_from","burn_from","burn_held","burn_held","can_deposit","can_deposit","can_freeze","can_freeze","can_hold","can_hold","can_withdraw","can_withdraw","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","conformance_tests","deactivate","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decrease_balance","decrease_balance","decrease_balance_on_hold","decrease_balance_on_hold","decrease_frozen","default","deposit","deposit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","done_burn_from","done_burn_held","done_deposit","done_hold","done_issue","done_mint_into","done_release","done_rescind","done_restore","done_shelve","done_slash","done_transfer","done_transfer_and_hold","done_transfer_on_hold","done_withdraw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_zero","encode","encode","encode_to","encode_to","encode_to","encode_to","ensure_can_hold","ensure_frozen","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend_freeze","extend_freeze","extract","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle","handle","handle","handle_dust","handle_dust","handle_raw_dust","hold","hold","hold","hold_available","hold_available","identity","identity","identity","identity","increase_balance","increase_balance","increase_balance_on_hold","increase_balance_on_hold","increase_frozen","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_credit","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","issue","issue","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","merge","minimum_balance","minimum_balance","mint_into","mint_into","new","new","new","new","offset","pair","pair","peek","reactivate","reducible_balance","reducible_balance","reducible_total_balance_on_hold","reducible_total_balance_on_hold","release","release","release_all","rescind","rescind","resolve","resolve","restore","restore","set_balance","set_balance","set_balance_on_hold","set_balance_on_hold","set_freeze","set_freeze","set_frozen","set_on_hold","set_total_issuance","set_total_issuance","settle","settle","shelve","shelve","size_hint","size_hint","size_hint","size_hint","slash","slash","split","subsume","thaw","thaw","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","total_balance","total_balance","total_balance_on_hold","total_balance_on_hold","total_issuance","total_issuance","transfer","transfer","transfer_and_hold","transfer_and_hold","transfer_on_hold","transfer_on_hold","try_drop","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","update","update","update","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw","withdraw","write_balance","write_balance","zero","inspect_mutate","burn_from_best_effort_success","burn_from_exact_insufficient_funds","burn_from_exact_success","can_deposit_below_minimum","can_deposit_overflow","can_deposit_success","can_withdraw_balance_low","can_withdraw_reduced_to_zero","can_withdraw_success","mint_into_below_minimum","mint_into_overflow","mint_into_success","reducible_balance_expendable","reducible_balance_protect_preserve","restore_below_minimum","restore_overflow","restore_success","set_balance_burn_success","set_balance_mint_success","shelve_insufficient_funds","shelve_success","transfer_expendable_all","transfer_expendable_dust","transfer_protect_preserve","transfer_success","Id","Inspect","Mutate","balance_freezable","balance_frozen","can_freeze","decrease_frozen","ensure_frozen","extend_freeze","increase_frozen","set_freeze","set_frozen","thaw","Balanced","Inspect","Mutate","Reason","Unbalanced","balance_on_hold","burn_all_held","burn_held","can_hold","decrease_balance_on_hold","done_burn_held","done_hold","done_release","done_slash","done_transfer_and_hold","done_transfer_on_hold","ensure_can_hold","hold","hold_available","increase_balance_on_hold","reducible_total_balance_on_hold","release","release_all","set_balance_on_hold","set_on_hold","slash","total_balance_on_hold","transfer_and_hold","transfer_on_hold","AssetId","AssetsIterator","Balance","Balanced","BalancedHold","Create","Credit","Debt","DecreaseIssuance","Destroy","Dust","HandleImbalanceDrop","Id","Imbalance","IncreaseIssuance","Inspect","InspectEnumerable","InspectFreeze","InspectHold","Mutate","MutateFreeze","MutateHold","OnDropCredit","OnDropDebt","Reason","Unbalanced","UnbalancedHold","active_issuance","approvals","asset","asset_exists","asset_ids","balance","balance_freezable","balance_frozen","balance_on_hold","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_all_held","burn_from","burn_held","can_deposit","can_freeze","can_hold","can_withdraw","create","deactivate","decrease_balance","decrease_balance_on_hold","decrease_frozen","deposit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","destroy_accounts","destroy_approvals","done_burn_from","done_burn_held","done_deposit","done_hold","done_issue","done_mint_into","done_release","done_rescind","done_restore","done_shelve","done_slash","done_transfer","done_transfer_and_hold","done_transfer_on_hold","done_withdraw","drop","drop","drop","drop","drop","drop_zero","ensure_can_hold","ensure_frozen","eq","equivalent","equivalent","equivalent","extend_freeze","extract","finish_destroy","fmt","freeze","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle","handle","handle","handle_dust","handle_raw_dust","hold","hold","hold_available","increase_balance","increase_balance_on_hold","increase_frozen","init","init","init","init","into","into","into","into","into_credit","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","issue","merge","metadata","minimum_balance","mint_into","offset","pair","peek","reactivate","reducible_balance","reducible_total_balance_on_hold","release","rescind","resolve","restore","roles","set_balance","set_balance_on_hold","set_freeze","set_frozen","set_total_issuance","settle","shelve","slash","split","start_destroy","subsume","thaw","total_balance","total_balance_on_hold","total_issuance","transfer","transfer_and_hold","transfer_on_hold","try_drop","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","withdraw","write_balance","zero","Inspect","Mutate","allowance","approve","transfer_from","Id","Inspect","Mutate","balance_freezable","balance_frozen","can_freeze","decrease_frozen","ensure_frozen","extend_freeze","increase_frozen","set_freeze","set_frozen","thaw","Balanced","Inspect","Mutate","Reason","Unbalanced","balance_on_hold","burn_all_held","burn_held","can_hold","decrease_balance_on_hold","done_burn_held","done_hold","done_release","done_slash","done_transfer_and_hold","done_transfer_on_hold","ensure_can_hold","hold","hold_available","increase_balance_on_hold","reducible_total_balance_on_hold","release","set_balance_on_hold","slash","total_balance_on_hold","transfer_and_hold","transfer_on_hold","Inspect","MetadataDeposit","Mutate","calc_metadata_deposit","decimals","name","set","symbol","Inspect","admin","freezer","issuer","owner","Imbalance","Negative","OnUnbalanced","Opposite","Positive","ResolveAssetTo","ResolveTo","SignedImbalance","SplitTwoWays","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop_zero","extract","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","maybe_merge","maybe_subsume","merge","merge_into","offset","on_nonzero_unbalanced","on_nonzero_unbalanced","on_nonzero_unbalanced","on_nonzero_unbalanced","on_unbalanced","on_unbalanceds","peek","ration","ration_merge","ration_merge_into","split","split_merge","split_merge_into","subsume","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","zero","Inspect","InspectEnumerable","ItemId","ItemOf","ItemsIterator","Mutate","OwnedIterator","Transfer","attribute","attribute","borrow","borrow_mut","burn","burn","can_transfer","can_transfer","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","items","items","mint_into","mint_into","owned","owned","owner","owner","set_attribute","set_attribute","set_typed_attribute","set_typed_attribute","transfer","transfer","try_from","try_into","type_id","typed_attribute","typed_attribute","unchecked_into","unique_saturated_into","vzip","Inspect","InspectEnumerable","ItemId","ItemOf","ItemsIterator","Mutate","OwnedIterator","Transfer","attribute","attribute","borrow","borrow_mut","burn","burn","can_transfer","can_transfer","clear_attribute","clear_attribute","clear_metadata","clear_typed_attribute","clear_typed_attribute","custom_attribute","custom_attribute","deref","deref_mut","disable_transfer","disable_transfer","drop","enable_transfer","enable_transfer","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","items","items","mint_into","mint_into","owned","owned","owner","owner","set_attribute","set_attribute","set_metadata","set_typed_attribute","set_typed_attribute","system_attribute","system_attribute","transfer","transfer","try_from","try_into","type_id","typed_attribute","typed_attribute","typed_custom_attribute","typed_custom_attribute","typed_system_attribute","typed_system_attribute","unchecked_into","unique_saturated_into","vzip","CollectionId","CollectionsIterator","Create","Destroy","DestroyWitness","Inspect","InspectEnumerable","ItemId","ItemsIterator","Mutate","OwnedInCollectionIterator","OwnedIterator","Transfer","attribute","burn","can_transfer","collection_attribute","collection_owner","collections","create_collection","destroy","get_destroy_witness","items","mint_into","owned","owned_in_collection","owner","set_attribute","set_collection_attribute","set_typed_attribute","set_typed_collection_attribute","transfer","typed_attribute","typed_collection_attribute","CollectionId","CollectionsIterator","Create","Destroy","DestroyWitness","Inspect","InspectEnumerable","InspectRole","ItemId","ItemsIterator","Mutate","OwnedInCollectionIterator","OwnedIterator","Trading","Transfer","attribute","burn","buy_item","can_transfer","clear_attribute","clear_collection_attribute","clear_collection_metadata","clear_item_metadata","clear_typed_attribute","clear_typed_collection_attribute","collection_attribute","collection_owner","collections","create_collection","create_collection_with_id","custom_attribute","destroy","disable_transfer","enable_transfer","get_destroy_witness","is_admin","is_freezer","is_issuer","item_price","items","mint_into","owned","owned_in_collection","owner","set_attribute","set_collection_attribute","set_collection_metadata","set_item_metadata","set_price","set_typed_attribute","set_typed_collection_attribute","system_attribute","transfer","typed_attribute","typed_collection_attribute","typed_custom_attribute","typed_system_attribute","AssetKind","Balance","Beneficiary","Error","Failure","Id","InProgress","Pay","PayAssetFromAccount","PayFromAccount","PaymentStatus","Success","Unknown","borrow","borrow_mut","check_payment","check_payment","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","pay","pay","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"frame"],[13,"frame::arithmetic"],[1474,"frame::arithmetic::biguint"],[1560,"frame::arithmetic::fixed_point"],[1591,"frame::arithmetic::helpers_128bit"],[1596,"frame::arithmetic::per_things"],[1647,"frame::arithmetic::rational"],[1651,"frame::arithmetic::traits"],[1742,"frame::deps"],[1759,"frame::derive"],[1786,"frame::pallet_macros"],[1819,"frame::prelude::frame_system"],[3165,"frame::prelude::frame_system::Call"],[3174,"frame::prelude::frame_system::Event"],[3181,"frame::prelude::frame_system::limits"],[3377,"frame::prelude::frame_system::migrations"],[3385,"frame::prelude::frame_system::mocking"],[3397,"frame::prelude::frame_system::offchain"],[3560,"frame::prelude::frame_system::pallet"],[3642,"frame::prelude::frame_system::pallet::Call"],[3651,"frame::prelude::frame_system::pallet::Event"],[3658,"frame::prelude::frame_system::pallet::config_preludes"],[3700,"frame::prelude::frame_system::pallet_prelude"],[3709,"frame::prelude::frame_system::weights"],[3745,"frame::primitives"],[4632,"frame::runtime"],[4636,"frame::runtime::apis"],[6069,"frame::runtime::apis::ApiError"],[6076,"frame::runtime::apis::digests"],[6081,"frame::runtime::apis::ed25519"],[6084,"frame::runtime::apis::inherents"],[6115,"frame::runtime::apis::sr25519"],[6118,"frame::runtime::prelude"],[6202,"frame::runtime::testing_prelude"],[6235,"frame::runtime::types_common"],[6248,"frame::testing_prelude"],[6273,"frame::traits"],[9459,"frame::traits::defensive_prelude"],[9475,"frame::traits::schedule"],[9652,"frame::traits::schedule::v1"],[9664,"frame::traits::schedule::v2"],[9678,"frame::traits::schedule::v3"],[9693,"frame::traits::tokens"],[10101,"frame::traits::tokens::currency"],[10160,"frame::traits::tokens::fungible"],[10628,"frame::traits::tokens::fungible::conformance_tests"],[10629,"frame::traits::tokens::fungible::conformance_tests::inspect_mutate"],[10654,"frame::traits::tokens::fungible::freeze"],[10667,"frame::traits::tokens::fungible::hold"],[10696,"frame::traits::tokens::fungibles"],[10905,"frame::traits::tokens::fungibles::approvals"],[10910,"frame::traits::tokens::fungibles::freeze"],[10923,"frame::traits::tokens::fungibles::hold"],[10950,"frame::traits::tokens::fungibles::metadata"],[10958,"frame::traits::tokens::fungibles::roles"],[10963,"frame::traits::tokens::imbalance"],[11054,"frame::traits::tokens::nonfungible"],[11104,"frame::traits::tokens::nonfungible_v2"],[11172,"frame::traits::tokens::nonfungibles"],[11206,"frame::traits::tokens::nonfungibles_v2"],[11263,"frame::traits::tokens::pay"],[11300,"dyn_clone::sealed"],[11301,"alloc::alloc"],[11302,"alloc::vec"],[11303,"core::option"],[11304,"core::result"],[11305,"core::convert"],[11306,"core::clone"],[11307,"core::cmp"],[11308,"parity_scale_codec::error"],[11309,"parity_scale_codec::codec"],[11310,"serde::de"],[11311,"parity_scale_codec::codec"],[11312,"core::fmt"],[11313,"core::fmt"],[11314,"core::convert"],[11315,"core::ops::arith"],[11316,"core::marker"],[11317,"alloc::string"],[11318,"core::any"],[11319,"scale_info::form"],[11320,"scale_info::ty"],[11321,"core::ops::function"],[11322,"frame_support::dispatch"],[11323,"sp_runtime"],[11324,"core::mem::maybe_uninit"],[11325,"parity_scale_codec::decode_finished"],[11326,"parity_scale_codec::encode_like"],[11327,"sp_runtime::transaction_validity"],[11328,"core::marker"],[11329,"sp_runtime::generic::digest"],[11330,"sp_runtime::generic::digest"],[11331,"sp_state_machine::testing"],[11332,"sp_runtime::generic::era"],[11333,"frame_support::dispatch"],[11334,"frame_support::dispatch"],[11335,"bitvec::slice"],[11336,"bitvec::order"],[11337,"byte_slice_cast"],[11338,"byte_slice_cast"],[11339,"primitive_types"],[11340,"sp_core::ed25519"],[11341,"sp_core::sr25519"],[11342,"sp_core::sr25519"],[11343,"sp_wasm_interface"],[11344,"rustc_hex"],[11345,"uint::uint"],[11346,"core::hash"],[11347,"rand::rng"],[11348,"bitvec::ptr::span"],[11349,"primitive_types"],[11350,"sp_runtime::legacy::byte_sized_error"],[11351,"memory_db"],[11352,"memory_db"],[11353,"core::time"],[11354,"core::any"],[11355,"sp_inherents"],[11356,"sp_state_machine::trie_backend"],[11357,"finality_grandpa"],[11358,"sp_consensus_grandpa::app"],[11359,"sp_consensus_grandpa::app"],[11360,"trie_db"],[11361,"sp_state_machine::overlayed_changes::changeset"],[11362,"sp_state_machine::overlayed_changes"],[11363,"finality_grandpa"],[11364,"std::collections::hash::map"],[11365,"std::collections::hash::map"],[11366,"io_lifetimes::portability"],[11367,"io_lifetimes::portability"],[11368,"sp_trie::storage_proof"],[11369,"sp_trie::error"],[11370,"sp_trie::trie_codec"],[11371,"alloc::collections::btree::map"],[11372,"memory_db"],[11373,"sp_state_machine::backend"],[11374,"sp_state_machine::backend"],[11375,"sp_state_machine::backend"],[11376,"sp_inherents"],[11377,"sp_externalities"],[11378,"sp_keystore"],[11379,"alloc::sync"],[11380,"finality_grandpa"],[11381,"core::pin"],[11382,"frame_support::traits::preimages"],[11383,"core::convert"],[11384,"der::reader"],[11385,"serde::de"],[11386,"der::length"],[11387,"bounded_collections::bounded_vec"],[11388,"parity_scale_codec::max_encoded_len"],[11389,"alloc::borrow"],[11390,"parity_scale_codec::codec"]],"d":["The arithmetic types used for safe math.","Access to all of the dependencies of this crate. In case …","All derive macros used in frame.","An attribute macro that can be attached to a module …","The logging library of the runtime. Can normally be the …","Exports the main pallet macro. This can wrap a <code>mod pallet</code> …","A list of all macros used within the main <code>pallet</code> macro.","Can be attached to a module. Doing so will declare that …","The main prelude of FRAME.","Low level primitive types used in FRAME pallets.","All of the types and tools needed to build FRAME-based …","The main testing prelude of FRAME.","All traits often used in FRAME pallets.","The accuracy of this type.","Arithmetic errors.","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast16Bit</code>, but …","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast8Bit</code>, but …","A meta trait for arithmetic type operations, regardless of …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Precision of this fixed point implementation. It should be …","Division by zero.","","","Performs addition that returns <code>ArithmeticError</code> instead of …","Performs self addition that returns <code>ArithmeticError</code> …","Performs division that returns <code>ArithmeticError</code> instead of …","Performs self division that returns <code>ArithmeticError</code> …","Extends <code>FixedPointNumber</code> with the Ensure family functions.","Similar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.","Similar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.","Performs multiplication that returns <code>ArithmeticError</code> …","Performs self multiplication that returns <code>ArithmeticError</code> …","Meta trait that supports all immutable arithmetic <code>Ensure*</code> …","Meta trait that supports all assigned arithmetic <code>Ensure*</code> …","Performs subtraction that returns <code>ArithmeticError</code> instead …","Performs self subtraction that returns <code>ArithmeticError</code> …","A fixed point number representation in the range. <em>Fixed </em>…","A fixed point number representation in the range. <em>Fixed </em>…","Something that implements a decimal fixed point number.","Integer types that can be used to interact with …","A fixed point number representation in the range. <em>Fixed </em>…","A fixed point number representation in the range. <em>Fixed </em>…","","The underlying data type used for this fixed point number.","The data type used to build this per-thingy.","Get the inner type of a <code>PerThing</code>.","A trait implementing integer square root.","","","","","","","","","","","","A collection-like object that is made of values of type <code>T</code> …","Defines a multiplicative identity element for <code>Self</code>.","Overflow.","Something that implements a fixed point ration with an …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A wrapper for any rational number with a 128 bit numerator …","","A wrapper for any rational number with infinitely large …","","The rounding method to use for unsigned quantities.","Indicates if this fixed point implementation is signed or …","Convenience type to work around the highly unergonomic …","Saturating arithmetic operations, returning maximum or …","Useful functions for signed numbers (i.e. numbers that can …","The rounding method to use.","Trait for comparing two numbers with an threshold.","Underflow.","Just like <code>From</code> except that if the source value is too big …","Just like <code>Into</code> except that if the source value is too big …","A trait for values which cannot be negative","","A data type larger than <code>Self::Inner</code>, used to avoid …","Get the upper type of a <code>PerThing</code>.","Defines an additive identity element for <code>Self</code>.","","","","","","","","","","","","","","","Computes the absolute value.","The positive difference of two numbers.","Precision of this fixed point implementation.","","Add a value and return the result.","Add a value and return the result.","","","Add a value and return the result.","Add a value and return the result.","","","","","","","Copied from <code>sp-runtime</code> and documented there.","Infinite precision unsigned integer for substrate runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","","","","","","","","","","Addition. Simply tries to unify the denominators and add …","Divides two numbers, checking for underflow, overflow and …","","","","","Checked division for integer type <code>N</code>. Equal to <code>self / d</code>.","Creates <code>self</code> from an integer number <code>int</code>.","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Multiplies two numbers, checking for underflow or …","","","","","","","","","","Checked multiplication for integer type <code>N</code>. Equal to …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Divide by another value with custom rounding, returning …","Divide by another value with custom rounding, returning …","Divide by another value with custom rounding, returning …","Divide by another value with custom rounding, returning …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","","","","","","","","Subtraction. Simply tries to unify the denominators and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide by another value, returning <code>None</code> in the case of an …","Divide by another value, returning <code>None</code> in the case of an …","Divide by another value, returning <code>None</code> in the case of an …","Divide by another value, returning <code>None</code> in the case of an …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value with custom rounding, returning …","Multiply by another value with custom rounding, returning …","Multiply by another value with custom rounding, returning …","Multiply by another value with custom rounding, returning …","Return the denominator reference.","Return the denominator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide by a value and return the result.","Divide by a value and return the result.","","","Divide by a value and return the result.","","Divide by a value and return the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two numbers, checking for overflow.","Adds two numbers overwriting the left hand one, checking …","Divides two numbers, checking for overflow.","Divides two numbers overwriting the left hand one, …","Ensure division for integer type <code>N</code>. Equal to <code>self / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Multiplies two numbers, checking for overflow.","Multiplies two numbers overwriting the left hand one, …","Ensure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…","Raises a value to the power of exp, returning …","Subtracts two numbers, checking for overflow.","Subtracts two numbers overwriting the left hand one, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decimal Fixed Point implementations for Substrate runtime.","Returns the largest integer less than or equal to a number.","","","","","","","","","","","","","","","","","","Returns the fractional part.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Build from a raw <code>n/d</code>.","Returns the argument unchanged.","Build from a raw <code>n/d</code>.","","Returns the argument unchanged.","Converts a fraction into <code>Self</code>.","Convert from a <code>float</code> value.","Convert from a <code>float</code> value.","Convert from a <code>float</code> value.","Convert from a <code>float</code> value.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","Same as <code>Self::from_float</code>.","Builds this type from an integer number.","","Create a new instance from the given <code>inner</code> value.","","Create a new instance from the given <code>inner</code> value.","","Create a new instance from the given <code>inner</code> value.","","Create a new instance from the given <code>inner</code> value.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Convert from a <code>Perbill</code> value.","Convert from a <code>Perbill</code> value.","Convert from a <code>Perbill</code> value.","Convert from a <code>Perbill</code> value.","Build this type from a percent. Equivalent to …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Approximate the fraction <code>p/q</code> into a per-thing fraction. …","Calculate an approximation of a rational.","Calculate an approximation of a rational.","Calculate an approximation of a rational.","Calculate an approximation of a rational.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","Same as <code>Self::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","Approximate the fraction <code>p/q</code> into a per-thing fraction.","Calculate an approximation of a rational with custom …","Calculate an approximation of a rational with custom …","Calculate an approximation of a rational with custom …","Calculate an approximation of a rational with custom …","","","","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the value for <code>Rounding</code> which would give the same …","","","","","Creates self from a <code>u32</code>.","Creates self from a <code>u32</code>.","Creates self from a <code>u32</code>.","Creates self from a <code>u32</code>.","Build from a raw <code>n/d</code>. This could lead to / 0 if not …","Some helper functions to work with 128bit numbers. Note …","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Find the integer square root.","Find the integer square root, returning <code>None</code> if the number …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attempt to convert into a <code>PerThing</code>. This will always …","Attempt to convert into a <code>PerThing</code>. This will always …","Attempt to convert into a <code>PerThing</code>. This will always …","Attempt to convert into a <code>PerThing</code>. This will always …","Consumes <code>self</code> and returns the inner raw value.","Return the instance’s inner value.","","","Return the instance’s inner value.","","Return the instance’s inner value.","","Return the instance’s inner value.","","","","","","","","","","","","","","","Convert into a <code>Perbill</code> value. Will saturate if above one …","Convert into a <code>Perbill</code> value. Will saturate if above one …","Convert into a <code>Perbill</code> value. Will saturate if above one …","Convert into a <code>Perbill</code> value. Will saturate if above one …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the number is negative and false if the …","Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …","Checks if the number is one.","Return <code>true</code> if this is one.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Return <code>true</code> if this is nothing.","","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","See <code>PerThing::is_zero</code>.","","If it is zero or not","A saturating add that assumes <code>self</code> and <code>other</code> have the same …","A saturating subtraction that assumes <code>self</code> and <code>other</code> have …","Get the least common divisor of <code>self</code> and <code>other</code>.","Return the part left when <code>self</code> is saturating-subtracted …","Return the next lower value to <code>self</code> or <code>self</code> if it is …","","","","","","","","","","","Returns the largest finite number this type can represent","","","","","","","","","","","","","","","","","","","","","Returns the smallest finite number this type can represent","","","","","","","","","","","","","","","","","","","","","Multiply by a value and return the result.","","Multiply by a value and return the result.","","","Multiply by a value and return the result.","","Multiply by a value and return the result.","","","","","","","","","","","","","","","","Multiplication that always rounds the result up to a whole …","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","Multiplication that always rounds down to a whole number. …","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","Return the numerator reference.","Return the numerator.","Negate the value.","","Negate the value.","","Negate the value.","","","Negate the value.","Normalize <code>input</code> so that the sum of all elements reaches …","Normalize self around <code>targeted_sum</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Equivalent to <code>Self::from_parts(Self::ACCURACY)</code>.","","","","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","One.","One","","","","","","","","","","","","","Return the next higher value to <code>self</code> or <code>self</code> if it is …","","","","","","","Takes the reciprocal (inverse). Equal to <code>1 / self</code>.","Returns the number rounded to the nearest integer. Rounds …","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","Saturating absolute value.","Increment self by some <code>amount</code>, saturating.","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Decrement self by one, saturating at zero.","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division for integer type <code>N</code>. Equal to <code>self / d</code>.","Creates self from an integer number <code>int</code>.","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Increment self by one, saturating.","Decrement self by one, saturating at zero.","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","","","","","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiplication for integer type <code>N</code>, adding the …","Saturating multiplication for integer type <code>N</code>. Equal to …","Increment self by one, saturating at the numeric bounds …","Saturating exponentiation. Compute <code>self.pow(exp)</code>, …","","","","","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Decrement self by some <code>amount</code>, saturating at zero.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","","","","","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the sign of the number.","","","","","","","","","","","Take the square root of a positive value.","Take the square root of a positive value.","Take the square root of a positive value.","Take the square root of a positive value.","Return the product of multiplication of this value by …","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","","Subtract a value and return the result.","Subtract a value and return the result.","","","Subtract a value and return the result.","","Subtract a value and return the result.","","","","","","Compare if <code>self</code> is <code>threshold</code> greater or less than <code>other</code>.","","","","","","","","","","Convert <code>self</code> to a similar rational number where …","Convert into a <code>float</code> value.","Convert into a <code>float</code> value.","Convert into a <code>float</code> value.","Convert into a <code>float</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Primitive traits for the runtime arithmetic.","Returns the integer part.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Return the next lower value to <code>self</code> or an error with the …","Return the next higher value to <code>self</code> or an error with the …","Compute the square root, rounding as desired. If it …","Compute the square root, rounding as desired. If it …","Compute the square root, rounding as desired. If it …","Compute the square root, rounding as desired. If it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a value of <code>T</code> into an equivalent instance of …","","","","","","","","","","","Consume self to return an equivalent value of <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Equivalent to <code>Self::from_parts(0)</code>.","","","","","See <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","","See <code>PerThing::zero</code>.","See <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","Zero.","Zero.","Simple wrapper around an infinitely large integer, …","Representation of two limbs.","Representation of a single limb.","","Adds <code>self</code> with <code>other</code>. self and other do not have to have …","","Assumed as a given primitive.","","","","","","A naive getter for limb at <code>index</code>. Note that the order is …","","","","","","","","","","","","","","","","Divides an <code>n + m</code> limb self by a <code>n</code> limb <code>other</code>. The result …","Divides <code>self</code> by a single limb <code>other</code>. This can be used in …","","","","","","","","","Returns the argument unchanged.","","","","","","Raw constructor from custom limbs. If <code>limbs</code> is empty, …","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","A naive getter for limb at <code>index</code>. Note that the order is …","","","Calls <code>U::from(self)</code>.","","","","","Number of limbs.","Zero-pad <code>self</code> from left to reach <code>size</code> limbs. Will not make …","returns the least significant limb of the number.","Strips zeros from the left side (the most significant …","returns the most significant limb of the number.","Multiplies n-limb number <code>self</code> with m-limb number <code>other</code>.","","Assumed as a given primitive.","","","A naive setter for limb at <code>index</code>. Note that the order is …","","Splits a <code>Double</code> limb number into a tuple of two <code>Single</code> …","Subtracts <code>other</code> from <code>self</code>. self and other do not have to …","","","","","","","","","","","","","","Create a new instance with <code>size</code> limbs. This prevents any …","","Precision of this fixed point implementation. It should be …","A fixed point number representation in the range. <em>Fixed </em>…","A fixed point number representation in the range. <em>Fixed </em>…","Something that implements a decimal fixed point number.","Integer types that can be used to interact with …","A fixed point number representation in the range. <em>Fixed </em>…","A fixed point number representation in the range. <em>Fixed </em>…","The underlying data type used for this fixed point number.","Indicates if this fixed point implementation is signed or …","Precision of this fixed point implementation.","Returns the smallest integer greater than or equal to a …","Checked division for integer type <code>N</code>. Equal to <code>self / d</code>.","Creates <code>self</code> from an integer number <code>int</code>.","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Checked multiplication for integer type <code>N</code>. Equal to …","Returns the largest integer less than or equal to a number.","Returns the fractional part.","Builds this type from an integer number.","Consumes <code>self</code> and returns the inner raw value.","Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …","Checks if the number is one.","Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …","Takes the reciprocal (inverse). Equal to <code>1 / self</code>.","Returns the number rounded to the nearest integer. Rounds …","Saturating absolute value.","Saturating division for integer type <code>N</code>. Equal to <code>self / d</code>.","Creates self from an integer number <code>int</code>.","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Saturating multiplication for integer type <code>N</code>, adding the …","Saturating multiplication for integer type <code>N</code>. Equal to …","Returns the integer part.","Helper gcd function used in Rational128 implementation.","Returns <code>a * b / c</code> (wrapping to 128 bits) or <code>None</code> in the …","split a u128 into two u64 limbs","","Convert a u128 to a u32 based biguint.","The accuracy of this type.","","","The data type used to build this per-thingy.","Get the inner type of a <code>PerThing</code>.","","","","","","","","","","","Something that implements a fixed point ration with an …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","","","The rounding method to use for unsigned quantities.","The rounding method to use.","","A data type larger than <code>Self::Inner</code>, used to avoid …","Get the upper type of a <code>PerThing</code>.","Consume self and return the number of parts per thing.","Converts a fraction into <code>Self</code>.","Same as <code>Self::from_float</code>.","Build this type from a number of parts per thing.","Build this type from a percent. Equivalent to …","Approximate the fraction <code>p/q</code> into a per-thing fraction. …","Same as <code>Self::from_rational</code>.","Approximate the fraction <code>p/q</code> into a per-thing fraction.","Return <code>true</code> if this is one.","Return <code>true</code> if this is nothing.","Return the part left when <code>self</code> is saturating-subtracted …","Return the next lower value to <code>self</code> or <code>self</code> if it is …","Multiplication that always rounds the result up to a whole …","Multiplication that always rounds down to a whole number. …","Equivalent to <code>Self::from_parts(Self::ACCURACY)</code>.","Return the next higher value to <code>self</code> or <code>self</code> if it is …","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","Return the product of multiplication of this value by …","Return the next lower value to <code>self</code> or an error with the …","Return the next higher value to <code>self</code> or an error with the …","Equivalent to <code>Self::from_parts(0)</code>.","","A wrapper for any rational number with a 128 bit numerator …","A wrapper for any rational number with infinitely large …","","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast16Bit</code>, but …","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast8Bit</code>, but …","A meta trait for arithmetic type operations, regardless of …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","","Performs addition that returns <code>ArithmeticError</code> instead of …","Performs self addition that returns <code>ArithmeticError</code> …","Performs division that returns <code>ArithmeticError</code> instead of …","Performs self division that returns <code>ArithmeticError</code> …","Extends <code>FixedPointNumber</code> with the Ensure family functions.","Similar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.","Similar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.","Performs multiplication that returns <code>ArithmeticError</code> …","Performs self multiplication that returns <code>ArithmeticError</code> …","Meta trait that supports all immutable arithmetic <code>Ensure*</code> …","Meta trait that supports all assigned arithmetic <code>Ensure*</code> …","Performs subtraction that returns <code>ArithmeticError</code> instead …","Performs self subtraction that returns <code>ArithmeticError</code> …","A trait implementing integer square root.","Defines a multiplicative identity element for <code>Self</code>.","Convenience type to work around the highly unergonomic …","Saturating arithmetic operations, returning maximum or …","Useful functions for signed numbers (i.e. numbers that can …","Just like <code>From</code> except that if the source value is too big …","Just like <code>Into</code> except that if the source value is too big …","A trait for values which cannot be negative","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","The positive difference of two numbers.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Adds two numbers, checking for overflow.","Adds two numbers overwriting the left hand one, checking …","Divides two numbers, checking for overflow.","Divides two numbers overwriting the left hand one, …","Ensure division for integer type <code>N</code>. Equal to <code>self / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Multiplies two numbers, checking for overflow.","Multiplies two numbers overwriting the left hand one, …","Ensure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…","Raises a value to the power of exp, returning …","Subtracts two numbers, checking for overflow.","Subtracts two numbers overwriting the left hand one, …","Find the integer square root.","Find the integer square root, returning <code>None</code> if the number …","Returns true if the number is negative and false if the …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","Increment self by some <code>amount</code>, saturating.","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Decrement self by one, saturating at zero.","Increment self by one, saturating.","Decrement self by one, saturating at zero.","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Increment self by one, saturating at the numeric bounds …","Saturating exponentiation. Compute <code>self.pow(exp)</code>, …","Decrement self by some <code>amount</code>, saturating at zero.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the sign of the number.","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","","","","","","","","","","","","","","","","","","Derive [<code>Clone</code>] but do not bound any generic. Docs are at …","<code>?</code> formatting.","Derive macro generating an impl of the trait <code>Debug</code>.","Derive [<code>Debug</code>] but do not bound any generics. Docs are at …","Trait that allows zero-copy read of value-references from …","Derive <code>parity_scale_codec::Decode</code> and for struct and enum.","derive <code>Default</code> but do no bound any generic. Docs are at …","Trait that allows zero-copy write of value-references to …","Derive <code>parity_scale_codec::Encode</code> and …","derive Eq but do no bound any generic. Docs are at …","The type identifying for which type info is provided.","Derive [<code>PartialEq</code>] but do not bound any generic. Docs are …","","Derive [<code>Debug</code>], if <code>std</code> is enabled it uses …","Implementors return their meta type information.","","Attempt to deserialise the value from input.","Attempt to deserialize the value from input into a …","Convert self to an owned vector.","Convert self to a slice and append it to the destination.","Returns the fixed encoded size of the type.","Calculates the encoded size.","Formats the value using the given formatter.","If possible give a hint of expected size of the encoding.","Attempt to skip the encoded value from input.","Returns the static type identifier for <code>Self</code>.","Convert self to a slice and then invoke the given closure …","<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …","Each dispatchable may also be annotated with the …","<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …","The <code>#[pallet::composite_enum]</code> attribute allows you to …","The mandatory attribute <code>#[pallet::config]</code> defines the …","<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …","This attribute can be used to derive a full implementation …","To bypass the <code>frame_system::Config</code> supertrait check, use …","The <code>#[pallet::error]</code> attribute allows you to define an …","The <code>#[pallet::event]</code> attribute allows you to define pallet …","Allows you to define some extra constants to be added into …","Each dispatchable may be annotated with the …","The attribute …","To generate a <code>Store</code> trait associating all storages, …","<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …","<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …","The optional attribute …","The <code>#[pallet::hooks]</code> attribute allows you to specify a …","An attribute macro that can be attached to a module …","The <code>#[pallet::inherent]</code> attribute allows the pallet to …","The optional attribute <code>#[pallet::no_default]</code> can be …","The optional attribute <code>#[pallet::no_default_bounds]</code> can be …","The <code>#[pallet::origin]</code> attribute allows you to define some …","The pallet struct placeholder <code>#[pallet::pallet]</code> is …","Can be attached to a module. Doing so will declare that …","<strong>Rust-Analyzer users</strong>: See the documentation of the Rust …","The optional attribute …","Because the <code>pallet::pallet</code> macro implements …","The <code>#[pallet::type_value]</code> attribute lets you define a …","The optional attribute <code>#[pallet::unbounded]</code> declares the …","The <code>#[pallet::validate_unsigned]</code> attribute allows the …","Each dispatchable needs to define a weight with …","The optional attribute <code>#[pallet::whitelist_storage]</code> will …","The full account information for a particular account ID.","Data to be associated with an account (other than …","Data to be associated with an account (other than …","The user account identifier type for the runtime.","The user account identifier type for the runtime.","Information of an account.","Applying an extrinsic.","The basic call filter to use in Origin. All origins are …","The basic call filter to use in Origin. All origins are …","The Block type used by the runtime. This is used by …","Map of block numbers to block hashes.","Maximum number of block number to block hash mappings to …","Maximum number of block number to block hash mappings to …","The maximum length of a block (in bytes).","The maximum length of a block (in bytes).","Block &amp; extrinsics weights: base values and limits.","Block &amp; extrinsics weights: base values and limits.","Contains a variant per dispatchable extrinsic that this …","The origin filter prevent the call to be dispatched.","","Check for transaction mortality.","Genesis hash check to provide replay protection between …","Check for transaction mortality.","Check to ensure that the sender is not the zero address.","Nonce check and increment to give replay protection for …","Ensure the runtime version registered in the transaction …","Ensure the transaction version registered in the …","Block resource (weight) limit check.","<code>:code</code> was updated.","Configuration trait of this pallet.","An object to track the currently used extrinsic weight in …","Event handler which registers a consumer when created.","Numeric limits over the ability to add a consumer ref …","Account was created.","The weight of runtime database operations the runtime can …","The weight of runtime database operations the runtime can …","Some resultant status relevant to decrementing a …","Based on <code>Config</code>. Auto-generated by …","Always fail.","Ensure the origin is <code>None</code>. i.e. unsigned transaction.","Ensure the origin is Root.","Ensure the origin is Root and return the provided <code>Success</code> …","Ensure the origin is any <code>Signed</code> origin.","Ensure the origin is <code>Signed</code> origin from the given <code>AccountId</code>…","Ensure the origin is provided <code>Ensure</code> origin and return the …","Error for the System pallet","Event for the System pallet.","Record of an event happening.","Account already existed.","Account still exists.","An extrinsic failed.","An extrinsic completed successfully.","Failed to extract the runtime version from the new runtime.","Finalizing the block.","Can be used to configure the genesis state of this pallet.","The output of the <code>Hashing</code> function.","The output of the <code>Hashing</code> function.","The hashing system (algorithm) being used in the runtime …","The hashing system (algorithm) being used in the runtime …","Some resultant status relevant to incrementing a …","Initializing the block.","The name of specification does not match between the …","","","An account was reaped.","Stores the <code>spec_version</code> and <code>spec_name</code> of when the last …","Stores the <code>spec_version</code> and <code>spec_name</code> of when the last …","Converting trait to take a source type and convert to …","Converting trait to take a source type and convert to …","The maximum number of consumers allowed on a single …","The maximum number of consumers allowed on a single …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","A new account was created.","Suicide called when the account has non-default composite …","There is a non-zero reference count preventing the account …","This stores the number of previous transactions associated …","This stores the number of previous transactions associated …","It is signed by nobody, can be either:","It is signed by nobody, can be either:","A function that is invoked when an account has been …","A function that is invoked when an account has been …","Handler for when a new account has just been created.","Handler for when a new account has just been created.","What to do if the runtime wants to change the code to …","What to do if the runtime wants to change the code to …","Exposed trait-generic origin type.","The <code>Pallet</code> struct, the main type that implements traits …","Provides information about the pallet setup in the runtime.","Provides information about the pallet setup in the runtime.","A phase of a block’s execution.","Event handler which registers a provider when created.","Origin for the System pallet.","Account was destroyed.","Type used to encode the number of references an account …","Reference status; can be either referenced or unreferenced.","","On on-chain remark happened.","The system itself ordained this dispatch to happen: this …","The system itself ordained this dispatch to happen: this …","The aggregated <code>RuntimeCall</code> type.","The aggregated <code>RuntimeCall</code> type.","The aggregated event type of the runtime.","The aggregated event type of the runtime.","The <code>RuntimeOrigin</code> type used by dispatchable calls.","The <code>RuntimeOrigin</code> type used by dispatchable calls.","The designated SS58 prefix of this chain.","The designated SS58 prefix of this chain.","Event handler which registers a self-sufficient when …","Do something when we should be setting the code.","It is signed by some public key and we provide the …","It is signed by some public key and we provide the …","The specification version is not allowed to decrease …","","","","Get the chain’s current version.","Get the chain’s current version.","Weight functions needed for frame_system.","","","","","","","","","","","","","","","","An auto-generated getter for <code>Account</code>.","Returns true if the given account exists.","Retrieve the account transaction counter from storage.","","","","","","","","","True if the account has no outstanding references.","Returns <code>Some</code> with a reference to the <code>AccountId</code> if <code>self</code> is …","Assert the given <code>event</code> exists.","Assert the last event equal to the given <code>event</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>BlockHash</code>.","An auto-generated getter for <code>Number</code>.","An auto-generated getter for <code>BlockWeight</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the account has at least one provider reference …","True if the account has no outstanding consumer references …","True if the account has at least one provider reference …","Determine whether or not it is possible to update the code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of outstanding references for the account <code>who</code>.","The number of other modules that currently depend on this …","","","","","","","","The additional data that belongs to this account. Used to …","Decrement the reference counter on an account. This <em>MUST</em> …","Decrement the provider reference counter on an account.","Decrement the reference counter on an account. This <em>MUST</em> …","Decrement the sufficients reference counter on an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deposits an event into this block’s event record.","Deposits an event into this block’s event record adding …","Deposits a log and ensures it matches the block’s log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An auto-generated getter for <code>Digest</code>.","","Do the pre-dispatch checks. This can be applied to both …","Do the validate checks. This can be applied to both signed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure that the origin <code>o</code> represents an unsigned extrinsic. …","Ensure that the origin <code>o</code> represents the root. Returns <code>Ok</code> …","Ensure that the origin <code>o</code> represents a signed extrinsic …","Ensure that the origin <code>o</code> represents either a signed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event itself.","An auto-generated getter for <code>EventCount</code>.","Get a single event at specified index.","An auto-generated getter for <code>EventTopics</code>.","Get the current events deposited by the runtime.","Get the basic externalities for this pallet, useful for …","Gets extrinsics count.","An auto-generated getter for <code>ExtrinsicData</code>.","Gets the index of extrinsic that is currently executing.","Compute the trie root of a list of extrinsics.","Compute the trie root of a list of extrinsics.","Remove temporary “environment” entries in storage, …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","utility constructor. Used only in client/factory code.","Returns the argument unchanged.","Returns the argument unchanged.","utility constructor. Used only in client/factory code.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","","","","","","","Increment a particular account’s nonce by 1.","Increment the reference counter on an account.","Increment the reference counter on an account, ignoring …","Increment the provider reference counter on an account.","Increment the reference counter on an account.","Increment the self-sufficient reference counter on an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start the execution of a particular block.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>self</code> is <code>None</code>, <code>None</code> otherwise.","True if the account has some outstanding consumer …","Returns <code>true</code> if <code>self</code> is <code>Root</code>, <code>None</code> otherwise.","","Kill all storage items with a key that starts with the …","See <code>Pallet::kill_prefix</code>.","","Kill some items from storage.","See <code>Pallet::kill_storage</code>.","","","","Returns the <code>spec_version</code> of the last runtime upgrade.","Block resource limits configuration structures.","","The number of consumers over which <code>inc_consumers</code> will …","","","","The maximum number of additional consumers expected to be …","Migrate the reference counting state.","Provide types to help defining a mock environment when …","","","","Creates new <code>SignedExtension</code> to check genesis hash.","Create new <code>SignedExtension</code> to check runtime version.","Create new <code>SignedExtension</code> to check runtime version.","Create new <code>SignedExtension</code> to check transaction version.","Creates new <code>SignedExtension</code> to check weight of the …","Create a call with the variant <code>kill_prefix</code>.","Create a call with the variant <code>kill_storage</code>.","Create a call with the variant <code>remark</code>.","Create a call with the variant <code>remark_with_event</code>.","Create a call with the variant <code>set_code</code>.","Create a call with the variant <code>set_code_without_checks</code>.","Create a call with the variant <code>set_heap_pages</code>.","Create a call with the variant <code>set_storage</code>.","The number of transactions this account has sent.","To be called immediately after an extrinsic has been …","Note what the extrinsic data of the current extrinsic …","To be called immediately after <code>note_applied_extrinsic</code> of …","To be called immediately after finishing the …","Module helpers for off-chain calls.","","","An account is being created.","","","","","","The <code>pallet</code> module in each FRAME pallet hosts the most …","Prelude to be used alongside pallet macro, for ease of use.","An auto-generated getter for <code>ParentHash</code>.","The phase of the block it happened in.","","","","","","","","","","The number of outstanding provider references for the …","The number of other modules that allow this account to …","Read and return the events of a specific pallet, as …","Get the current events deposited by the runtime.","The number of outstanding provider and sufficient …","The number of outstanding references for the account <code>who</code>.","Inform the system pallet of some additional weight that …","","Make some on-chain remark.","See <code>Pallet::remark</code>.","","Make some on-chain remark and emit event.","See <code>Pallet::remark_with_event</code>.","Reset events.","Return the chain’s current runtime version.","","","","Set the current block weight. This should only be used in …","Set the block number to something in particular. Can be …","","Set the code to the given blob.","Set the new runtime code.","See <code>Pallet::set_code</code>.","Set the new runtime code without doing any checks of the …","See <code>Pallet::set_code_without_checks</code>.","Sets the index of extrinsic that is currently executing.","","Set the number of pages in the WebAssembly environment’s …","See <code>Pallet::set_heap_pages</code>.","Set the parent hash number to something in particular. Can …","","Set some items of storage.","See <code>Pallet::set_storage</code>.","","","","","","","","","","","","","","","","","","Split an <code>option</code> into two constituent options, as defined …","","The number of outstanding sufficient references for the …","The number of modules that allow this account to exist for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The list of the topics this event haseturns a 32 byte datum which is guaranteed to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write code to the storage and emit related events and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the runtime was upgraded in comparison of <code>self</code> …","Autogenerated weights for frame_system","","","","","","","","","","","","","","","","","","","Block length limit configuration.","Block weight limits &amp; base values configuration.","An opinionated builder for <code>Weights</code> object.","Contains the error value","Contains the success value","","A result of validating <code>BlockWeights</code> correctness.","<code>DispatchClass</code>-specific weight configuration.","","","","Average block initialization weight cost.","Set base block weight.","Base weight of block execution.","Base weight of single extrinsic of given class.","","","","","","","","","","","","","","","","","","","","Construct the <code>BlockWeights</code> object.","Construct the <code>BlockWeights</code> object or panic if it’s …","Start constructing new <code>BlockWeights</code> object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set parameters for particular class.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get per-class weight settings.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create new <code>BlockLength</code> with <code>max</code> for every class.","Maximal total length in bytes for each extrinsic class.","Maximal total weight consumed by all kinds of extrinsics …","Maximal weight of single extrinsic. Should NOT include …","Block maximal total weight for all extrinsics of given …","Create new <code>BlockLength</code> with <code>max</code> for <code>Operational</code> &amp; <code>Mandatory</code>","Weight limits for extrinsics of given dispatch class.","Block reserved allowance for all extrinsics of a …","Create new weights definition, with both <code>Normal</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies correctness of this <code>BlockWeights</code> object.","","","","","","Create a sensible default weights system given only …","System config account data","System config account id","System config nonce","The system pallet.","Trait to implement to give information about types used …","Migrate from dual <code>u32</code> reference counting to triple <code>u32</code> …","Migrate from unique <code>u32</code> reference counting to triple <code>u32</code> …","Migrate from unique <code>u8</code> reference counting to triple <code>u32</code> …","An implementation of <code>sp_runtime::traits::Block</code> to be used …","An implementation of <code>sp_runtime::traits::Block</code> to be used …","An implementation of <code>sp_runtime::traits::Block</code> to be used …","An unchecked extrinsic type to be used in tests.","The accompanying extrinsics.","The accompanying extrinsics.","The accompanying extrinsics.","The function that should be called.","The block header.","The block header.","The block header.","The signature, address, number of extrinsics have come …","Details of an account for which a private key is contained …","A type binding runtime-level <code>Public/Signature</code> pair with …","Create signed transaction.","The extrinsic type expected by the runtime.","Marker struct used to flag using all supported keys to …","Marker struct used to flag using any of the supported keys …","A raw crypto public key wrapped by <code>RuntimeAppPublic</code>.","A matching raw crypto <code>Signature</code> type.","The runtime’s call type.","A public key that is capable of identifying <code>AccountId</code>s.","A submission result.","A submission result.","A application-specific crypto.","Submit a signed transaction to the transaction pool.","A definition of types required to submit transactions from …","Submit an unsigned transaction onchain with a signed …","A message signer.","A matching <code>Signature</code> type.","A signature data.","Utility trait to be implemented on payloads that can be …","Provides an implementation for signing transaction …","A wrapper around the types which are used for signing.","Provides the ability to directly submit signed and unsigned","","Return a vector of the intersection between all available …","Use all available keys for signing.","Use any of the available keys for signing.","","","","","","","","","","","Check if there are any keys that could be used for signing.","","","Attempt to create signed extrinsic data that encodes call …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Runtime-specific <code>AccountId</code>.","Index on the provided list of accounts or list of all …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Return all available accounts in keystore.","Create a new Account instance","Return a public key that is expected to have a matching …","A runtime-specific <code>Public</code> key for that key pair.","Submit a signed transaction to the local pool.","","","Wraps the call into transaction, signs using given account …","Send an unsigned transaction with a signed payload.","","","Construct and sign given payload.","Sign payload with the private key to maps to the provided …","Sign the payload using the implementor’s provided public …","","","Sign a message.","","","Submit transaction onchain by providing the call and an …","A convenience method to submit an unsigned transaction …","Submits an unsigned call to the transaction pool.","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify signature against the provided public key.","Verify signature against payload.","","","","","","Use provided <code>accounts</code> for signing.","The full account information for a particular account ID.","Data to be associated with an account (other than …","Data to be associated with an account (other than …","The user account identifier type for the runtime.","The user account identifier type for the runtime.","The basic call filter to use in Origin. All origins are …","The basic call filter to use in Origin. All origins are …","The Block type used by the runtime. This is used by …","Map of block numbers to block hashes.","Maximum number of block number to block hash mappings to …","Maximum number of block number to block hash mappings to …","The maximum length of a block (in bytes).","The maximum length of a block (in bytes).","Block &amp; extrinsics weights: base values and limits.","Block &amp; extrinsics weights: base values and limits.","Contains a variant per dispatchable extrinsic that this …","The origin filter prevent the call to be dispatched.","<code>:code</code> was updated.","Configuration trait of this pallet.","The weight of runtime database operations the runtime can …","The weight of runtime database operations the runtime can …","Based on <code>Config</code>. Auto-generated by …","Error for the System pallet","Event for the System pallet.","An extrinsic failed.","An extrinsic completed successfully.","Failed to extract the runtime version from the new runtime.","Can be used to configure the genesis state of this pallet.","The output of the <code>Hashing</code> function.","The output of the <code>Hashing</code> function.","The hashing system (algorithm) being used in the runtime …","The hashing system (algorithm) being used in the runtime …","The name of specification does not match between the …","An account was reaped.","Stores the <code>spec_version</code> and <code>spec_name</code> of when the last …","Converting trait to take a source type and convert to …","Converting trait to take a source type and convert to …","The maximum number of consumers allowed on a single …","The maximum number of consumers allowed on a single …","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","A new account was created.","Suicide called when the account has non-default composite …","There is a non-zero reference count preventing the account …","This stores the number of previous transactions associated …","This stores the number of previous transactions associated …","It is signed by nobody, can be either:","A function that is invoked when an account has been …","A function that is invoked when an account has been …","Handler for when a new account has just been created.","Handler for when a new account has just been created.","What to do if the runtime wants to change the code to …","What to do if the runtime wants to change the code to …","Exposed trait-generic origin type.","The <code>Pallet</code> struct, the main type that implements traits …","Provides information about the pallet setup in the runtime.","Provides information about the pallet setup in the runtime.","On on-chain remark happened.","The system itself ordained this dispatch to happen: this …","The aggregated <code>RuntimeCall</code> type.","The aggregated <code>RuntimeCall</code> type.","The aggregated event type of the runtime.","The aggregated event type of the runtime.","The <code>RuntimeOrigin</code> type used by dispatchable calls.","The <code>RuntimeOrigin</code> type used by dispatchable calls.","The designated SS58 prefix of this chain.","The designated SS58 prefix of this chain.","It is signed by some public key and we provide the …","The specification version is not allowed to decrease …","","","Get the chain’s current version.","Get the chain’s current version.","","Default implementations of <code>DefaultConfig</code>, which can be …","See <code>Pallet::kill_prefix</code>.","See <code>Pallet::kill_storage</code>.","See <code>Pallet::remark</code>.","See <code>Pallet::remark_with_event</code>.","See <code>Pallet::set_code</code>.","See <code>Pallet::set_code_without_checks</code>.","See <code>Pallet::set_heap_pages</code>.","See <code>Pallet::set_storage</code>.","","","","","","","","","","","","","","","","","Default configurations of this pallet in a solo-chain …","Provides a viable default config that can be used with …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Type alias for the <code>BlockNumber</code> associated type of system …","Type alias for the <code>Extrinsic</code> associated type of system …","Type alias for the <code>Header</code>.","Type alias for the <code>Origin</code> associated type of system config.","Type alias for the <code>RuntimeCall</code> associated type of system …","Ensure that the origin <code>o</code> represents an unsigned extrinsic. …","Ensure that the origin <code>o</code> represents the root. Returns <code>Ok</code> …","Ensure that the origin <code>o</code> represents a signed extrinsic …","Ensure that the origin <code>o</code> represents either a signed …","Weights for frame_system using the Substrate node and …","Weight functions needed for frame_system.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","","The range of component <code>b</code> is <code>[0, 3932160]</code>.","","The range of component <code>b</code> is <code>[0, 3932160]</code>.","","Storage: System Digest (r:1 w:1) Proof Skipped: System …","","Storage: System Digest (r:1 w:1) Proof Skipped: System …","","Storage: Skipped Metadata (r:0 w:0) Proof Skipped: Skipped …","","","","","","","Blake2-256 Hash implementation.","Fixed-size uninterpreted hash type with 20 bytes (160 …","Fixed-size uninterpreted hash type with 32 bytes (256 …","Fixed-size uninterpreted hash type with 64 bytes (512 …","Abstraction around hashing","Keccak-256 Hash implementation.","Maximum value.","Maximum value.","The hash type produced.","Little-endian large integer type 256-bit unsigned integer.","Little-endian large integer type 512-bits unsigned integer.","","","","","","","","Computes the absolute difference between self and other.","Computes the absolute difference between self and other.","","","","","","","","","","","","","","","","","Extracts a byte slice containing the entire fixed hash.","Extracts a byte slice containing the entire fixed hash.","Extracts a byte slice containing the entire fixed hash.","Extracts a mutable byte slice containing the entire fixed …","Extracts a mutable byte slice containing the entire fixed …","Extracts a mutable byte slice containing the entire fixed …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","","","","","","","","","","Returns a mutable raw pointer to the value.","Returns a mutable raw pointer to the value.","Returns a mutable raw pointer to the value.","","","","Returns a constant raw pointer to the value.","Returns a constant raw pointer to the value.","Returns a constant raw pointer to the value.","","","","","","","","","Conversion to u128 with overflow checking","Conversion to u128 with overflow checking","Conversion to u32 with overflow checking","Conversion to u32 with overflow checking","Conversion to u64 with overflow checking","Conversion to u64 with overflow checking","Conversion to usize with overflow checking","Conversion to usize with overflow checking","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","Return if specific bit is set.","Return if specific bit is set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the least number of bits needed to represent the …","Return the least number of bits needed to represent the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return specific byte.","Return specific byte.","","","Checked addition. Returns <code>None</code> if overflow occurred.","","Checked addition. Returns <code>None</code> if overflow occurred.","","Checked division. Returns <code>None</code> if <code>other == 0</code>.","Checked division. Returns <code>None</code> if <code>other == 0</code>.","","Checked multiplication. Returns <code>None</code> if overflow occurred.","","","Checked multiplication. Returns <code>None</code> if overflow occurred.","Checked negation. Returns <code>None</code> unless <code>self == 0</code>.","Checked negation. Returns <code>None</code> unless <code>self == 0</code>.","Checked exponentiation. Returns <code>None</code> if overflow occurred.","Checked exponentiation. Returns <code>None</code> if overflow occurred.","Checked modulus. Returns <code>None</code> if <code>other == 0</code>.","Checked modulus. Returns <code>None</code> if <code>other == 0</code>.","","Checked subtraction. Returns <code>None</code> if overflow occurred.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a pair <code>(self / other, self % other)</code>.","Returns a pair <code>(self / other, self % other)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create <code>10**n</code> as this type.","Create <code>10**n</code> as this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Constructs a hash type from the given reference to the …","Constructs a hash type from the given bytes array of fixed …","Constructs a hash type from the given reference to the …","","Returns the argument unchanged.","Constructs a hash type from the given bytes array of fixed …","","Constructs a hash type from the given reference to the …","Constructs a hash type from the given reference to the …","","Returns the argument unchanged.","","","Constructs a hash type from the given bytes array of fixed …","Constructs a hash type from the given reference to the …","Constructs a hash type from the given reference to the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts from big endian representation bytes in memory.","Converts from big endian representation bytes in memory.","Convert from a decimal string.","Convert from a decimal string.","","","","","","","Converts from little endian representation bytes in memory.","Converts from little endian representation bytes in memory.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Create a new fixed-hash from the given slice <code>src</code>.","Create a new fixed-hash from the given slice <code>src</code>.","Create a new fixed-hash from the given slice <code>src</code>.","","","Creates a hash type instance from the given string.","Creates a hash type instance from the given string.","Creates a hash type instance from the given string.","Converts a string slice in a given base to an integer. …","","Converts a string slice in a given base to an integer. …","","Multiplies two 256-bit integers to produce full 512-bit …","","","","","","","Produce the hash of some byte-slice.","","","","","","","Produce the hash of some codec-encodable value.","","","","","","","","","","","","","","","","","","","","","","Compute the highest <code>n</code> such that <code>n * n &lt;= self</code>.","Compute the highest <code>n</code> such that <code>n * n &lt;= self</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this is zero.","","","Whether this is zero.","Returns <code>true</code> if no bits are set.","Returns <code>true</code> if no bits are set.","Returns <code>true</code> if no bits are set.","Returns the number of leading zeros in the binary …","Returns the number of leading zeros in the binary …","Returns the size of this hash in bytes.","Returns the size of this hash in bytes.","Returns the size of this hash in bytes.","Low 2 words (u128)","Low 2 words (u128)","Conversion to u32","Conversion to u32","Low word (u64)","Low word (u64)","","","","","","The maximum value which can be inhabited by this type.","The maximum value which can be inhabited by this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One (multiplicative identity) of this type.","","One (multiplicative identity) of this type.","The ordered Patricia tree root of the given <code>input</code>.","","","Addition which overflows and returns a flag if it does.","Addition which overflows and returns a flag if it does.","Multiply with overflow, returning a flag if it does.","Multiply with overflow, returning a flag if it does.","Negation with overflow.","Negation with overflow.","Fast exponentiation by squaring. Returns result and …","Fast exponentiation by squaring. Returns result and …","Subtraction which underflows and returns a flag if it does.","Subtraction which underflows and returns a flag if it does.","","","","","","Fast exponentiation by squaring …","Fast exponentiation by squaring …","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content …","Create a new hash with cryptographically random content …","Create a new hash with cryptographically random content …","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value using the …","Assign <code>self</code> to a cryptographically random value using the …","Assign <code>self</code> to a cryptographically random value using the …","","","","","","","Returns a new fixed hash where all bits are set to the …","Returns a new fixed hash where all bits are set to the …","Returns a new fixed hash where all bits are set to the …","Addition which saturates at the maximum value (Self::MAX).","Addition which saturates at the maximum value (Self::MAX).","Multiplication which saturates at the maximum value..","Multiplication which saturates at the maximum value..","Subtraction which saturates at zero.","Subtraction which saturates at zero.","","","","","","","","","","","","","","","","","","","","","","","","","","Write to the slice in big-endian format.","Write to the slice in big-endian format.","Returns the inner bytes array.","Returns the inner bytes array.","Returns the inner bytes array.","","","","","","Write to the slice in little-endian format.","Write to the slice in little-endian format.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as native-endian.","Returns the lowest 8 bytes interpreted as native-endian.","Returns the lowest 8 bytes interpreted as native-endian.","","","","","","","","","","","","","Returns the number of trailing zeros in the binary …","Returns the number of trailing zeros in the binary …","The Patricia tree root of the given mapping.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero (additive identity) of this type.","","Zero (additive identity) of this type.","Returns a new zero-initialized fixed hash.","Returns a new zero-initialized fixed hash.","Returns a new zero-initialized fixed hash.","Types and traits for runtimes that implement runtime APIs.","The main prelude of <code>FRAME</code> for building runtimes.","The main prelude of FRAME for building runtimes, and in …","A set of opinionated types aliases commonly used in …","The <code>ConsensusEngineId</code> of AuRa.","The API to query account nonce.","The concrete type that provides the api.","An error describing which API call failed.","Extends the runtime api implementation with some common …","The identity of a particular API interface that the …","Auxiliary wrapper that holds an api instance and binds it …","A vector of pairs of <code>ApiId</code> and a <code>u32</code> for version.","","The result of applying of an extrinsic.","Something that can be converted into a <code>TrieBackend</code>.","API necessary for block authorship with aura.","Identity of a Grandpa authority.","A list of Grandpa authorities with associated weights.","The grandpa crypto scheme defined via the keypair type.","Signature for a Grandpa authority.","The weight of an authority.","The <code>BlockBuilder</code> api trait that provides the required …","Something to identify a block.","Something which fulfills the abstract idea of a Substrate …","Borrowed data.","The borrowed mode that wraps a <code>&amp;&#39;static str</code>.","The log target to be used by client code.","Something that can call into the an api at a given block.","Parameters for <code>CallApiAt::call_api_at</code>.","The context in which a call is done.","A catch up message for this chain’s block type.","The result of checking inherents.","A commit message for this chain’s block type.","Commit the transaction.","A compact commit message for this chain’s block type.","Something that can be constructed to a runtime api.","The <code>Core</code> runtime api that every Substrate runtime needs to …","Trait that allows zero-copy read of value-references from …","Derive <code>parity_scale_codec::Decode</code> and for struct and enum.","Extension trait to <code>Decode</code> for decoding with a maximum …","Trait that allows zero-copy write of value-references to …","Derive <code>parity_scale_codec::Encode</code> and …","Wrapper object for GRANDPA equivocation proofs, useful for …","Proof of voter misbehavior on a given set id. …","Contains the error value","Contains the error value","An error type when fetching data is not possible.","Marker trait for types that should be registered as …","Stores extensions that should be made available through …","Type for extrinsics.","","","","The <code>ConsensusEngineId</code> of GRANDPA.","APIs for integrating the GRANDPA finality gadget into …","A GRANDPA justification for block finality, it includes a …","Identify by block header hash.","Header hash type","Block hash type.","Abstraction around hashing","Trait describing an object that can hash a slice of bytes. …","Hashing algorithm","Extract the hashing type for a block.","Header type.","Something which fulfills the abstract idea of a Substrate …","The identifier of the runtime api.","Trie backend with in-memory storage.","Inherent data to include in a block.","Key type for GRANDPA module.","An identifier for a type of cryptographic key.","The length in bytes of the <code>Hasher</code> output.","Maximum nesting level for extrinsics.","A GRANDPA message for a substrate chain.","The <code>Metadata</code> api trait that returns metadata for the …","Identify by block number.","Header number.","Extract the number type for a block.","The call is happening in some offchain context.","The offchain worker api.","Contains the success value","Contains the success value","The call is happening in some on-chain context like …","An opaque type used to represent the key ownership proof …","Stores the encoded <code>RuntimeMetadata</code> for the native side as …","The output type of the <code>Hasher</code>","The hash type produced.","The set of changes that are overlaid onto the backend.","Owned data.","The owned mode that wraps a <code>String</code>.","A precommit message for this chain’s block type.","A precommit message.","Proof of equivocation at precommit stage.","A prevote message for this chain’s block type.","A prevote message.","Proof of equivocation at prevote stage.","A primary propose message for this chain’s block type.","A primary proposal message.","A type that records all accessed trie nodes and generates …","Something that provides a runtime api.","The number of bytes required to encode a <code>RuntimeApiInfo</code>.","The log target to be used by runtime code.","Type of the raw storage iterator.","Rollback the transaction.","The round indicator.","The actual runtime api that will be constructed.","Something that provides information about a runtime api.","A string that wraps a <code>&amp;&#39;static str</code> in the runtime and …","Runtime version. This should not be thought of as classic …","Persistent storage prefix used by the Offchain Worker API …","A scheduled change of authority set.","Session keys runtime api.","The monotonic identifier of a GRANDPA set of authorities.","A signed message.","Unit type wrapper that represents a slot.","A slot duration defined in milliseconds.","A state backend is used to read state data and can have …","The state backend that is used to store the block states.","","Different possible state version.","What to use to build <code>HashMap</code>s with this <code>Hasher</code>.","","A proof that some set of key-value pairs are included in …","The <code>TaggedTransactionQueue</code> api trait for interfering with …","Describes on what should happen with a storage transaction.","Information on a transaction’s validity and, if valid, …","Patricia trie-based backend. Transaction type is an …","Builder for creating a <code>TrieBackend</code>.","Type of trie backend storage.","Type of trie backend storage.","","","Old state version, no value nodes.","New state version can use value nodes.","The version of the runtime api.","","","","","","","","","","","","","","","","","","Enable/disable the given code depending on …","Enable/disable the given code depending on <code>feature = &quot;std&quot;</code> …","Get current account nonce of given <code>AccountId</code>.","","","","Add transaction index operation.","Returns the version of the given api.","Returns the api version found for api with <code>id</code>.","List of supported API “features” along with their …","Apply the given extrinsic.","","Apply the given transaction to this backend and set the …","The encoded arguments of the function.","","","Returns <code>self</code> as <code>sp_std::time::Duration</code>.","Returns <code>self</code> as a <code>u64</code> representing the duration in …","Return the extension as <code>&amp;mut dyn Any</code>.","","","Return the type as <code>TrieBackend</code>.","","The block id that determines the state that should be …","","","Authentication data for the commit.","<code>authoring_version</code> is the version of the authorship …","Return the current set of authorities.","Get backend storage reference.","Get backend storage reference.","The base hash. See struct docs.","The base number. See struct docs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the configured <code>TrieBackend</code>.","Calls the given api function with the given encoded …","The call context of this call.","Check if this version matches other version for calling …","Get an iterator over all top changes as been by the …","Verifies the equivocation proof by making sure that both …","Check that the inherents are valid. The inherent data will …","Check a message signature by encoding the message as a …","Check a message signature by encoding the message as a …","Get an optional iterator over all child changes stored …","Get the child merkle value or None if there is nothing …","","Returns an iterator over the keys (in lexicographic order) …","Get child keyed child storage or None if there is nothing …","Returns a double-Option: None if the key is unknown (i.e. …","","All changes to the child storages.","Get child keyed storage value hash or None if there is …","","Calculate the child storage root, with given delta over …","Generate the child storage root using <code>backend</code> and all …","","Get an iterator over all child changes as seen by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the merkle value or None if there is nothing …","","","","","","Commit given transaction to storage.","","Commit the last transaction started by <code>start_transaction</code>.","Construct an instance of the runtime api.","Create a vector of Api declarations.","Get current GRANDPA authority set id.","","Attempt to deserialise the value from input.","","","","","","","","","Try to decode this <code>OpaqueKeyOwnershipProof</code> into the given …","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>Self</code> and consume all of the given input data.","","","","","","","","","","","","","","","","","Attempt to deserialize the value from input into a …","Decode the given public session keys.","Decode <code>Self</code> with the given maximum recursion depth and …","","","","","","","","","","","","","","","","","<code>Decode</code> while giving a “version hint”","Split the block into header and list of extrinsics.","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of blocks to delay.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deregister extension for the given <code>type_id</code>.","","","","","Deserialize the runtime API info serialized by …","Returns a reference to the digest.","Get a mutable reference to the digest.","Aura (Authority-Round) digests","Drain all changes into a <code>StorageChanges</code> instance. Leave …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new empty proof.","","","Convert self to an owned vector.","","","","","","","Creates an encoded block from the given <code>header</code> and …","","","","","Convert self to a slice and append it to the destination.","","","","","","","","","","","","","","Returns the estimated encoded size of the compact proof.","Returns the fixed encoded size of the type.","Calculates the encoded size.","Call this before transfering control to the runtime.","","","","","","","","","","","Compare with another in-memory backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get backend essence reference.","Execute the given block.","Execute the given closure inside a new transaction.","true if a key exists in child storage.","true if a key exists in storage.","Call this when control returns from the runtime.","","The extensions that should be used for this call.","Extract the recorded proof.","Extract the <code>StorageProof</code>.","Returns a reference to the list of extrinsics.","Returns a reference to the extrinsics root.","Is this a fatal error?","Finish the current block.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Initialize from the given milliseconds.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Create a new slot by calculating it from the given …","Calculate the storage root, with given delta over what is …","The name of the function that should be called.","Generates a proof of key ownership for the given authority …","Generate a set of session keys with optionally using the …","Returns the data for the requested inherent.","Get an error out of the result.","","","","Return a mutable reference to the requested extension.","Extend storage info for benchmarking db","Get the whitelist for tracking db reads/writes","Get the current GRANDPA authorities and weights. This …","Checks if the given api is implemented and versions match.","Check if the given api is implemented and the version …","Check if the given api with <code>api_id</code> is implemented and the …","Compute the hash of the provided slice of bytes returning …","","","Produce the hash of some byte-slice.","Returns the hash of the header.","Returns the hash of the block.","","Create a block ID from a hash.","Produce the hash of some codec-encodable value.","Returns a reference to the header.","The Id of the signer","","","","","","","","","","","","","","","","","Name of the implementation of the spec. This is of little …","","Version of the implementation of the specification.","Generate inherent extrinsics. The inherent data will vary …","","","","","","","","","","","","","","","","","","","","","","","","","","","Init the <code>RuntimeLogger</code>.","Initialize a block with the given header.","Initialize the <code>extensions</code> for the given block <code>at</code> by using …","","Insert values into backend trie.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Encode as a compact proof with default trie layout.","Convert into an iterator over all contained errors.","","","","Convert into the inner type.","Convert into an iterator over encoded trie nodes in …","Creates a <code>MemoryDB</code> from <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into plain node vector.","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes self and returns underlying storage.","Convert the api object into the storage changes that were …","","","","","","Whether no changes are contained in the top nor in any of …","Returns whether this is an empty proof.","Check if this block ID refers to the pre-genesis state.","Returns an iterator over the keys (in lexicographic order) …","Returns a mutable iterator over all extensions.","Create an iterator over encoded trie nodes in …","Get an iterator over keys.","Get the number of inherents in this instance","Encode round message localized to a given round and set id.","Encode round message localized to a given round and set id …","All changes to the main storage.","","Merge <code>other</code> into <code>self</code>.","Merges multiple storage proofs covering potentially …","The internal message which has been signed.","Returns the metadata of a runtime.","Returns the metadata at a given version.","Returns the supported metadata versions.","","Creates new header.","Creates new block from header and extrinsics.","Create new instance of <code>Self</code>.","Create a new <code>EquivocationProof</code> for the given set id and …","Create a new <code>OpaqueKeyOwnershipProof</code> using the given …","Create a new instance.","Create a new instance.","Create a new builder instance.","Constructs a storage proof from a subset of encoded trie …","Creates a new instance with the given metadata blob.","Create a new builder instance.","The new authorities after the change, along with their …","Return the next key in child storage in lexicographic …","","Return the next key in storage in lexicographic order or …","","Returns a reference to the header number.","Create a block ID from a number.","Read only access ot offchain overlay.","Consume all changes (top + children) and return them.","Offchain state changes to write to the offchain database.","Starts the off-chain task for given block header.","Starts the off-chain task for given block number.","Returns the authority id of the equivocator.","Returns the authority id of the equivocator.","Is this result ok?","The ordered Patricia tree root of the given <code>input</code>.","The overlayed changes that are on top of the state.","Get an iterator over key/value pairs.","Returns a reference to the parent hash.","","","","","Create a block ID for a pre-genesis state.","Precommits for target block or any block after it that …","Precommits for target block or any block after it that …","Precommits for target block or any block after it that …","Prevotes for target block or any block after it that …","Returns the current active proof recorder.","Estimate proof size","Put data for an inherent into the internal storage.","Put an error into the result.","Returns a lifetimeless raw storage iterator.","","Get the read/write count of the db","Start recording all accessed trie nodes for generating …","The optional proof recorder for recording storage accesses.","Register the given extension.","Register an <code>Extension</code> that will be accessible while …","Register stats from overlay of state machine.","","Register extension <code>extension</code> using the given <code>type_id</code>.","Replace the data for an inherent.","Get the read/write count of the db","Rollback the last transaction started by <code>start_transaction</code>.","Get trie root.","Returns the round number at which the equivocation …","","Returns the round number when the equivocation happened.","Round number.","Returns the runtime api. The returned instance will keep …","Returns the runtime version at the given block.","Saturating addition.","Saturating subtraction.","","","","","","Crude and simple way to serialize the <code>RuntimeApiInfo</code> into …","Set the <code>CallContext</code> to be used by the runtime api calls …","Ask to collect/not to collect extrinsics indices where …","Sets the extrinsic root.","Returns the set id at which the equivocation occurred.","Sets the header number.","Write a key value pair to the offchain storage overlay.","Sets the parent hash.","Set trie root.","Sets the state root.","Set a new value for the specified key.","Update the whitelist for tracking db reads/writes","Localizes the message to the given set and round and signs …","The signature on the message.","","","If possible give a hint of expected size of the encoding.","","","","","","","","","","","","","","Attempt to skip the encoded value from input.","Returns the slot duration for Aura.","","","Identifies the different Substrate runtimes. There’ll be …","Version of the runtime specification.","","Start a new nested transaction.","Get the state <code>at</code> the given block.","Returns a reference to the state root.","If defined, values in state of size bigger or equal to …","Returns state version to use for update.","Version of the state implementation used by this runtime. …","Enable/disable the given code depending on …","Enable/disable the given code depending on <code>feature = &quot;std&quot;</code> …","Get keyed storage or None if there is nothing associated.","Returns a double-Option: None if the key is unknown (i.e. …","","Get keyed storage value hash or None if there is nothing …","","Calculate the storage root, with given delta over what is …","Generate the storage root using <code>backend</code> and all changes as …","","","","Submits an unsigned extrinsic to report an equivocation. …","The target block’s hash.","The target block’s hash.","The target block’s hash.","The target block’s hash.","The target block’s hash.","The target block’s number","The target block’s number.","The target block’s number","The target block’s number.","The target block’s number.","","Encode as a compact proof with default trie layout.","","","","","","","","","","","","","","","","","Creates a <code>MemoryDB</code> from <code>Self</code> reference.","","","","","","","","","","","","","","","","","","","","","","","","A transaction for the backend that contains all changes …","Returns the current nesting depth of the transaction stack.","Changes to the transaction index,","Get an list of all index operations.","The storage root after applying the transaction.","All existing calls (dispatchables) are fully compatible …","The Patricia tree root of the given mapping.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>TypeId</code> of this <code>Extension</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copy the state, with applied updates","Merge trie nodes into this backend.","Query backend usage statistics (i/o, memory)","","","","Convert self to a slice and then invoke the given closure …","","","","","","Validate the transaction.","Validate the transaction.","Validate the transaction.","Returns mutable reference to current value. If there is no …","Creates a <code>Vec</code> containing the arguments.","Returns the version of the runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","Wipe the state database.","","Use the given <code>cache</code> for the to be configured <code>TrieBackend</code>.","Use the given optional <code>cache</code> for the to be configured …","Use the given optional <code>recorder</code> for the to be configured …","Use the given <code>recorder</code> for the to be configured <code>TrieBackend</code>…","Wrap the given <code>TrieBackend</code>.","","","","","","","","A digest item which is usable with aura consensus.","If this item is an AuRa pre-digest, return the slot number","If this item is an Aura seal, return the signature.","Construct a digest item which contains the slot number","Construct a digest item which contains a signature on the …","An Aura authority identifier using Ed25519 as its crypto.","An Aura authority keypair using Ed25519 as its crypto.","An Aura authority signature using Ed25519 as its crypto.","Auxiliary trait to extract Aura inherent data.","The Aura inherent identifier.","Provides the slot duration inherent data for <code>Aura</code>.","The type of the Aura inherent.","Get aura inherent data.","Replace aura inherent data.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Creates the inherent data provider by calculating the slot …","","Calls <code>U::from(self)</code>.","","","Create a new instance with the given slot.","","","","","","","","","An Aura authority identifier using S/R 25519 as its crypto.","An Aura authority keypair using S/R 25519 as its crypto.","An Aura authority signature using S/R 25519 as its crypto.","All of the types related to the FRAME runtime executive.","All of the types related to the FRAME runtime executive.","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","Const types that can easily be used in conjuncture with <code>Get</code>…","All of the types related to the FRAME runtime executive. …","The version of the native runtime.","All of the types related to the FRAME runtime executive.","Types to define your runtime version. Runtime version. …","List of supported API “features” along with their …","Apply extrinsic outside of the block execution function.","<code>authoring_version</code> is the version of the authorship …","","","","","Check if this version matches other version for authoring …","Authoring runtimes (<code>spec_version</code>s) that this native …","Macro to amalgamate the runtime into <code>struct Runtime</code>. …","Types to define your runtime version. Create a const …","","","","","Macro to easily derive the <code>Config</code> trait of various pallet …","","","Actually execute all transitions for <code>block</code>.","","Execute all <code>OnRuntimeUpgrade</code> of this runtime, and return …","Finalize the block - it is up the caller to ensure that …","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Name of the implementation of the spec. This is of little …","Macro to implement runtime APIs.","Version of the implementation of the specification.","","","Start the execution of a particular block.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Start an offchain worker and generate extrinsics.","Macros to easily impl traits such as <code>Get</code> for types. Macro …","Macros to easily impl traits such as <code>Get</code> for types. Create …","Basic runtime version info.","Types to define your runtime version.","Identifies the different Substrate runtimes. There’ll be …","Version of the runtime specification.","Version of the state implementation used by this runtime. …","All existing calls (dispatchables) are fully compatible …","","","","","","","","","","","Check a given signed transaction for validity. This doesn…","","","Complex storage builder stuff.","Struct containing data needed for a storage.","","Assimilate the storage for this module into pre-existing …","","","","Build the storage out of this builder.","Children trie storage data. Key does not include prefix, …","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","Top trie storage data.","","","","","","","The corresponding account-id type of <code>Signature</code>.","The block-number type, which should be fed into …","The block type, which should be fed into …","An ECDSA/SECP256k1 signature.","An Ed25519 signature.","The opaque block type. This is the same <code>BlockOf</code>, but it has","A signature type compatible capably of handling multiple …","An Sr25519 signature.","Default set of signed extensions exposed from the …","The accompanying extrinsics.","The accompanying extrinsics.","The block header.","The block header.","An implementation of <code>sp_runtime::traits::Block</code> to be used …","An implementation of <code>sp_runtime::traits::Block</code> to be used …","An implementation of <code>sp_runtime::traits::Block</code> to be used …","An unchecked extrinsic type to be used in tests.","Type alias for Externalities implementation used in tests.","Other helper macros from <code>frame_support</code> that help with …","Other helper macros from <code>frame_support</code> that help with …","Other helper macros from <code>frame_support</code> that help with …","Other helper macros from <code>frame_support</code> that help with …","Other helper macros from <code>frame_support</code> that help with …","Other helper macros from <code>frame_support</code> that help with …","Storage backend.","Extensions.","The accompanying extrinsics.","The accompanying extrinsics.","The accompanying extrinsics.","","The function that should be called.","The block header.","The block header.","The block header.","Feature gate some code that should only be run when <code>std</code> …","The signature, address, number of extrinsics have come …","State version to use during tests.","Other helper macros from <code>frame_support</code> that help with …","The account ID that this can be transformed into.","Type of the signer.","The type which encodes the sender identity.","","The AccountId used across the system.","This type can be converted into and possibly from an …","A lookup implementation returning the <code>AccountId</code> from a …","Trait for creating an asset account with a deposit taken …","A non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …","Any additional data that will go into the signed payload. …","","Operation may result in account going out of existence.","Safe mode is already entered.","Safe mode is already exited.","Call is already paused.","The message was already processed.","Call is already unpaused.","Means of signature verification of an application key.","Input that adds infinite number of zero after wrapped …","An “executable” piece of information, used by the …","Adapter struct for turning an <code>OrderedMembership</code> impl into …","","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …","Some amount of backing from a group. The precise …","The message data format is unknown (e.g. unrecognised …","An error type that indicates that the origin is invalid.","The balance of an account.","The type for currency units of the deposit.","Status of funds.","Implemented by pallets, allows defining logic to run prior …","Blake2-256 Hash implementation.","A “checkable” piece of information, used by the …","Something which fulfills the abstract idea of a Substrate …","Something that can convert a <code>BlockId</code> to a number or a hash.","Type of <code>BlockNumber</code> to provide.","Block number type.","Get current block number","","A trait to define the build function of a genesis config …","The function call.","The type which encodes the call to be dispatched.","Type by which we can dispatch. Restricts the …","The call to validate","Runtime call type, as in <code>frame_system::Config::Call</code>","How to unambiguously identify a call.","The function and pallet name of the Call.","The trait implemented by the overarching enumeration of …","Trait for type that can handle incremental changes to a …","Something that can be checked for equality and printed out …","Extract the digest type for a block. A “checkable” …","Returned if <code>check</code> succeeds.","Returned if <code>check</code> succeeds.","Performs addition that returns <code>None</code> instead of wrapping …","Convenience type to work around the highly unergonomic …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","A <code>TryMorph</code> implementation to reduce a scalar by a …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","","","Trait for things that can be clear (have no bits set). For …","Guard type for clearing all pushed constraints from a …","","…","Some sort of cost taken from account temporarily in order …","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","A trait for querying whether a type can be said to “…","A trait for querying bound for the length of an …","A trait for querying whether a type can be said to “…","Infallible conversion trait. Generic over both source and …","Reversing infallible conversion trait. Generic over both …","A structure that performs standard conversion using the …","Adapter which turns a Get implementation into a Convert …","The message data is bad (e.g. decoding returns an error).","The version of a crate.","Abstraction over a fungible assets system.","The currency that this schedule applies to.","This will be filled out by the <code>pallet</code> macro.","A trait to handle errors and options when you are really …","Defensively calculates the maximum of two values.","Defensively calculates the minimum of two values.","Subset of methods similar to <code>Defensive</code> that can only work …","Subset of methods similar to <code>Defensive</code> that can only work …","A variant of <code>Defensive</code> with the same rationale, for the …","Construct an object by defensively truncating an input if …","","Trait used to check whether a given validator is currently …","Shortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.","A lazy call (module function and argument values) that can …","“OR gate” implementation of <code>EnsureOrigin</code>, <code>Success</code> type …","“OR gate” implementation of <code>EnsureOrigin</code> allowing for …","Can enqueue messages for multiple origins.","Adapter type to transform an <code>EnqueueMessage</code> with an origin …","","Performs addition that returns <code>ArithmeticError</code> instead of …","Performs self addition that returns <code>ArithmeticError</code> …","Performs division that returns <code>ArithmeticError</code> instead of …","Performs self division that returns <code>ArithmeticError</code> …","Extends <code>FixedPointNumber</code> with the Ensure family functions.","Similar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.","A trait to ensure the inherent are before non-inherent in …","Similar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.","Performs multiplication that returns <code>ArithmeticError</code> …","Performs self multiplication that returns <code>ArithmeticError</code> …","“OR gate” implementation of <code>EnsureOrigin</code> allowing for …","Meta trait that supports all immutable arithmetic <code>Ensure*</code> …","Meta trait that supports all assigned arithmetic <code>Ensure*</code> …","Some sort of check on the origin is performed by this …","<code>EnsureOrigin</code> implementation that checks that an origin has …","Some sort of check on the origin is performed by this …","Performs subtraction that returns <code>ArithmeticError</code> instead …","Performs self subtraction that returns <code>ArithmeticError</code> …","Implementation of <code>PrivilegeCmp</code> that only checks for equal …","An implementation of <code>Contains</code> which contains only equal …","Contains the error value","The error type that gets returned when a collection can’…","The error type that will be returned by the functions.","Something that can estimate the fee of a (frame-based) …","Something that can estimate at which block scheduling of …","Something that can estimate at which block the next …","A <code>Contains</code> implementation that contains every value.","A <code>Contains</code> implementation that contains everything except …","Something that can execute a given block.","Errors that can happen when attempting to execute an …","Simple boolean for whether an account needs to be kept in …","Something that acts like an <code>Extrinsic</code>.","Type for extrinsics.","An extrinsic on which we can get access to call.","Implementor is an <code>Extrinsic</code> and provides metadata about …","In order to pay some other (higher-level) fees.","","","Trait to add a constraint onto the filter.","Guard type for pushing a constraint to a <code>FilterStack</code> and …","A trait for finding the author of a block header based on …","The resource footprint of a bunch of blobs. We assume only …","Funds are free, as corresponding to <code>free</code> item in Balances.","Converter <code>struct</code> to use a <code>ContainsPair</code> implementation for …","A trait to define the build function of a genesis config, …","A trait for querying a single value from a type.","Retrieve the backing from an object’s ref.","Gets the function index of the Call.","Gets the metadata for the Call - function name and pallet …","Gets the function name of the Call.","Implement Get by returning Default for any type that …","A marker trait for something that knows the type of the …","A marker trait for something that knows the type of the …","Provides information about the storage version of a pallet.","The hasher used in the runtime.","A simple, generic one-parameter event notifier/handler.","Handles incoming messages for a single origin.","Abstraction around hashing","Header hash type","Block hash type.","Super trait with all the attributes for a hashing output.","Hashing algorithm","Extract the hashing type for a block.","Something which fulfills the abstract idea of a Substrate …","Header type.","The pallet hooks trait. This is merely an umbrella trait …","Unique identifier of this signed extension.","Unique numerical identifier for an instance.","Full identification of <code>ValidatorId</code>.","A type for converting <code>ValidatorId</code> to <code>Identification</code>.","The full identification of a key owner and the stash …","Some type that is able to be collapsed into an account ID. …","A structure that performs identity conversion.","A lookup implementation returning the input value.","A trait for a not-quite Linear Type that tracks an …","A trait representing an incrementable type.","","An opaque set of information attached to the transaction. …","Trait for type that can handle the initialization of …","A <code>Contains</code> implementation which contains all members of …","An instance of a pallet in the storage.","Simple trait for providing a filter over a reference to …","The available weight was insufficient to execute the …","A trait implementing integer square root.","See <code>Hooks::integrity_test</code>.","Trivial utility for implementing <code>Contains</code>/<code>OrderedMembership</code>…","Determine if a <code>MemberId</code> is a valid member.","Something that can be checked to be a of sub type <code>T</code>.","Trait to be used when types are exactly same.","Keccak-256 Hash implementation.","Operation must not result in the account going out of …","The key type expected.","Something which can compute and check proofs of a …","Types bound to this opaque keys that provide the key type …","Trait to be used by block producing consensus engine …","A lazy value.","Anything that can have a <code>::len()</code> method.","A storage price that increases linearly with the number of …","An identifier for a lock. Used for disambiguating …","A currency whose accounts can have liquidity restrictions.","Trait to handle NFT locking mechanism to ensure …","Means of changing one type into another in a manner …","An error that indicates that a lookup failed.","The maximum encoded size for the implementing type.","The maximum length of preimage we can store.","A derivative <code>EnsureOrigin</code> implementation. It mutates the …","The maximum number of locks a user should have on their …","The maximal length any enqueued message may have.","The maximal length any enqueued message may have.","Maximum size of a preimage.","Fallible conversion trait returning an Option. Generic …","Reversing fallible conversion trait returning an Option. …","A type that implements Display when in std environment.","Definition for a bi-directional, fallible conversion …","A type that implements FromStr when in std environment.","A type that implements Hash when in std environment.","A type that implements Serialize when in std environment …","A type that implements Serialize, DeserializeOwned and …","A type that can be used in runtime structures.","The quantity used to denote time; usually just a …","The quantity used to denote time; usually just a …","","","Extensible conversion trait. Generic over only source …","Implementation of <code>Morph</code> which converts between types using …","A <code>TryMorph</code> implementation to enforce an upper limit for a …","","A negative imbalance (funds have been destroyed but none …","The opaque token type for an imbalance. This is returned …","<code>EnsureOrigin</code> implementation that always fails.","Special marker struct if no storage version is set for a …","The <code>NodeBlock</code> type.","No item.","","Services queues by doing nothing.","The call could not be found in the runtime.","The referenced message was not found.","A <code>Contains</code> implementation that contains no value.","Header number.","Extract the number type for a block.","Off-chain computation trait.","Contains the success value","See <code>Hooks::on_finalize</code>.","A trait that will be called at genesis.","See <code>Hooks::on_idle</code>.","See <code>Hooks::on_initialize</code>.","The account with the given id was reaped.","Handler for when a new account has been created.","See <code>Hooks::on_runtime_upgrade</code>.","A trait which is called when the timestamp is set in the …","Handler for when some currency “account” decreased in …","Defines a multiplicative identity element for <code>Self</code>.","A session handler for specific key type.","","Opaque data type that may be destructured into a series of …","The oppositely imbalanced type. They come in pairs.","The transport from where a message originates.","Methods available on <code>frame_system::Config::RuntimeOrigin</code>.","An item of the opposite type to the <code>Self</code> on which the …","An unspecified error.","The type into which <code>A</code> is mutated.","The type into which <code>A</code> is mutated.","The output type of the product of <code>self</code> and <code>Other</code>.","The hash type produced.","Message processing was not attempted because it was not …","Addresses a specific overweight message.","Unique module prefix. E.g. “InstanceNMyModule” or “…","Trait indicating that the implementing type is going to be …","Provides information about the pallet itself and its setup …","Provides information about the pallet itself and its setup …","Information regarding an instance of a pallet.","Provide information about a bunch of pallets.","The caller origin, overarching type of all pallets origins.","Similar to <code>StorageInfoTrait</code>, a trait to give partial …","Zero-sized type used to mark things that “act like” …","","","A positive imbalance (funds have been created but none …","The opaque token type for an imbalance. This is returned …","Shortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.","Additional information that is returned by <code>dispatch</code>. Can …","The type that encodes information that can be passed from …","A interface for looking up preimages from their hash on …","A interface for managing preimages to hashes on chain.","Trait for things which can be printed from the runtime.","Something that can compare privileges of two origins.","Can process messages from a specific origin.","Errors that can happen when attempting to process a …","The proof of membership itself.","A interface for looking up preimages from their hash on …","The resource footprint of a queue.","The queue is paused and no message can be executed from it.","Provides information on paused queues.","In order to reserve some funds for a later return or …","A trait that is able to provide randomness.","","Ranked membership data structure.","Mutator which reduces a scalar by a particular amount.","Morpher to disregard the source value and replace with …","A currency where funds can be reserved from the user.","An identifier for a reserve. Used for disambiguating …","Funds are reserved, as corresponding to <code>reserved</code> item in …","The <code>RuntimeBlock</code> type.","Every function call from your runtime has an origin, which …","The origin type of the runtime, (i.e. …","Prefix given to a storage to isolate from other storages …","The storage key postfix that is used to store the …","Can put the runtime into a safe mode.","The error type for <code>SafeMode</code>.","A trait to notify when the runtime enters or exits safe …","An item of the same type as the <code>Self</code> on which the return …","Return type used when we need to return one of two items, …","Convenience type to work around the highly unergonomic …","Saturating arithmetic operations, returning maximum or …","Multiply and divide by a number that isn’t necessarily …","Can service queues and execute overweight messages.","The signature type of the extrinsic.","The type of the address that signed the extrinsic.","The additional data that is specific to the signed …","Something that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…","The payload we carry for signed extrinsics.","Means by which a transaction may be extended. This type …","Information about a <code>SignedExtension</code> for the runtime …","Signed extensions attached to this <code>Extrinsic</code>.","Either a positive or a negative imbalance.","Type of the signer.","A meta trait for all bit ops.","A trait for a set which can enumerate its members in order.","Type to lookup from.","Type to lookup from.","The type used to archive the stack.","Means of changing one type into another in a manner …","Metadata about storage from the runtime.","A trait to give information about storage.","An instance of a storage in a pallet.","A shim for placing around a storage item in order to use …","The storage version of a pallet.","A interface for managing preimages to hashes on chain.","An abstraction of a value stored within storage, but …","A return type.","A return type.","In order to tip a validator for transaction inclusion.","In order to pay for (system) transaction costs.","In order to transfer ownership.","Implementation of <code>Morph</code> to retrieve just the first element …","Type to lookup into.","Type to lookup into.","A <code>Contains</code> implementation that contains all members of …","","A non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …","Storage key with read/write tracking information.","Input that adds infinite number of zero after wrapped …","Can pause specific transactions from being processed.","The error type for <code>TransactionPause</code>.","Transform the origin of an <code>EnqueueMessage</code> via <code>C::convert</code>.","Try and collect into a collection <code>C</code>.","Fallible conversion trait which returns the argument in …","Reversing fallible conversion trait which returns the …","A structure that performs standard conversion using the …","A type for which some values make sense to be able to drop …","A derivative <code>EnsureOrigin</code> implementation. It mutates the …","Extensible conversion trait. Generic over only source …","Implementation of <code>TryMorph</code> which attmepts to convert …","","The type which is returned.","A trait for querying a single value from a type defined in …","Type that can be dispatched with an origin but without …","Just like <code>From</code> except that if the source value is too big …","Just like <code>Into</code> except that if the source value is too big …","Trait to deal with unix time.","Unknown error.","Unknown error.","Call cannot be paused.","The message format is unsupported (e.g. old XCM version).","Get the number of variants.","The format version of the <code>Extrinsic</code>.","Provide validation for unsigned extrinsics.","Type for representing validator id in a session.","A type for converting <code>AccountId</code> to <code>ValidatorId</code>.","Implementors of this trait provide information about …","A trait for online node inspection in a session.","<code>ValidatorSet</code> combined with an identification.","Trait to get the number of variants in any enum.","Means of signature verification.","A trait for verifying the seal of a header and returning …","A vesting schedule over a currency. This allows a …","","","Allows a pallet to specify storage keys to whitelist …","Reasons for moving funds out of an account.","A wrapper for any type <code>T</code> which implement encode/decode in …","A wrapper for any type <code>T</code> which implement encode/decode in …","The queue wants to give up its current processing slot.","Defines an additive identity element for <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The total amount of issuance in the system excluding those …","","Add a filter to the origin.","Add a storage read to this key.","Adds a vesting schedule to a given account.","Add a storage write to this key.","Construct any additional data that should be in the signed …","The type of the <code>SignedExtension</code> additional signed data for …","Returns the set containing all flags.","Executes all necessary logic needed prior to dispatch and …","","The number of members of the group that back some motion.","<code>Some</code> if the referendum <code>index</code> can be voted on, along with …","Extract the signer from it if a system <code>Signed</code> origin, <code>None</code> …","Extract the signer from the message if it is a <code>Signed</code> …","Extract a reference to the system-level <code>RawOrigin</code> if it is …","Extract a reference to the sytsem origin, if that’s what …","Assimilate the storage for this module into pre-existing …","Return the average length of a session.","Return the average length of a session.","","Something that should happen before runtime migrations are …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flagsonvert an otherwise unbounded or large value into a type …","The build function puts initial <code>GenesisConfig</code> keys/values …","The build function is called within an externalities …","Build the storage using <code>build</code> inside default storage.","Reduce the total issuance by <code>amount</code> and return the …","Consume a ticket for some <code>old</code> footprint attributable to <code>who</code>…","Get the call of the extrinsic.","Get a reference to the caller (<code>CallerTrait</code> impl).","Checks if <code>add_vesting_schedule</code> would work against <code>who</code>.","Whether this call can be paused.","Same result as <code>reserve(who, value)</code> (but without the …","Same result as <code>slash(who, value)</code> (but without the …","A number of members <code>incoming</code> just joined the set and …","A number of members <code>_incoming</code> just joined the set and …","Check self, given an instance of Context.","Check self.","Perform the equality check.","Check a proof of membership on-chain. Return <code>Some</code> iff the …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return <code>Some</code> equivalent value of <code>Option&lt;T&gt;</code>.","Multiplies two numbers, checking for underflow or …","Raises a value to the power of exp, returning <code>None</code> if an …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Provides a vec of values that <code>T</code> may take.","Return the value of Self that is clear.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare the <code>left</code> to the <code>right</code> origin.","","Returns the complement of this set of flags.","Compute diff between new and old members; they <strong>must </strong>…","Return <code>true</code> if this “contains” the given value <code>t</code>.","Return <code>true</code> if this “contains” the pair-value <code>(a, b)</code>.","","","","","","","","","","","","","Return <code>true</code> if this “contains” the given value <code>t</code>.","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Make conversion.","Attempt to convert reference of <code>A</code> into value of <code>B</code>, …","","","","","","","","","Make conversion back.","Attempt to convert reference of <code>B</code> into value of <code>A</code>, …","","","","","","Get the number of items in the set.","The number of pallets’ information that this type …","The number of blobs.","Convert the given pallet <code>P</code> into its containing crate …","Version of the crate containing the pallet.","Version of the crate containing the pallet.","An account was created.","Returns the current block number.","Returns the current storage version as supported by the …","Reduce the active issuance by some amount.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Split the block into header and list of extrinsics.","","","","","","","","","","","","","","","","","","","","","","Does not alter the inner value at all, but it will log …","Exactly the same as <code>map</code>, but it prints the appropriate …","Exactly the same as <code>map</code>, but it prints the appropriate …","Defensively map the error into another return type, but …","Defensively map and unpack the value to something else (<code>U</code>…","Potentially map and unpack the value to something else (<code>U</code>…","Returns the maximum and defensively asserts that <code>other</code> is …","","","","","","","Returns the minimum and defensively checks that <code>self</code> is …","","","","","","","Defensively transform this result into an option, …","Defensively transform this option to a result, mapping <code>None</code>…","Defensively transform this option to a result, mapping <code>None</code>…","Prelude module for all defensive traits to be imported at …","Same as <code>Defensive::defensive</code>, but it takes a proof as …","Increase <code>self</code> by <code>other</code> defensively.","Return <code>self</code> plus <code>other</code> defensively.","Decrement <code>self</code> by one defensively.","Increment <code>self</code> by one defensively.","Return the product of <code>self</code> and <code>other</code> defensively.","Reduce <code>self</code> by <code>other</code> defensively.","Return <code>self</code> minus <code>other</code> defensively.","Returns the maximum and defensively asserts that <code>other</code> is …","","","","","","","Returns the minimum and defensively checks that <code>self</code> is …","","","","","","","Use <code>TryFrom</code> first and defensively fall back to truncating …","Exactly the same as <code>unwrap_or</code>, but it does the defensive …","Exactly the same as <code>unwrap_or_default</code>, but it does the …","Exactly the same as <code>unwrap_or_else</code>, but it does the …","Demote a member to the next lower rank; demoting beyond …","Adds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…","Mints <code>value</code> to the free balance of <code>who</code>.","The deposit amount of a native currency required for …eturns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a reference to the digest.","Get a mutable reference to the digest.","Actually dispatch this call and return the result of it.","Dispatch this call but do not check the filter in origin.","@return the integer division of <code>self</code> and <code>other</code>.","Consume a ticket for some <code>old</code> footprint attributable to <code>who</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No longer request that the data required for decoding the …","","","","","","","","","","","","","","","","","","","","","Drop an instance cleanly. Only works if its <code>self.value()</code> …","Drop <code>Self</code> if and only if it is equal to zero. Return <code>Err</code> …","The total count of group members.","Returns an empty set of flags.","","","","","","Creates an encoded block from the given <code>header</code> and …","","","","","","","","","","","","","Returns the encoded data.","","Returns the length of the encoded <code>T</code>.","Enqueue a single <code>message</code> from a specific <code>origin</code>.","","Enqueue multiple <code>messages</code> from a specific <code>origin</code>.","","Adds two numbers, checking for overflow.","Adds two numbers overwriting the left hand one, checking …","Returns <code>Ok</code> iff the account is able to make a withdrawal of …","Divides two numbers, checking for overflow.","Divides two numbers overwriting the left hand one, …","Ensure division for integer type <code>N</code>. Equal to <code>self / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Ensure the position of inherent is correct, i.e. they are …","Performs the conversion returning an <code>ArithmeticError</code> if …","Multiplies two numbers, checking for overflow.","Multiplies two numbers overwriting the left hand one, …","Ensure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…","","Perform the origin check.","Perform the origin check.","Perform the origin check.","The same as <code>ensure_origin</code> except that Root origin will …","Raises a value to the power of exp, returning …","Ensure the reserved balance is equal to <code>value</code>.","Subtracts two numbers, checking for overflow.","Subtracts two numbers overwriting the left hand one, …","Enter safe mode for <code>duration</code> blocks.","Called when the runtime enters safe mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Estimate the fee of this call.","","Return an estimate of the current session progress.","Return the block number at which the next new session is …","Return the block number at which the next session rotation …","Choose all variants except for <code>one</code>.","Execute the given <code>block</code>.","Executes a message that could not be executed by …","Returns if the storage version key for the given pallet …","Exit safe mode immediately.","Called when the runtime exits safe mode.","Extend safe mode for <code>duration</code> blocks.","","Changes a balance lock (selected by <code>id</code>) so that it becomes …","Mutate <code>self</code> by extracting a new instance with at most …","Returns a reference to the list of extrinsics.","Returns a reference to the extrinsics root.","Returns the preimage for a given hash. If given, <code>len</code> must …","","Determine if a given value should be allowed through the …","","","","","","","","","","Filter the call if caller is not root, if false is …","Find the author of a block based on the pre-runtime …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the state footprint of the given queue.","Return the state footprint of the queue.","","","The ‘free’ balance of a given account.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Create from the given encoded <code>data</code>.","","","","","","","Cast mutable reference.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Cast reference.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Name of the function.","Return the current value.","Return the current value.","Get a reference to the underlying value.","Get the item, or its default if it doesn’t yet exist; we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the decoded key with key-type ID <code>i</code>.","","","","","Get the storage version of the given pallet from the …","Returns <code>Some</code> <code>Backing</code> if <code>self</code> represents a …","Return the index of this Call.","Return all call indices in the same order as <code>GetCallName</code>.","Return a <code>CallMetadata</code>, containing function and pallet name …","Return the function name of the Call.","Return all function names in the same order as <code>GetCallIndex</code>…","Return all function names for the given <code>module</code>.","","","","Return all module names.","Returns the preimage for a given hash.","Get the current prime.","Get the raw bytes of key with key-type ID <code>i</code>.","Enqueue a single <code>message</code> with an implied origin.","","Enqueue multiple <code>messages</code> from an implied origin.","","Check if this key has been “read”, i.e. it exists in …","Check if this key has been “written”, i.e. a new value …","","Produce the hash of some byte-slice.","Returns the hash of the header.","Returns the hash of the block.","","","Produce the hash of some codec-encodable value.","Check to see if all data required for the given <code>bounded</code> …","Returns whether a preimage exists for a given hash.","Returns a reference to the header.","Request that the data required for decoding the given …","The unique identifier of the <code>SignedExtension</code>.","","","","","","","","","","","","","Increments the value.","Convert the given pallet <code>P</code> into its index as configured in …","Index of the pallet as configured in the runtime.","Index of the pallet as configured in the runtime.","Add a member to the group at the <code>min_rank()</code>.","All of the pallets’ information that this type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the initial value.","Initialize the members to the given <code>members</code>.","Set the item to something new.","","Inserts the specified flags in-place.","Find the integer square root.","Find the integer square root, returning <code>None</code> if the number …","Check the integrity of this pallet’s configuration.","See <code>Hooks::integrity_test</code>.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform into an account.","Convert into an account ID. This is infallible, and may …","Consume <code>self</code> and return the caller.","","Cast mutable reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the signer from the message if it is a <code>Signed</code> …","Convert this value amalgamated with the a secondary “sub…","Extract the signer from the message if it is a <code>Signed</code> …","Returns <code>true</code> if all flags are currently set.","True iff no bits are set.","","","","","","","","","","Returns true if the given validator is disabled.","Returns <code>true</code> if no flags are currently stored.","Whether safe mode is entered.","Check if the asset should be locked and prevent …","Is the given <code>MemberId</code> a valid member?","Returns <code>true</code> if <code>self</code> is a system <code>None</code> origin, <code>None</code> …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Whether this queue is paused.","Whether this call is paused.","Returns true if the provided validator ID has been …","Returns whether a preimage request exists for a given hash.","Returns <code>true</code> if <code>self</code> is a system <code>Root</code> origin, <code>None</code> …","Is this <code>Extrinsic</code> signed? If no information are available …","Returns <code>Some(_)</code> if <code>self</code> is an instance of sub type <code>T</code>.","Determines whether <code>self</code> matches at least everything that <code>_o</code>…","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Increase the total issuance by <code>amount</code> and return the …","","Return the key-type IDs supported by this set.","An account was killed.","Returns a generic measure of how late the current block is …","Return the length of data type.","Returns whether a preimage exists for a given hash and if …","Attempt a lookup.","Attempt a lookup.","","","","The major version of the crate.","Ensure an account’s free balance equals some value; this …","","","","","","","Maximum number of elements contained","","The maximum size of key/values in the storage, or none if …","The maximum number of values in the storage, or none if no …","Attempt to make conversion.","","","","","Attempt to make conversion back.","","","","","Consume <code>self</code> and maybe an <code>other</code> to return a new instance …","Maybe consume an <code>other</code> to mutate <code>self</code> into a new instance …","Consume <code>self</code> and an <code>other</code> to return a new instance that …","Consume <code>self</code> and an <code>other</code> to return a new instance that …","Consume self to mutate <code>other</code> so that it combines both. …","Returns the metadata for this signed extension.","Minimum number of elements contained","The lowest rank possible in this membership organisation.","The minimum balance any single account may have. This is …","The minor version of the crate.","Convert the given pallet <code>P</code> into its Rust module name as …","Name of the Rust module containing the pallet.","Name of the Rust module containing the pallet.","Make conversion.","","","","","","","","","@return the product of <code>self</code> and <code>other</code>.","Mutate the item.","","Mutate the item, removing or resetting to default value if …","","Convert the given pallet <code>P</code> into its name as configured in …","Name of the pallet as configured in the runtime.","Name of the pallet as configured in the runtime.","The two128 hash of name.","Two128 hash of name.","Creates new header.","Creates new block from header and extrinsics.","Create a ticket for the <code>new</code> footprint attributable to <code>who</code>. …","","Create a default <code>TrackedStorageKey</code>","Create new instance of the extrinsic.","Create a new instance from the given byte array.","Create a new instance from the given byte array.","Create a new instance, adding a new <code>constraint</code> onto the …","Create a new instance, adding a new <code>constraint</code> onto the …","","Creates a new instance of <code>Self</code>.","Create with system none origin and …","Returns the complement of this set of flags.","Request and attempt to store the bytes of a preimage on …","Store the bytes of a preimage on chain infallible due to …","","Return duration since <code>SystemTime::UNIX_EPOCH</code>.","Returns a reference to the header number.","Implementing this function on a pallet allows you to …","This function is being called after every block import …","Consume self and along with an opposite counterpart to …","A notification for end of the session.","Returns the on-chain storage version of the pallet as …","A validator got disabled. Act accordingly until a new …","Block finalization hook. This is called at the very end of …","See <code>Hooks::on_finalize</code>.","Something that should happen at genesis.","The given validator set will be used for the genesis …","See <code>Hooks::on_idle</code>.","Hook to consume a block’s idle time. This will run when …","See <code>Hooks::on_initialize</code>.","Block initialization hook. This is called at the very …","The account with the given id was reaped.","A new account <code>who</code> has been registered.","Session set has changed; act appropriately. Note that this …","Actually handle a non-zero imbalance. You probably want to …","See <code>Hooks::on_runtime_upgrade</code>.","Hook executed when a code change (aka. a “runtime upgrade…","Called when the timestamp is set.","Handler for some imbalance. Infallible.","Handler for some imbalances. The different imbalances …","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","The ordered Patricia tree root of the given <code>input</code>.","","Verify a proof of ownership for the keys.","The number of pages in the queue (including overweight …","Produce a pair of imbalances that cancel each other out …","Name of the pallet to which the function belongs.","Encoded string of pallet name.","Prefix of a pallet to isolate it from other pallets.","Return the prefix hash of pallet instance.","Create new implementations of the <code>Get</code> trait.","Returns a reference to the parent hash.","","","","","","","","","The patch version of the crate.","Pause this call immediately.","The raw value of self.","Convert the given <code>bounded</code> instance back into its original …","Create a <code>Bounded</code> instance based on the <code>hash</code> and <code>len</code> of the …","Removes the most recently pushed, and not-yet-popped, …","Do any post-flight stuff for an extrinsic.","Do any pre-flight stuff for a signed transaction.","Validate the call right before dispatch.","Do any pre-flight stuff for a unsigned transaction.","The prefix of the storage. All keys after the prefix are …","Return the prefix hash of instance.","Returns whether a preimage request exists for a given hash.","Print the object.","Process the given message, using no more than the …","Promote a member to the next higher rank.","Prove membership of a key owner in the current block-state.","Add a new <code>constraint</code> onto the filter.","Put this storage version for the given pallet into the …","Get the most recently determined random seed, along with …","Get the basic random seed.","Return the rank of the given ID, or <code>None</code> if they are not a …","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Increase the active issuance by some amount, up to the …","","","","Convert the given <code>bounded</code> value back into its original …","@return the modulo remainder of <code>self</code> and <code>other</code>.","How many more blocks safe mode will stay entered.","","","Remove the item or otherwise replace it with its default …","","Removes the specified flags in-place.","Remove an existing lock.","Remove a vesting schedule for a given account.","Move all the named reserved balance of one account into …","Moves up to <code>value</code> from reserved balance of account <code>slashed</code> …","Moves up to <code>value</code> from reserved balance of account <code>slashed</code> …","Request that someone report a preimage. Providers use this …","Request that someone report a preimage. Providers use this …","Moves <code>value</code> from balance to reserved balance.","Moves <code>value</code> from balance to reserved balance.","The amount of the balance of a given account that is …","The amount of the balance of a given account that is …","Reset origin filters to default one, i.e …","Similar to deposit_creating, only accepts a …","Similar to deposit_creating, only accepts a …","Restore the filter from a previous <code>take</code> operation.","Create with system root origin and …","","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","Increment self by some <code>amount</code>, saturating.","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Decrement self by one, saturating at zero.","Increment self by one, saturating.","Decrement self by one, saturating at zero.","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Increment self by one, saturating at the numeric bounds …","Saturating exponentiation. Compute <code>self.pow(exp)</code>, …","Decrement self by some <code>amount</code>, saturating at zero.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","Traits and associated utilities for scheduling …","","","Service all message queues in some fair manner.","","Returns current session index.","Inserts or removes the specified flags depending on the …","Replace the caller with caller from the other origin","Sets the extrinsic root.","Create a new balance lock on account <code>who</code>.","Set the new members; they <strong>must already be sorted</strong>. This …","Sets the header number.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets the parent hash.","Set the prime member.","Sets the state root.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Similar to withdraw, only accepts a <code>PositiveImbalance</code> and …","Create with system signed origin and …","The total size of the blobs in bytes.","","","","","","","","","","","","","","Deducts up to <code>value</code> from the combined balance of <code>who</code>, …","Slash all the reserved balance, returning the negative …","Deducts up to <code>value</code> from reserved balance of <code>who</code>. This …","Deducts up to <code>value</code> from reserved balance of <code>who</code>. This …","Get a vector of all members in the set, ordered.","","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Returns a reference to the state root.","The storage footprint of the queue (including overweight …","","Returns the storage key for a storage version.","Encoded string of storage name.","Return the prefix hash of storage instance.","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Consume an <code>other</code> to mutate <code>self</code> into a new instance that …","","Any remaining unprocessed messages should happen only …","Any remaining unprocessed messages should happen only …","","","Returns the symmetric difference between the flags in <code>self</code> …","Clear the filter, returning a value that may be used later …","Convert the given <code>block_id</code> to the corresponding block hash.","","","","","","","","","","","","","Convert the given <code>block_id</code> to the corresponding block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Traits for working with tokens and their associated …","The combined balance of <code>who</code>.","The total amount of issuance in the system.","Create an account for <code>who</code> of the <code>asset</code> with a deposit …","Transfer some liquid free balance to another staker.","The Patricia tree root of the given mapping.","","Consume self and try to collect the results into <code>C</code>.","Attempt to make conversion. If returning Result::Err, the …","","","","","Attempt to make conversion back. If returning Result::Err, …","","","","","Try to decode the wrapped type from the inner <code>data</code>.","Drop an instance cleanly. Only works if its value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to convert an account ID into this type. Might not …","Try to convert an account ID into this type. Might not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert into an account ID, checking that all bytes of the …","Same as <code>into_sub_account_truncating</code>, but ensuring that all …","Make conversion.","","","","","","","Maybe mutate the item only if an <code>Ok</code> value is returned from …","","Returns <code>Ok</code> if <code>self</code> is <code>None</code>, otherwise returns <code>Err</code> with <code>self</code>…","Perform the origin check.","Perform the origin check, returning the origin value if …","","","","Perform the origin check, returning the origin value if …","","","","","","","","","","The same as <code>try_origin</code> except that Root origin will always …","Returns <code>Ok</code> with the inner value of <code>Other</code> if <code>self</code> is that, …","Returns <code>Ok</code> with the inner value of <code>Same</code> if <code>self</code> is that, …","Do something with the caller, consuming self but returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the <code>SignedExtension</codeeturns the union of between the flags in <code>self</code> and <code>other</code>.","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from Target back to Source.","","","Attempt to clear a previously noted preimage. Exactly the …","Clear a previously noted preimage. This is infallible and …","Unpause this call immediately.","Cancel a previous preimage request.","Cancel a previous preimage request.","Moves up to <code>value</code> from reserved balance to free balance. …","Unreserve all the named reserved balances, returning …","Moves up to <code>value</code> from reserved balance to free balance. …","Optionally consume an old ticket and alter the footprint, …","","","","","Checks to see if this is a valid <em>transaction</em>. It returns …","Validate a signed transaction for the transaction queue.","Return the validity of the call","Validate an unsigned transaction for the transaction queue.","Returns the active set of validators.","","Verify a signature.","Verify a signature. Return <code>true</code> if signature is valid for …","Verify a header and return the author, if any.","Get the amount that is currently being vested and cannot …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whitelist this key.","","Returns a <code>Vec&lt;TrackedStorageKey&gt;</code> indicating the storage …","","","Removes some free balance from <code>who</code> account for <code>reason</code> if …","","Returns the additive identity element of <code>Self</code>, <code>0</code>.","The zero imbalance. Can be destroyed with <code>drop_zero</code>.","Create a <code>Positive</code> instance of <code>Self</code> whose value is zero.","Create a new instance which only contains zeroes as input.","","A trait to handle errors and options when you are really …","Subset of methods similar to <code>Defensive</code> that can only work …","Subset of methods similar to <code>Defensive</code> that can only work …","Does not alter the inner value at all, but it will log …","Exactly the same as <code>map</code>, but it prints the appropriate …","Exactly the same as <code>map</code>, but it prints the appropriate …","Defensively map the error into another return type, but …","Defensively map and unpack the value to something else (<code>U</code>…","Potentially map and unpack the value to something else (<code>U</code>…","Defensively transform this result into an option, …","Defensively transform this option to a result, mapping <code>None</code>…","Defensively transform this option to a result, mapping <code>None</code>…","Same as <code>Defensive::defensive</code>, but it takes a proof as …","Exactly the same as <code>unwrap_or</code>, but it does the defensive …","Exactly the same as <code>unwrap_or_default</code>, but it does the …","Exactly the same as <code>unwrap_or_else</code>, but it does the …","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","After specified number of blocks.","A type that can be used as a scheduler.","At specified block.","The preimage for this hash was known but could not be …","The dispatch time of a scheduled task.","Anything of this value or lower will definitely be …","The highest priority. We invert the value so that normal …","The hash of the encoded value which this value represents.","The lowest priority. Most stuff should be around here.","Error type for <code>MaybeHashed::lookup</code>.","Type representing an encodable value or the hash of the …","A type that can be used as a scheduler.","Information relating to the period of a scheduled task. …","Priority with which a call is scheduled. It’s just a …","A call of this hash was not known.","The value itself.","","","","","","","","","","","","","","","","","","","","","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","A type that can be used as a scheduler.","A type that can be used as a scheduler.","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","A type that can be used as a scheduler.","A means of expressing a call by the hash of its encoded …","A means of expressing a call by the hash of its encoded …","A type that can be used as a scheduler.","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","A type that can be used as a scheduler.","The hasher used in the runtime.","The hasher used in the runtime.","A type that can be used as a scheduler.","","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","Operation may result in account going out of existence.","Simple amalgamation trait to collect together properties …","The type for the kinds of asset that are going to be paid.","Simple amalgamation trait to collect together properties …","The type by which we measure units of the currency in …","Withdraw could not happen since the amount to be withdrawn …","Status of funds.","Deposit couldn’t happen due to the amount being too low. …","The type by which we identify the beneficiaries to whom a …","The operation may be considered successful even if less …","Account cannot receive the assets.","Deposit cannot happen since the account cannot be created …","Converts an asset balance value into balance.","Converts a balance value into an asset balance.","Adapter for a rank-to-salary <code>Convert</code> implementation into a …","One of a number of consequences of withdrawing a fungible …","","","An error which could be returned by the Pay type","The operation should must either proceed either exactly …","Simple boolean for whether an account needs to be kept in …","We don’t care if the account gets killed by this …","The funds already exist in the system, therefore will not …","Payment failed. It may safely be retried.","The operation should be forced to succeed if possible. …","The privilege with which a withdraw operation is conducted.","Funds are under the normal conditions.","Funds are free, as corresponding to <code>free</code> item in Balances.","Not enough of the funds in the account are unavailable for …","Retrieve the salary for a member of a particular rank.","An identifier given to an individual payment.","A trait for a not-quite Linear Type that tracks an …","Payment is in progress. Nothing to report yet.","Operation must not result in the account going out of …","Trait to handle NFT locking mechanism to ensure …","The funds will be minted into the system, increasing total …","Funds are on hold.","The oppositely imbalanced type. They come in pairs.","There has been an overflow in the system. This is …","An overflow would occur. This is practically unexpected, …","Can be implemented by <code>PayFromAccount</code> using a <code>fungible</code> …","Simple implementation of <code>Pay</code> which makes a payment from a …","Status for making a payment via the <code>Pay::pay</code> trait …","The operation should execute with regular privilege.","The precision required of an operation generally involving …","The mode by which we describe whether an operation should …","The account may not be killed and our provider reference …","The account may not be killed, but we don’t care if the …","The origin of funds to be used for a deposit operation.","Account balance would reduce to zero, potentially …","Funds are reserved, as corresponding to <code>reserved</code> item in …","The mode under which usage of funds may be restricted.","Account continued in existence.","Account continued in existence.","Payment happened successfully.","There has been an underflow in the system. This is …","Implements <code>ConversionFromAssetBalance</code>, enabling a 1:1 …","Payment status is unknowable. It may already have reported …","The asset is unknown. Usually because an <code>AssetId</code> has been …","The asset is unknown. Usually because an <code>AssetId</code> has been …","One of a number of consequences of withdrawing a fungible …","Reasons for moving funds out of an account.","The withdraw would mean the account dying when it needs to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check how a payment has proceeded. <code>id</code> must have been …","","","","","","","","","","","","","","","","","","The Currency trait and associated types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop an instance cleanly. Only works if its <code>self.value()</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutate <code>self</code> by extracting a new instance with at most …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The traits for dealing with a single fungible token class …","The traits for sets of fungible tokens and any associated …","Retrieve the salary for a given rank. The account ID is …","","","The imbalance trait type and its associates, which handles …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Convert the type into a <code>Result</code> with <code>DispatchError</code> as the …","Convert the type into a <code>Result</code> with <code>TokenError</code> as the …","Check if the asset should be locked and prevent …","","Consume <code>self</code> and maybe an <code>other</code> to return a new instance …","Maybe consume an <code>other</code> to mutate <code>self</code> into a new instance …","Consume <code>self</code> and an <code>other</code> to return a new instance that …","Consume self to mutate <code>other</code> so that it combines both. …","Traits for dealing with a single non-fungible collection …","Traits for dealing with a single non-fungible item.","Traits for dealing with multiple collections of …","Traits for dealing with multiple collections of …","Consume self and along with an opposite counterpart to …","The Pay trait and associated types.","Make a payment and return an identifier for later …","","The raw value of self.","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Consume an <code>other</code> to mutate <code>self</code> into a new instance that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The zero imbalance. Can be destroyed with <code>drop_zero</code>.","A non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …","The balance of an account.","Abstraction over a fungible assets system.","The currency that this schedule applies to.","An identifier for a lock. Used for disambiguating …","A currency whose accounts can have liquidity restrictions.","The maximum number of locks a user should have on their …","The quantity used to denote time; usually just a …","The quantity used to denote time; usually just a …","","The opaque token type for an imbalance. This is returned …","The opaque token type for an imbalance. This is returned …","A currency where funds can be reserved from the user.","An identifier for a reserve. Used for disambiguating …","A non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …","A vesting schedule over a currency. This allows a …","The total amount of issuance in the system excluding those …","Adds a vesting schedule to a given account.","Reduce the total issuance by <code>amount</code> and return the …","Checks if <code>add_vesting_schedule</code> would work against <code>who</code>.","Same result as <code>reserve(who, value)</code> (but without the …","Same result as <code>slash(who, value)</code> (but without the …","Reduce the active issuance by some amount.","Adds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…","Mints <code>value</code> to the free balance of <code>who</code>.","Returns <code>Ok</code> iff the account is able to make a withdrawal of …","Ensure the reserved balance is equal to <code>value</code>.","Changes a balance lock (selected by <code>id</code>) so that it becomes …","The ‘free’ balance of a given account.","Increase the total issuance by <code>amount</code> and return the …","Ensure an account’s free balance equals some value; this …","The minimum balance any single account may have. This is …","Produce a pair of imbalances that cancel each other out …","Increase the active issuance by some amount, up to the …","Remove an existing lock.","Remove a vesting schedule for a given account.","Move all the named reserved balance of one account into …","Moves up to <code>value</code> from reserved balance of account <code>slashed</code> …","Moves up to <code>value</code> from reserved balance of account <code>slashed</code> …","Moves <code>value</code> from balance to reserved balance.","Moves <code>value</code> from balance to reserved balance.","The amount of the balance of a given account that is …","The amount of the balance of a given account that is …","Similar to deposit_creating, only accepts a …","Similar to deposit_creating, only accepts a …","Create a new balance lock on account <code>who</code>.","Similar to withdraw, only accepts a <code>PositiveImbalance</code> and …","Deducts up to <code>value</code> from the combined balance of <code>who</code>, …","Slash all the reserved balance, returning the negative …","Deducts up to <code>value</code> from reserved balance of <code>who</code>. This …","Deducts up to <code>value</code> from reserved balance of <code>who</code>. This …","The combined balance of <code>who</code>.","The total amount of issuance in the system.","Transfer some liquid free balance to another staker.","Moves up to <code>value</code> from reserved balance to free balance. …","Unreserve all the named reserved balances, returning …","Moves up to <code>value</code> from reserved balance to free balance. …","Get the amount that is currently being vested and cannot …","Removes some free balance from <code>who</code> account for <code>reason</code> if …","Scalar type for representing balance of an account.","A fungible token class where any creation and deletion of …","Trait for slashing a fungible asset which can be place on …","Imbalance implying that the total_issuance value is …","Imbalance implying that the total_issuance value is less …","Simple handler for an imbalance drop which decreases the …","Special dust type which can be type-safely converted into …","Consideration method using a <code>fungible</code> balance frozen as …","Handler for when an imbalance gets dropped. This could …","Consideration method using a <code>fungible</code> balance frozen as …","An identifier for a freeze.","An imbalance in the system, representing a divergence of …","Simple handler for an imbalance drop which increases the …","Trait for providing balance-inspection access to a …","Trait for inspecting a fungible asset which can be frozen. …","Trait for inspecting a fungible asset whose accounts …","Convert a <code>fungibles</code> trait implementation into a <code>fungible</code> …","Basic consideration method using a <code>fungible</code> balance frozen …","Basic consideration method using a <code>fungible</code> balance placed …","Trait for providing a basic fungible asset.","Trait for introducing, altering and removing locks to …","Trait for mutating a fungible asset which can be placed on …","The type for managing what happens when an instance of …","The type for managing what happens when an instance of <code>Debt</code>…","An identifier for a hold. Used for disambiguating …","A fungible token class where the balance can be set …","A fungible, holdable token class where the balance on hold …","","","","","","The total amount of issuance in the system excluding those …","Get the balance of <code>who</code> which does not include funds which …","","The amount of the balance which can become frozen. …","","Amount of funds held in reserve by <code>who</code> for the given <code>id</code>.","","Amount of funds on hold (for the given reason) of <code>who</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decrease the balance of <code>who</code> which is held for …","","Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly …","Attempt to decrease the balance of <code>who</code> which is held for …","","Returns <code>true</code> if the balance of <code>who</code> may be increased by …","","Returns <code>true</code> if it’s possible to introduce a freeze for …","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","","Returns <code>Success</code> if the balance of <code>who</code> may be decreased by …","","","","","","","","","","","","Reduce the active issuance by some amount.","","","","","","","","","","","","","","","","","","Reduce the balance of <code>who</code> by <code>amount</code>.","Reduce the balance on hold of <code>who</code> by <code>amount</code>.","","Decrease the amount which is being frozen for a particular …","","","Mints <code>value</code> into the account of <code>who</code>, creating it as needed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Attempt to set the amount frozen under the given <code>id</code> to …","","","","","","","","","","","","","","","","","","","","","Prevent the balance of the account of <code>who</code> from being …","","","","","","","","The traits for putting freezes within a single fungible …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Some something with the imbalance’s value which is being …","","","Do something with the dust which has been destroyed from …","","Create some dust and handle it with <code>Self::handle_dust</code>. …","The traits for putting holds within a single fungible …","Hold some funds in an account. If a hold for <code>reason</code> is …","","Returns <code>true</code> if it’s possible to place (additional) …","","","","","","","Increase the balance of <code>who</code> by <code>amount</code>.","Increase the balance on hold of <code>who</code> by <code>amount</code>.","","Increase the amount which is being frozen for a particular …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>Dust</code> into an instance of <code>Credit</code>.","","","","","","","","","","","","","","","","","","","","","Increase the total issuance by <code>amount</code> and return the …","","","","","","The minimum balance any single account may have.","","","Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new …","","","","","","","Produce a pair of imbalances that cancel each other out …","","Increase the active issuance by some amount, up to the …","Get the maximum amount that <code>who</code> can withdraw/transfer …","","Get the maximum amount that the <code>total_balance_on_hold</code> of …","","Release up to <code>amount</code> held funds in an account.","","Release all funds in the account of <code>who</code> on hold for <code>reason</code>.","","Reduce the total issuance by <code>amount</code> and return the …","","The balance of <code>who</code> is increased in order to counter <code>credit</code>…","","Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","","Simple infallible function to force an account to have a …","Forcefully set the balance on hold of <code>who</code> to <code>amount</code>. This …","","Prevent actions which would reduce the balance of the …","","Attempt to alter the amount frozen under the given <code>id</code> to …","Hold or release funds in the account of <code>who</code> to bring the …","Set the total issuance to <code>amount</code>.","","","The balance of <code>who</code> is decreased in order to counter <code>debt</code>. …","","Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","","","","","Reduce the balance of some funds on hold in an account.","","","","Remove an existing lock.","","","","","","","","","","Get the total amount of funds whose ultimate beneficial …","","Amount of funds on hold (for all hold reasons) of <code>who</code>.","","The total amount of issuance in the system.","","","Transfer funds from one account into another.","Transfer some <code>amount</code> of free balance from <code>source</code> to become …","","Transfer held funds into a destination account.","","Drop an instance cleanly. Only works if its value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes <code>value</code> balance from <code>who</code> account if possible.","Forcefully set the balance of <code>who</code> to <code>amount</code>.","","","","Test the <code>burn_from</code> function for successfully burning …","Test the <code>burn_from</code> function for handling insufficient …","Test the <code>burn_from</code> function for successfully burning an …","Test the can_deposit function for returning a minimum …","Test the can_deposit function for returning an overflow …","Test the can_deposit function for returning a success …","Test the can_withdraw function for returning a low balance …","Test the can_withdraw function for withdrawal resulting in …","Test the can_withdraw function for returning a success …","Test the <code>mint_into</code> function for handling balances below …","Test the <code>mint_into</code> function for overflow prevention.","Test the <code>mint_into</code> function for successful token minting.","Test the reducible_balance function with …","Test the reducible_balance function with …","Test the <code>restore</code> function for handling restoration below …","Test the <code>restore</code> function for handling balance overflow.","Test the <code>restore</code> function for successful restoration.","Test the set_balance function for successful burning.","Test the set_balance function for successful minting.","Test the <code>shelve</code> function for handling insufficient funds.","Test the <code>shelve</code> function for successful shelving.","Test the <code>transfer</code> function with <code>Preservation::Expendable</code> …","Test the transfer function with Preservation::Expendable …","Test the <code>transfer</code> function with <code>Preservation::Protect</code> and …","Test the <code>transfer</code> function for a successful transfer.","An identifier for a freeze.","Trait for inspecting a fungible asset which can be frozen. …","Trait for introducing, altering and removing locks to …","The amount of the balance which can become frozen. …","Amount of funds held in reserve by <code>who</code> for the given <code>id</code>.","Returns <code>true</code> if it’s possible to introduce a freeze for …","Decrease the amount which is being frozen for a particular …","Attempt to set the amount frozen under the given <code>id</code> to …","Prevent the balance of the account of <code>who</code> from being …","Increase the amount which is being frozen for a particular …","Prevent actions which would reduce the balance of the …","Attempt to alter the amount frozen under the given <code>id</code> to …","Remove an existing lock.","Trait for slashing a fungible asset which can be place on …","Trait for inspecting a fungible asset whose accounts …","Trait for mutating a fungible asset which can be placed on …","An identifier for a hold. Used for disambiguating …","A fungible, holdable token class where the balance on hold …","Amount of funds on hold (for the given reason) of <code>who</code>.","Attempt to decrease the balance of <code>who</code> which is held for …","Attempt to decrease the balance of <code>who</code> which is held for …","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Reduce the balance on hold of <code>who</code> by <code>amount</code>.","","","","","","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Hold some funds in an account. If a hold for <code>reason</code> is …","Returns <code>true</code> if it’s possible to place (additional) …","Increase the balance on hold of <code>who</code> by <code>amount</code>.","Get the maximum amount that the <code>total_balance_on_hold</code> of …","Release up to <code>amount</code> held funds in an account.","Release all funds in the account of <code>who</code> on hold for <code>reason</code>.","Forcefully set the balance on hold of <code>who</code> to <code>amount</code>. This …","Hold or release funds in the account of <code>who</code> to bring the …","Reduce the balance of some funds on hold in an account.","Amount of funds on hold (for all hold reasons) of <code>who</code>.","Transfer some <code>amount</code> of free balance from <code>source</code> to become …","Transfer held funds into a destination account.","Means of identifying one asset class from another.","","Scalar type for representing balance of an account.","A fungible token class where any creation and deletion of …","Trait for slashing a fungible asset which can be place on …","Trait for providing the ability to create new fungible …","Imbalance implying that the total_issuance value is …","Imbalance implying that the total_issuance value is less …","Simple handler for an imbalance drop which decreases the …","Trait for providing the ability to destroy existing …","Special dust type which can be type-safely converted into …","Handler for when an imbalance gets dropped. This could …","An identifier for a freeze.","An imbalance in the system, representing a divergence of …","Simple handler for an imbalance drop which increases the …","Trait for providing balance-inspection access to a set of …","Interface for enumerating assets in existence or owned by …","Trait for inspecting a fungible asset which can be frozen. …","Trait for inspecting a fungible asset whose accounts …","Trait for providing a basic fungible asset.","Trait for introducing, altering and removing locks to …","Trait for mutating a fungible asset which can be placed on …","The type for managing what happens when an instance of …","The type for managing what happens when an instance of <code>Debt</code>…","An identifier for a hold. Used for disambiguating …","A fungible token class where the balance can be set …","A fungible, holdable token class where the balance on hold …","The total amount of issuance in the system excluding those …","Inspect and Mutate traits for Asset approvals","","Returns <code>true</code> if an <code>asset</code> exists.","Returns an iterator of the collections in existence.","Get the balance of <code>who</code> which does not include funds which …","The amount of the balance which can become frozen. …","Amount of funds held in reserve by <code>who</code> for the given <code>id</code>.","Amount of funds on hold (for the given reason) of <code>who</code>.","","","","","","","","","Attempt to decrease the <code>asset</code> balance of <code>who</code> which is held …","Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly …","Attempt to decrease the <code>asset</code> balance of <code>who</code> which is held …","Returns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased …","Returns <code>true</code> if it’s possible to introduce a freeze for …","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Returns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be …","Create a new fungible asset.","Reduce the active issuance by some amount.","Reduce the balance of <code>who</code> by <code>amount</code>.","Reduce the balance on hold of <code>who</code> by <code>amount</code>.","Decrease the amount which is being frozen for a particular …","Mints <code>value</code> into the account of <code>who</code>, creating it as needed.","","","","","","","","","Destroy all accounts associated with a given asset. …","Destroy all approvals associated with a given asset up to …","","","","","","","","","","","","","","","","","","","","","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Attempt to set the amount frozen under the given <code>id</code> to …","","","","","Prevent the balance of the account of <code>who</code> from being …","Mutate <code>self</code> by extracting a new instance with at most …","Complete destroying asset and unreserve currency. …","","The traits for putting freezes within a single fungible …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Do something with the dust which has been destroyed from …","Create some dust and handle it with <code>Self::handle_dust</code>. …","The traits for putting holds within a single fungible …","Hold some funds in an account. If a hold for <code>reason</code> is …","Returns <code>true</code> if it’s possible to place (additional) …","Increase the balance of <code>who</code> by <code>amount</code>.","Increase the balance on hold of <code>who</code> by <code>amount</code>.","Increase the amount which is being frozen for a particular …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>Dust</code> into an instance of <code>Credit</code>.","","","","","","","","","Increase the total issuance by <code>amount</code> and return the …","","Inspect and Mutate traits for Asset metadata","The minimum balance any single account may have.","Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new …","","Produce a pair of imbalances that cancel each other out …","","Increase the active issuance by some amount, up to the …","Get the maximum amount that <code>who</code> can withdraw/transfer …","Get the maximum amount that the <code>total_balance_on_hold</code> of …","Release up to <code>amount</code> held funds in an account.","Reduce the total issuance by <code>amount</code> and return the …","The balance of <code>who</code> is increased in order to counter <code>credit</code>…","Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Inspect traits for Asset roles","Simple infallible function to force an account to have a …","Forcefully set the balance on hold of <code>who</code> to <code>amount</code>. This …","Prevent actions which would reduce the balance of the …","Attempt to alter the amount frozen under the given <code>id</code> to …","Set the total issuance to <code>amount</code>.","The balance of <code>who</code> is decreased in order to counter <code>debt</code>. …","Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Reduce the balance of some funds on hold in an account.","","Start the destruction an existing fungible asset.","","Remove an existing lock.","Get the total amount of funds whose ultimate beneficial …","Amount of funds on hold (for all hold reasons) of <code>who</code>.","The total amount of issuance in the system.","Transfer funds from one account into another.","Transfer some <code>amount</code> of free balance from <code>source</code> to become …","Transfer held funds into a destination account.","Drop an instance cleanly. Only works if its value …","","","","","","","","","","","","","","","","","","","","","","","","","Removes <code>value</code> balance from <code>who</code> account if possible.","Forcefully set the balance of <code>who</code> to <code>amount</code>.","","","","","","","An identifier for a freeze.","Trait for inspecting a fungible asset which can be frozen. …","Trait for introducing, altering and removing locks to …","The amount of the balance which can become frozen. …","Amount of funds held in reserve by <code>who</code> for the given <code>id</code>.","Returns <code>true</code> if it’s possible to introduce a freeze for …","Decrease the amount which is being frozen for a particular …","Attempt to set the amount frozen under the given <code>id</code> to …","Prevent the balance of the account of <code>who</code> from being …","Increase the amount which is being frozen for a particular …","Prevent actions which would reduce the balance of the …","Attempt to alter the amount frozen under the given <code>id</code> to …","Remove an existing lock.","Trait for slashing a fungible asset which can be place on …","Trait for inspecting a fungible asset whose accounts …","Trait for mutating a fungible asset which can be placed on …","An identifier for a hold. Used for disambiguating …","A fungible, holdable token class where the balance on hold …","Amount of funds on hold (for the given reason) of <code>who</code>.","Attempt to decrease the <code>asset</code> balance of <code>who</code> which is held …","Attempt to decrease the <code>asset</code> balance of <code>who</code> which is held …","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Reduce the balance on hold of <code>who</code> by <code>amount</code>.","","","","","","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Hold some funds in an account. If a hold for <code>reason</code> is …","Returns <code>true</code> if it’s possible to place (additional) …","Increase the balance on hold of <code>who</code> by <code>amount</code>.","Get the maximum amount that the <code>total_balance_on_hold</code> of …","Release up to <code>amount</code> held funds in an account.","Forcefully set the balance on hold of <code>who</code> to <code>amount</code>. This …","Reduce the balance of some funds on hold in an account.","Amount of funds on hold (for all hold reasons) of <code>who</code>.","Transfer some <code>amount</code> of free balance from <code>source</code> to become …","Transfer held funds into a destination account.","","","","","","","","","","","","","","A trait for a not-quite Linear Type that tracks an …","A negative imbalance (funds have been destroyed but none …","Handler for when some currency “account” decreased in …","The oppositely imbalanced type. They come in pairs.","A positive imbalance (funds have been created but none …","Resolves received asset credit to account <code>A</code>, implementing …","Resolves received asset credit to account <code>A</code>, implementing …","Either a positive or a negative imbalance.","Split an unbalanced amount two ways between a common …","","","","","","","","","","","","","","","","Drop an instance cleanly. Only works if its <code>self.value()</code> …","Mutate <code>self</code> by extracting a new instance with at most …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Consume <code>self</code> and maybe an <code>other</code> to return a new instance …","Maybe consume an <code>other</code> to mutate <code>self</code> into a new instance …","Consume <code>self</code> and an <code>other</code> to return a new instance that …","Consume self to mutate <code>other</code> so that it combines both. …","Consume self and along with an opposite counterpart to …","Actually handle a non-zero imbalance. You probably want to …","","","","Handler for some imbalance. Infallible.","Handler for some imbalances. The different imbalances …","The raw value of self.","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Consume an <code>other</code> to mutate <code>self</code> into a new instance that …","","","","","","","","","","","","","","","","","","","The zero imbalance. Can be destroyed with <code>drop_zero</code>.","Trait for providing an interface to a read-only NFT-like …","Interface for enumerating items in existence or owned by a …","Type for identifying an item.","Convert a <code>fungibles</code> trait implementation into a <code>fungible</code> …","The iterator type for <code>Self::items</code>.","Trait for providing an interface for NFT-like items which …","The iterator type for <code>Self::owned</code>.","Trait for providing a non-fungible set of items which can …","Returns the attribute value of <code>item</code> corresponding to <code>key</code>.","","","","Burn some <code>item</code>.","","Returns <code>true</code> if the <code>item</code> may be transferred.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","Returns an iterator of the items within a <code>collection</code> in …","","Mint some <code>item</code> to be owned by <code>who</code>.","","Returns an iterator of the items of all collections owned …","","Returns the owner of <code>item</code>, or <code>None</code> if the item doesn’t …","","Set attribute <code>value</code> of <code>item</code>’s <code>key</code>.","","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code>…","","Transfer <code>item</code> into <code>destination</code> account.","","","","","Returns the strongly-typed attribute value of <code>item</code> …","","","","","Trait for providing an interface to a read-only NFT-like …","Interface for enumerating items in existence or owned by a …","Type for identifying an item.","Convert a <code>nonfungibles</code> trait implementation into a …","The iterator type for <code>Self::items</code>.","Trait for providing an interface for NFT-like items which …","The iterator type for <code>Self::owned</code>.","Trait for transferring and controlling the transfer of …","Returns the attribute value of <code>item</code> corresponding to <code>key</code>.","","","","Burn some <code>item</code>.","","Returns <code>true</code> if the <code>item</code> may be transferred.","","Clear attribute of <code>item</code>’s <code>key</code>.","","Clear the metadata of an <code>item</code>.","Attempt to clear the strongly-typed attribute of <code>item</code>’s …","","Returns the custom attribute value of <code>item</code> corresponding …","","","","Disable the <code>item</code> of <code>collection</code> transfer.","","","Re-enable the <code>item</code> of <code>collection</code> transfer.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","Returns an iterator of the items within a <code>collection</code> in …","","Mint some <code>item</code> to be owned by <code>who</code>.","","Returns an iterator of the items of all collections owned …","","Returns the owner of <code>item</code>, or <code>None</code> if the item doesn’t …","","Set attribute <code>value</code> of <code>item</code>’s <code>key</code>.","","Set the metadata <code>data</code> of an <code>item</code>.","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code>…","","Returns the system attribute value of <code>item</code> corresponding …","","Transfer <code>item</code> into <code>destination</code> account.","","","","","Returns the strongly-typed attribute value of <code>item</code> …","","Returns the strongly-typed custom attribute value of <code>item</code> …","","Returns the strongly-typed system attribute value of <code>item</code> …","","","","","Type for identifying a collection (an identifier for an …","The iterator type for <code>Self::collections</code>.","Trait for providing the ability to create collections of …","Trait for providing the ability to destroy collections of …","The witness data needed to destroy an item.","Trait for providing an interface to many read-only …","Interface for enumerating items in existence or owned by a …","Type for identifying an item.","The iterator type for <code>Self::items</code>.","Trait for providing an interface for multiple collections …","The iterator type for <code>Self::owned_in_collection</code>.","The iterator type for <code>Self::owned</code>.","Trait for providing a non-fungible sets of items which can …","Returns the attribute value of <code>item</code> of <code>collection</code> …","Burn some <code>item</code> of <code>collection</code>.","Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.","Returns the attribute value of <code>collection</code> corresponding to …","Returns the owner of the <code>collection</code>, if there is one. For …","Returns an iterator of the collections in existence.","Create a <code>collection</code> of nonfungible items to be owned by <code>who</code>…","Destroy an existing fungible item.","Provide the appropriate witness data needed to destroy an …","Returns an iterator of the items of a <code>collection</code> in …","Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>.","Returns an iterator of the items of all collections owned …","Returns an iterator of the items of <code>collection</code> owned by <code>who</code>…","Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the …","Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>.","Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>.","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> …","Attempt to set the strongly-typed attribute <code>value</code> of …","Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.","Returns the strongly-typed attribute value of <code>item</code> of …","Returns the strongly-typed attribute value of <code>collection</code> …","Type for identifying a collection (an identifier for an …","The iterator type for <code>Self::collections</code>.","Trait for providing the ability to create collections of …","Trait for providing the ability to destroy collections of …","The witness data needed to destroy an item.","Trait for providing an interface to many read-only …","Interface for enumerating items in existence or owned by a …","Trait for providing an interface to check the account’s …","Type for identifying an item.","The iterator type for <code>Self::items</code>.","Trait for providing an interface for multiple collections …","The iterator type for <code>Self::owned_in_collection</code>.","The iterator type for <code>Self::owned</code>.","Trait for trading non-fungible items.","Trait for transferring non-fungible sets of items.","Returns the attribute value of <code>item</code> of <code>collection</code> …","Burn some <code>item</code> of <code>collection</code>.","Allows <code>buyer</code> to buy an <code>item</code> of <code>collection</code> if it’s up for …","Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.","Clear attribute of <code>item</code> of <code>collection</code>’s <code>key</code>.","Clear attribute of <code>collection</code>’s <code>key</code>.","Clear the metadata of a <code>collection</code>.","Clear the metadata of an <code>item</code> of <code>collection</code>.","Attempt to clear the strongly-typed attribute of <code>item</code> of …","Attempt to clear the strongly-typed attribute of <code>collection</code>…","Returns the attribute value of <code>collection</code> corresponding to …","Returns the owner of the <code>collection</code>, if there is one. For …","Returns an iterator of the collections in existence.","Create a <code>collection</code> of nonfungible items to be owned by <code>who</code>…","","Returns the custom attribute value of <code>item</code> of <code>collection</code> …","Destroy an existing fungible item.","Disable the <code>item</code> of <code>collection</code> transfer.","Re-enable the <code>item</code> of <code>collection</code> transfer.","Provide the appropriate witness data needed to destroy an …","Returns <code>true</code> if <code>who</code> is the admin of the <code>collection</code>.","Returns <code>true</code> if <code>who</code> is the freezer of the <code>collection</code>.","Returns <code>true</code> if <code>who</code> is the issuer of the <code>collection</code>.","Returns the item price of <code>item</code> or <code>None</code> if the item is not …","Returns an iterator of the items of a <code>collection</code> in …","Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>.","Returns an iterator of the items of all collections owned …","Returns an iterator of the items of <code>collection</code> owned by <code>who</code>…","Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the …","Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>.","Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>.","Set the metadata <code>data</code> of a <code>collection</code>.","Set the metadata <code>data</code> of an <code>item</code> of <code>collection</code>.","Sets the item price for <code>item</code> to make it available for sale.","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> …","Attempt to set the strongly-typed attribute <code>value</code> of …","Returns the system attribute value of <code>item</code> of <code>collection</code> …","Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.","Returns the strongly-typed attribute value of <code>item</code> of …","Returns the strongly-typed attribute value of <code>collection</code> …","Returns the strongly-typed custom attribute value of <code>item</code> …","Returns the strongly-typed system attribute value of <code>item</code> …","The type for the kinds of asset that are going to be paid.","The type by which we measure units of the currency in …","The type by which we identify the beneficiaries to whom a …","An error which could be returned by the Pay type","Payment failed. It may safely be retried.","An identifier given to an individual payment.","Payment is in progress. Nothing to report yet.","Can be implemented by <code>PayFromAccount</code> using a <code>fungible</code> …","Simple implementation of <code>Pay</code> for assets which makes a …","Simple implementation of <code>Pay</code> which makes a payment from a …","Status for making a payment via the <code>Pay::pay</code> trait …","Payment happened successfully.","Payment status is unknowable. It may already have reported …","","","Check how a payment has proceeded. <code>id</code> must have been …","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Make a payment and return an identifier for later …","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-1,[]],[[-1,-1],-1,[]],[[]],[[3,3]],[[3,3],3],[[4,4],4],[[4,4]],[[5,5]],[[5,5],5],[[6,6],6],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],0,0,[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[-1,-1],[[16,[-1]]],[]],[[3,3],[[16,[3]]]],[[4,4],[[16,[4]]]],[[5,5],[[16,[5]]]],[[6,6],[[16,[6]]]],[[7,7],[[16,[7]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[10,10],[[16,[10]]]],[[11,11],[[16,[11]]]],[[17,17],[[19,[17,18]]]],[[-1,-1],[[16,[-1]]],[]],[[3,3],[[16,[3]]]],[[4,4],[[16,[4]]]],[[5,5],[[16,[5]]]],[[6,6],[[16,[6]]]],[[-1,-2],[[16,[-2]]],[],20],[-1,[[16,[-2]]],21,[]],[[-1,-2],[[16,[-3]]],20,20,[]],[[-1,-1],[[16,[-1]]],[]],[[3,3],[[16,[3]]]],[[4,4],[[16,[4]]]],[[5,5],[[16,[5]]]],[[6,6],[[16,[6]]]],[[7,7],[[16,[7]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[10,10],[[16,[10]]]],[[11,11],[[16,[11]]]],[[-1,-2],[[16,[-2]]],[],20],[-1,[[16,[-1]]],[]],[[-1,22],[[16,[-1]]],[23,24,25]],[[-1,-1],[[16,[-1]]],[]],[[3,3,26],[[16,[3]]]],[[4,4,26],[[16,[4]]]],[[5,5,26],[[16,[5]]]],[[6,6,26],[[16,[6]]]],[[-1,27],[[16,[-1]]],[]],[[-1,27],[[16,[-1]]],[]],[[-1,-1],[[16,[-1]]],[]],[[3,3],[[16,[3]]]],[[4,4],[[16,[4]]]],[[5,5],[[16,[5]]]],[[6,6],[[16,[6]]]],[[7,7],[[16,[7]]]],[[8,8],[[16,[8]]]],[[9,9],[[16,[9]]]],[[10,10],[[16,[10]]]],[[11,11],[[16,[11]]]],[[17,17],[[19,[17,18]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[3,3],[4,4],[5,5],[6,6],[28,28],[26,26],[7,7],[8,8],[9,9],[10,10],[11,11],[29,29],[17,17],[30,30],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[3,3],31],[[4,4],31],[[5,5],31],[[6,6],31],[[7,7],31],[[8,8],31],[[9,9],31],[[10,10],31],[[11,11],31],[[29,29],31],[[17,17],31],[[3,3],[[16,[3]]]],[[4,4],[[16,[4]]]],[[5,5],[[16,[5]]]],[[6,6],[[16,[6]]]],[[3,3],[[16,[3]]]],[[4,4],[[16,[4]]]],[[5,5],[[16,[5]]]],[[6,6],[[16,[6]]]],[[3,3,26],[[16,[3]]]],[[4,4,26],[[16,[4]]]],[[5,5,26],[[16,[5]]]],[[6,6,26],[[16,[6]]]],[29,32],[17,33],[-1,[[19,[3,34]]],35],[-1,[[19,[4,34]]],35],[-1,[[19,[5,34]]],35],[-1,[[19,[6,34]]],35],[-1,[[19,[7,34]]],35],[-1,[[19,[8,34]]],35],[-1,[[19,[9,34]]],35],[-1,[[19,[10,34]]],35],[-1,[[19,[11,34]]],35],[-1,[[19,[30,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[37,[[19,[3,34]]]],[38,[[19,[4,34]]]],[39,[[19,[5,34]]]],[33,[[19,[6,34]]]],[[],[[19,[7,34]]]],[[],[[19,[8,34]]]],[[],[[19,[9,34]]]],[[],[[19,[10,34]]]],[[],[[19,[11,34]]]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[-1,[],[]],[7,12],[7],[8],[8,40],[9],[9,27],[10,27],[10],[11,38],[11],[[],3],[[],4],[[],5],[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],29],[[],17],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[-1,[[19,[3]]],41],[-1,[[19,[4]]],41],[-1,[[19,[5]]],41],[-1,[[19,[6]]],41],[-1,[[19,[7]]],41],[-1,[[19,[8]]],41],[-1,[[19,[9]]],41],[-1,[[19,[10]]],41],[-1,[[19,[11]]],41],[-1,[[19,[30]]],41],[[3,3]],[[3,3],3],[[4,4],4],[[4,4]],[[5,5]],[[5,5],5],[[6,6]],[[6,6],6],[[7,7]],[[7,-1],[],[]],[[8,-1],[],[]],[[8,8]],[[9,-1],[],[]],[[9,9]],[[10,-1],[],[]],[[10,10]],[[11,11]],[[11,-1],[],[]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[3,[[15,[12,14]]]],[4,[[15,[12,14]]]],[5,[[15,[12,14]]]],[6,[[15,[12,14]]]],[7,[[15,[12,14]]]],[8,[[15,[12,14]]]],[9,[[15,[12,14]]]],[10,[[15,[12,14]]]],[11,[[15,[12,14]]]],[3,37],[4,38],[5,39],[6,33],[7],[8],[9],[10],[11],[[3,-1],2,[42,43]],[[4,-1],2,[42,43]],[[5,-1],2,[42,43]],[[6,-1],2,[42,43]],[[7,-1],2,[42,43]],[[8,-1],2,[42,43]],[[9,-1],2,[42,43]],[[10,-1],2,[42,43]],[[11,-1],2,[42,43]],[[30,-1],2,[42,43]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-2],[[19,[-2,30]]],[],20],[-1,[[19,[-2,30]]],[],[]],[[-1,-2],[[19,[-3,30]]],20,20,[]],[-1,[[19,[-2,30]]],[],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-2],[[19,[-2,30]]],[],20],[[-1,22],[[19,[-1,30]]],[24,25,23]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[3,3],44],[[4,4],44],[[5,5],44],[[6,6],44],[[7,7],44],[[8,8],44],[[9,9],44],[[10,10],44],[[11,11],44],[[29,29],44],[[17,17],44],[[30,30],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],0,[-1,-1,[]],[[3,45],[[19,[2,46]]]],[[3,45],[[19,[2,46]]]],[[4,45],[[19,[2,46]]]],[[4,45],[[19,[2,46]]]],[[5,45],[[19,[2,46]]]],[[5,45],[[19,[2,46]]]],[[6,45],[[19,[2,46]]]],[[6,45],[[19,[2,46]]]],[[28,45],[[19,[2,46]]]],[[26,45],[[19,[2,46]]]],[[7,45],[[19,[2,46]]]],[[8,45],[[19,[2,46]]]],[[9,45],[[19,[2,46]]]],[[10,45],[[19,[2,46]]]],[[11,45],[[19,[2,46]]]],[[17,45],[[19,[2,46]]]],[[30,45],[[19,[2,46]]]],[-1,-1,[]],[[[47,[3]]],3],[-1,3,48],[-1,-1,[]],[37,3],[[[2,[-1,-2]]],3,20,20],[38,4],[[[47,[4]]],4],[-1,4,48],[-1,-1,[]],[[[2,[-1,-2]]],4,20,20],[[[2,[-1,-2]]],5,20,20],[-1,5,48],[-1,-1,[]],[39,5],[[[47,[5]]],5],[-1,6,48],[33,6],[[[47,[6]]],6],[[[2,[-1,-2]]],6,20,20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[47,[7]]],7],[-1,-1,[]],[[[47,[8]]],8],[[[47,[9]]],9],[-1,-1,[]],[[[47,[10]]],10],[-1,-1,[]],[[[47,[11]]],11],[-1,-1,[]],[-1,-1,[]],[17,29],[[32,32],29],[-1,-1,[]],[[33,33],17],[-1,17,[[21,[33]]]],[-1,-1,[]],[49,-1,[]],[49,3],[49,4],[49,5],[49,6],[49,7],[49,7],[49,8],[49,8],[49,9],[49,9],[49,10],[49,10],[49,11],[49,11],[49,-1,[]],[[],-1,[]],[[],3],[37,3],[[],4],[38,4],[[],5],[39,5],[[],6],[33,6],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],-1,[]],[[],7],[12,7],[40,8],[[],8],[27,9],[[],9],[[],10],[27,10],[[],11],[38,11],[10,3],[10,4],[10,5],[10,6],[[],-1,[]],[12,7],[40,8],[27,9],[27,10],[38,11],[40,8],[27,9],[27,10],[38,11],[[-1,-1],-2,[50,51,51],[]],[[33,33],3],[[33,33],4],[[33,33],5],[[33,33],6],[[-1,-1],7,[50,[51,[12]],[51,[40]]]],[[-1,-1],8,[50,[51,[40]],[51,[27]]]],[[-1,-1],9,[50,[51,[27]],[51,[38]]]],[[-1,-1],10,[50,[51,[27]],[51,[38]]]],[[-1,-1],11,[50,[51,[38]],[51,[33]]]],[[-1,-1],-2,[50,51,51],[]],[[-1,-1],7,[50,[51,[12]],[51,[40]]]],[[-1,-1],8,[50,[51,[40]],[51,[27]]]],[[-1,-1],9,[50,[51,[27]],[51,[38]]]],[[-1,-1],10,[50,[51,[27]],[51,[38]]]],[[-1,-1],11,[50,[51,[38]],[51,[33]]]],[[-1,-1,28],[[19,[-2,2]]],[50,51,51],[]],[[33,33,28],3],[[33,33,28],4],[[33,33,28],5],[[33,33,28],6],[[-1,-1,28],[[19,[7,2]]],[23,52,51,51,53,54,55,56,57,58,24,59]],[[-1,-1,28],[[19,[8,2]]],[23,52,51,51,53,54,55,56,57,58,24,59]],[[-1,-1,28],[[19,[9,2]]],[23,52,51,51,53,54,55,56,57,58,24,59]],[[-1,-1,28],[[19,[10,2]]],[23,52,51,51,53,54,55,56,57,58,24,59]],[[-1,-1,28],[[19,[11,2]]],[23,52,51,51,53,54,55,56,57,58,24,59]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[26,44],28],[18,[[19,[3]]]],[18,[[19,[4]]]],[18,[[19,[5]]]],[18,[[19,[6]]]],[27,3],[27,4],[27,5],[27,6],[[33,33],17],0,[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[7,7],12],[[8,8],40],[[9,9],27],[[10,10],27],[[11,11],38],[[7,12],7],[[8,40],8],[[9,27],9],[[10,27],10],[[11,38],11],[-1,-1,43],[-1,[[16,[-1]]],43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,-1,48],[4,-1,48],[5,-1,48],[6,-1,48],[-1,[],[]],[3,37],[3],[4],[4,38],[5],[5,39],[6],[6,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,10],[4,10],[5,10],[6,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,60],[7,44],[8,44],[9,44],[10,44],[11,44],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[3,44],[4,44],[5,44],[6,44],[7,44],[7,44],[8,44],[8,44],[9,44],[9,44],[10,44],[10,44],[11,44],[11,44],[17,44],[[17,17],17],[[17,17],17],[[17,17],[[16,[33]]]],[-1,-1,[]],[-1,-1,[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],-1,[]],[[],-1,[]],[[],3],[[],-1,[]],[[],4],[[],-1,[]],[[],5],[[],6],[[],-1,[]],[[],7],[[],-1,[]],[[],-1,[]],[[],8],[[],-1,[]],[[],9],[[],-1,[]],[[],10],[[],-1,[]],[[],11],[[],-1,[]],[[],17],[[],-1,[]],[[],-1,[]],[[],3],[[],4],[[],-1,[]],[[],-1,[]],[[],5],[[],-1,[]],[[],6],[[],-1,[]],[[],7],[[],8],[[],-1,[]],[[],-1,[]],[[],9],[[],-1,[]],[[],10],[[],11],[[],-1,[]],[[],17],[[],-1,[]],[[3,3],3],[[3,3]],[[4,4],4],[[4,4]],[[5,5]],[[5,5],5],[[6,6]],[[6,6],6],[[7,-1],[],[53,23,61,62,55,54,57]],[[7,7]],[[7,63],63],[[8,-1],[],[53,23,61,62,55,54,57]],[[8,8]],[[8,63],63],[[9,-1],[],[53,23,61,62,55,54,57]],[[9,63],63],[[9,9]],[[10,10]],[[10,-1],[],[53,23,61,62,55,54,57]],[[10,63],63],[[11,63],63],[[11,11]],[[11,-1],[],[53,23,61,62,55,54,57]],[[-1,-2],-2,[],[64,62]],[[7,-1],-1,[64,[62,[12]]]],[[8,-1],-1,[64,[62,[40]]]],[[9,-1],-1,[64,[62,[27]]]],[[10,-1],-1,[64,[62,[27]]]],[[11,-1],-1,[64,[62,[38]]]],[[-1,-2],-2,[],[64,62]],[[7,-1],-1,[64,[62,[12]]]],[[8,-1],-1,[64,[62,[40]]]],[[9,-1],-1,[64,[62,[27]]]],[[10,-1],-1,[64,[62,[27]]]],[[11,-1],-1,[64,[62,[38]]]],[[-1,-1,-1,28],[[16,[-1]]],[]],[29,32],[17,33],[3,3],[3],[4,4],[4],[5,5],[5],[6],[6,6],[[[36,[-1]],-1],[[19,[[15,[-1,14]],18]]],[23,65,52,66,57,67]],[[-1,-2],[[19,[[15,[-2,14]],18]]],[],[]],[[],-1,[]],[[],-1,[]],[[],3],[[],4],[[],5],[[],6],[[],7],[[],7],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[],11],[[],11],[[],29],[[],17],[[3,3],[[16,[31]]]],[[4,4],[[16,[31]]]],[[5,5],[[16,[31]]]],[[6,6],[[16,[31]]]],[[7,7],[[16,[31]]]],[[8,8],[[16,[31]]]],[[9,9],[[16,[31]]]],[[10,10],[[16,[31]]]],[[11,11],[[16,[31]]]],[[29,29],[[16,[31]]]],[[17,17],[[16,[31]]]],0,[-1,-1,[]],[[7,22]],[[8,22]],[[9,22]],[[10,22]],[[11,22]],0,[-1,[[16,[-1]]],[]],[-1,-1,[]],[-1,-2,[],[[68,[-1]]]],[-2,-1,[],[[62,[-1]]]],[-1,-1,[]],[[-1,-1],2,24],[[-1,-1],-1,[]],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[7,7],7],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],[[10,10],10],[[10,10],10],[[11,11],11],[[11,11],11],[-1,2,24],[[7,7,28],7],[[8,8,28],8],[[9,9,28],9],[[10,10,28],10],[[11,11,28],11],[[-1,-2],-2,[],20],[-1,-2,20,[]],[[-1,-2],-3,20,20,[]],[-1,2,24],[-1,-1,24],[[-1,-1],-1,[]],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[-1,-2],-2,[],20],[[-1,-2],-2,[],20],[-1,-1,24],[[-1,22],-1,[]],[[3,22],3],[[4,22],4],[[5,22],5],[[6,22],6],[[7,22],7],[[8,22],8],[[9,22],9],[[10,22],10],[[11,22],11],[[-1,-2],-2,[],[69,62]],[[7,-1],-1,[69,[62,[12]]]],[[8,-1],-1,[69,[62,[40]]]],[[9,-1],-1,[69,[62,[27]]]],[[10,-1],-1,[69,[62,[27]]]],[[11,-1],-1,[69,[62,[38]]]],[[-1,-2],-2,[],[69,62]],[[7,-1],-1,[69,[62,[12]]]],[[8,-1],-1,[69,[62,[40]]]],[[9,-1],-1,[69,[62,[27]]]],[[10,-1],-1,[69,[62,[27]]]],[[11,-1],-1,[69,[62,[38]]]],[[-1,-2],-2,[],[69,62]],[[7,-1],-1,[69,[62,[12]]]],[[8,-1],-1,[69,[62,[40]]]],[[9,-1],-1,[69,[62,[27]]]],[[10,-1],-1,[69,[62,[27]]]],[[11,-1],-1,[69,[62,[38]]]],[[-1,-1],2,24],[[-1,-1],-1,[]],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[7,7],7],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],[[10,10],10],[[10,10],10],[[11,11],11],[[11,11],11],[[3,-1],19,70],[[4,-1],19,70],[[5,-1],19,70],[[6,-1],19,70],[[7,-1],19,70],[[8,-1],19,70],[[9,-1],19,70],[[10,-1],19,70],[[11,-1],19,70],[[30,-1],19,70],[-1,2,[]],[-1,2,[]],[-1,-1,[]],[3,22],[4,22],[5,22],[6,22],[7,22],[8,22],[9,22],[10,22],[11,22],[30,22],[3,3],[4,4],[5,5],[6,6],[-1,-1,[]],[7,7],[8,8],[9,9],[10,10],[11,11],[[3,3]],[[3,3],3],[[4,4],4],[[4,4]],[[5,5]],[[5,5],5],[[6,6]],[[6,6],6],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[-1,-2,-2],31,[],[]],[[17,33],[[16,[17]]]],[3,49],[4,49],[5,49],[6,49],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],0,[-1,-1,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[3,[[19,[-1,-1]]],48],[4,[[19,[-1,-1]]],48],[5,[[19,[-1,-1]]],48],[6,[[19,[-1,-1]]],48],[-1,[[19,[-1,-1]]],[]],[-1,[[19,[-1,-1]]],[]],[3,[[16,[3]]]],[4,[[16,[4]]]],[5,[[16,[5]]]],[6,[[16,[6]]]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,-1],-2,75,[]],[[4,-1],-2,75,[]],[[5,-1],-2,75,[]],[[6,-1],-2,75,[]],[[7,-1],-2,75,[]],[[8,-1],-2,75,[]],[[9,-1],-2,75,[]],[[10,-1],-2,75,[]],[[11,-1],-2,75,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,63],[[77,[76]]],[]],[[],-1,[]],[[],-1,[]],[[],3],[[],4],[[],5],[[],6],[[],7],[[],7],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[],11],[[],11],[[],29],[[],17],0,0,0,[[-1,1],2,[]],[[32,32],32],[[32,32]],[[27,27],[[2,[27,27]]]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,22],[[16,[27]]]],[[],-1,[]],[32,32],[[-1,-2],2,[],[]],[[32,32],31],[-1,[[19,[32,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[],32],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[22,-1,[]],[22,-1,[]],[[32,32,44],[[16,[[2,[32,32]]]]]],[[32,27],32],[22,2],[32,[[15,[12,14]]]],[[32,-1],2,[42,43]],[[32,32],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[32,45],[[19,[2,46]]]],[-1,-1,[]],[12,32],[27,32],[40,32],[38,32],[33,32],[[[36,[27]]],32],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[32,22],27],[-1,[[15,[12,14]]],[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[32,44],[32,22],[[32,22],2],[32,27],[32,2],[32,27],[[32,32],32],[[32,32]],[[27,27],38],[[],32],[[32,32],[[16,[31]]]],[[32,22,27],2],[32,22],[38,[[2,[27,27]]]],[[32,32],[[19,[32,32]]]],[[32,32]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[32,-1],-2,75,[]],[-1,-2,[],[]],[22,32],[[],32],0,0,0,0,0,0,0,0,0,[[]],[-1,-1,[]],[[-1,-2],[[16,[-2]]],[],20],[-1,[[16,[-2]]],21,[]],[[-1,-2],[[16,[-3]]],20,20,[]],[[-1,-2],[[16,[-2]]],[],20],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[-1,[],[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,[[16,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],-2,[],20],[-1,-2,20,[]],[[-1,-2],-3,20,20,[]],[[-1,-2],-2,[],20],[[-1,-2],-2,[],20],[-1,-1,[]],[[33,33],33],[[33,33,33,28],[[16,[33]]]],[33,[[2,[38,38]]]],[33,33],[33,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[],[]],[49,-1,[]],[49,-1,[]],[[],-1,[]],[[],-1,[]],[[-1,-1],-2,[50,51,51],[]],[[-1,-1],-2,[50,51,51],[]],[[-1,-1,28],[[19,[-2,2]]],[50,51,51],[]],[-1,44,[]],[-1,44,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],-2,[],[64,62]],[[-1,-2],-2,[],[64,62]],[[],-1,[]],[-1,-1,[]],[[-1,-2],-2,[],[69,62]],[[-1,-2],-2,[],[69,62]],[[-1,-2],-2,[],[69,62]],[-1,-1,[]],[-1,[[19,[-1,-1]]],[]],[-1,[[19,[-1,-1]]],[]],[[],-1,[]],0,0,0,[[-1,-1,-1,28],[[16,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],[[-1,-1],-1,[]],[[-1,-1],[[16,[-1]]],[]],[[-1,-1],[[16,[-1]]],[]],[[-1,-1],[[16,[-1]]],[]],[-1,[[16,[-1]]],[]],[[-1,22],[[16,[-1]]],[23,24,25]],[[-1,-1],[[16,[-1]]],[]],[[-1,27],[[16,[-1]]],[]],[[-1,27],[[16,[-1]]],[]],[[-1,-1],[[16,[-1]]],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-2],[[19,[-2,30]]],[],20],[-1,[[19,[-2,30]]],[],[]],[[-1,-2],[[19,[-3,30]]],20,20,[]],[-1,[[19,[-2,30]]],[],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-2],[[19,[-2,30]]],[],20],[[-1,22],[[19,[-1,30]]],[24,25,23]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[-1,-1,43],[-1,[[16,[-1]]],43],[-1,44,[]],[-1,44,60],[-1,44,[]],[-1,44,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[-1,-2,[],[[68,[-1]]]],[-2,-1,[],[[62,[-1]]]],[[-1,-1],2,24],[[-1,-1],-1,[]],[-1,2,24],[-1,2,24],[-1,-1,24],[[-1,-1],-1,[]],[-1,-1,24],[[-1,22],-1,[]],[[-1,-1],2,24],[[-1,-1],-1,[]],[-1,2,[]],[-1,2,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[19,[-2,34]]],35,[]],[[-1,[78,[-2]]],[[19,[79,34]]],35,[]],[-1,[[15,[12,14]]],[]],[[-1,-2],2,[],[42,43]],[[],[[16,[22]]]],[-1,22,[]],[[-1,45],[[19,[2,46]]],[]],[-1,22,[]],[-1,[[19,[2,34]]],35],[[],[[74,[73]]]],[[-1,-2],-3,[],75,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,80,81],[[],44],[-1,[],81],[[[82,[-1]]],[[19,[83]]],[84,85,86]],[[[87,[-1]]],[[19,[83]]],[84,85,86]],[[[88,[-1]]],[[19,[2,83]]],[84,85,86]],[[[89,[-1]]],[[19,[2,83]]],84],[[[90,[-1]]],[[19,[83]]],[84,85,86]],[[[91,[-1]]],[[19,[83]]],[84,85,86]],[[[92,[-1]]],[[19,[2,83]]],[85,86,84]],[[],27],[[],44],[[[93,[-1]]],[[16,[-1]]],[]],[[],2],[[],2],[[[94,[-1]],95],[[19,[2,71]]],84],[[],63],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[],81],[[]],[[],[[96,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1]]],2,84],[27,44],[[],44],[[],44],[[[36,[12]]],[[19,[2,97]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[82,[-1]]],[[82,[-1]]],[23,84,85,86]],[[[87,[-1]]],[[87,[-1]]],[23,84,85,86]],[[[88,[-1]]],[[88,[-1]]],23],[[[89,[-1]]],[[89,[-1]]],[23,84]],[[[90,[-1]]],[[90,[-1]]],[23,84,85,86]],[[[91,[-1]]],[[91,[-1]]],[23,84,85,86]],[[[92,[-1]]],[[92,[-1]]],[23,84,85,86]],[[[98,[-1]]],[[98,[-1]]],[]],[[[99,[-1]]],[[99,[-1]]],84],[[[100,[-1]]],[[100,[-1]]],84],[101,101],[[[102,[-1,-2]]],[[102,[-1,-2]]],[23,103,104],23],[[[80,[-1,-2]]],[[80,[-1,-2]]],23,23],[[[93,[-1]]],[[93,[-1]]],23],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],27],0,[[],22],[[],105],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[[]],[[]],0,[[],2],[[],[[19,[106,97]]]],[[],2],[[],106],[-1,[[19,[[82,[-2]],34]]],35,[84,85,86]],[-1,[[19,[[87,[-2]],34]]],35,[84,85,86]],[-1,[[19,[[88,[-2]],34]]],35,[]],[-1,[[19,[[89,[-2]],34]]],35,84],[-1,[[19,[[90,[-2]],34]]],35,[84,85,86]],[-1,[[19,[[91,[-2]],34]]],35,[84,85,86]],[-1,[[19,[[92,[-2]],34]]],35,[84,85,86]],[-1,[[19,[[99,[-2]],34]]],35,84],[-1,[[19,[[107,[-2]],34]]],35,[]],[-1,[[19,[[100,[-2]],34]]],35,84],[-1,[[19,[101,34]]],35],[-1,[[19,[[102,[-2,-3]],34]]],35,[103,104,108],[]],[-1,[[19,[[80,[-2,-3]],34]]],35,108,108],[-1,[[19,[109,34]]],35],[-1,[[19,[[93,[-2]],34]]],35,108],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[],[[110,[-1]]],[]],[[],[[88,[-1]]],[]],[[],[[92,[-1]]],[111,84,85,86]],[[],[[94,[-1]]],84],[[],101],[[],[[80,[-1,-2]]],111,111],[-1,2,21],[36,2],[112,2],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[-1,[[19,[[94,[-2]]]]],41,84],[[],113],[[[100,[-1]]],[[19,[76,[77,[76]]]]],84],[22,[[19,[2,83]]]],[22,[[19,[114,83]]]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[[[82,[-1]]],[[15,[12,14]]],[84,85,86]],[[[88,[-1]]],[[15,[12,14]]],[]],[[[89,[-1]]],[[15,[12,14]]],84],[[[90,[-1]]],[[15,[12,14]]],[84,85,86]],[[[91,[-1]]],[[15,[12,14]]],[84,85,86]],[[[92,[-1]]],[[15,[12,14]]],[84,85,86]],[[[82,[-1]],-2],2,[84,85,86],[42,43]],[[[87,[-1]],-2],2,[84,85,86],[42,43]],[[[88,[-1]],-2],2,[],[42,43]],[[[89,[-1]],-2],2,84,[42,43]],[[[90,[-1]],-2],2,[84,85,86],[42,43]],[[[91,[-1]],-2],2,[84,85,86],[42,43]],[[[92,[-1]],-2],2,[84,85,86],[42,43]],[[[99,[-1]],-2],2,84,[42,43]],[[[107,[-1]],-2],2,[],[42,43]],[[[100,[-1]],-2],2,84,[42,43]],[[101,-1],2,[42,43]],[[[102,[-1,-2]],-3],2,[103,104,115],[],[42,43]],[[[80,[-1,-2]],-3],2,115,115,[42,43]],[[109,-1],2,[42,43]],[[[93,[-1]],-2],2,115,[42,43]],[-2,[[19,[2,116]]],[],[]],[-2,[[19,[2,116]]],[],[]],[-2,[[19,[-1,116]]],[],[]],[-2,[[19,[[16,[-1]],116]]],[],[]],[[[82,[-1]],[82,[-1]]],44,[]],[[[87,[-1]],[87,[-1]]],44,[]],[[[88,[-1]],[88,[-1]]],44,[]],[[[89,[-1]],[89,[-1]]],44,[]],[[[90,[-1]],[90,[-1]]],44,[]],[[[91,[-1]],[91,[-1]]],44,[]],[[[92,[-1]],[92,[-1]]],44,[]],[[[98,[-1]],[98,[-1]]],44,[]],[[[99,[-1]],[99,[-1]]],44,84],[[[100,[-1]],[100,[-1]]],44,84],[[101,101],44],[[[102,[-1,-2]],[102,[-1,-2]]],44,[],[]],[[[80,[-1,-2]],[80,[-1,-2]]],44,[],[]],[[109,109],44],[[117,117],44],[[106,106],44],[[[93,[-1]],[93,[-1]]],44,[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],0,[[],27],[22,16],[-1,[[15,[[2,[27]],14]]],81],[[],[[15,[102,14]]]],[[],[[119,[118]]]],[[],27],[-1,[[15,[12,14]]],[[81,[27]]]],[[],[[16,[27]]]],[[[15,[[15,[12,14]],14]]]],[[[36,[-1]]],[],115],[[]],[[[82,[-1]],45],[[19,[2,46]]],[84,85,86]],[[[87,[-1]],45],[[19,[2,46]]],[84,85,86]],[[[88,[-1]],45],[[19,[2,46]]],[84,85,86]],[[[89,[-1]],45],[[19,[2,46]]],84],[[[90,[-1]],45],[[19,[2,46]]],[84,85,86]],[[[91,[-1]],45],[[19,[2,46]]],[84,85,86]],[[[92,[-1]],45],[[19,[2,46]]],[84,85,86]],[[[98,[-1]],45],[[19,[2,46]]],[]],[[[99,[-1]],45],[[19,[2,46]]],84],[[[107,[-1]],45],[[19,[2,46]]],84],[[[100,[-1]],45],[[19,[2,46]]],84],[[101,45],[[19,[2,46]]]],[[[102,[-1,-2]],45],[[19,[2,46]]],[103,104,67],67],[[[80,[-1,-2]],45],[[19,[2,46]]],67,67],[[109,45],[[19,[2,46]]]],[[120,45],[[19,[2,46]]]],[[117,45],[[19,[2,46]]]],[[106,45],[[19,[2,46]]]],[[[93,[-1]],45],[[19,[2,46]]],67],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[121,[[87,[-1]]],[84,85,86]],[-1,-1,[]],[-1,-1,[]],[[],[[89,[-1]]],84],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[122,109],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[16,[-1]]],[[93,[-1]]],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[]],[[[100,[-1]]],12,84],[[],[[36,[12]]]],[[[100,[-1]]],18,84],[[],[[36,[18]]]],[[[100,[-1]]],123,84],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,2,81],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[[],117],[[],2],[[],117],[[],22],[[],[[15,[124,14]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[113,2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[[[100,[-1]]],44,84],[[[93,[-1]]],44,[]],[[],44],[[[93,[-1]]],44,[]],[27,63],[[[15,[12,14]],27],[[19,[76,[77,[76]]]]]],0,[27,63],[[[15,[[15,[12,14]],14]]],[[19,[76,[77,[76]]]]]],0,[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[[],27],0,[[[110,[-1]]],[[19,[125]]],84],[[],27],[[],22],[[],22],[[],22],[[],27],0,0,[[],18],[[],18],[[],[[13,[12]]]],[[],[[82,[-1]]],[84,85,86]],[[],[[88,[-1]]],[84,85,86]],[[],[[90,[-1]]],[84,85,86]],[[],[[91,[-1]]],[84,85,86]],[[],[[92,[-1]]],[85,86,84]],[[[15,[12,14]],27],[[100,[-1]]],84],[[[15,[[15,[12,14]],14]]],[[100,[-1]]],84],[[[15,[12,14]]],[[100,[-1]]],84],[[[15,[12,14]]],[[100,[-1]]],84],[[[15,[12,14]]],[[100,[-1]]],84],[[[15,[12,14]]],[[100,[-1]]],84],[38,[[100,[-1]]],84],[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]]],[[100,[-1]]],84],0,[[[19,[76,[77,[76]]]],123],2],[[[15,[12,14]]],2],[[],2],[[],2],0,[[],2],[[],126],[80,2],[[],2],[[],2],[63,63],[[],63],[[],63],0,0,[[]],0,[[16,22,[19,[2,97]]],[[19,[2,83]]]],[[[82,[-1]],22],[[19,[83]]],[84,85,86]],[[[87,[-1]],22],[[19,[83]]],[84,85,86]],[[[88,[-1]],22],[[19,[83]]],[84,85,86]],[[[89,[-1]],22],[[19,[2,83]]],84],[[[90,[-1]],22],[[19,[83]]],[84,85,86]],[[[91,[-1]],22],[[19,[83]]],[84,85,86]],[[[92,[-1]],22],[[19,[2,83]]],[85,86,84]],[22,[[19,[2,83]]]],[[],27],0,[[],[[15,[-1,14]]],[]],[[],[[0,[127]]]],[[],27],[[],27],[[63,128],2],[27,63],[[[15,[12,14]]],[[19,[76,[77,[76]]]]]],0,[27,63],[[[15,[12,14]]],[[19,[76,[77,[76]]]]]],0,[[],2],[[],122],[[[94,[-1]],-2],19,84,70],[[101,-1],19,70],[[[102,[-1,-2]],-3],19,[103,104,129],129,70],[[63,22],2],[[],2],[[],63],[[[15,[12,14]]],[[19,[2,97]]]],[[[15,[12,14]]],[[19,[76,[77,[76]]]]]],0,[[[15,[12,14]]],[[19,[76,[77,[76]]]]]],0,[27,2],[[],63],[38,[[19,[76,[77,[76]]]]]],0,[[],2],[27,63],[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]]],[[19,[76,[77,[76]]]]]],0,[[[82,[-1]]],22,[84,85,86]],[[[87,[-1]]],22,[84,85,86]],[[[88,[-1]]],22,[]],[[[89,[-1]]],22,84],[[[90,[-1]]],22,[84,85,86]],[[[91,[-1]]],22,[84,85,86]],[[[92,[-1]]],22,[84,85,86]],[[[99,[-1]]],22,84],[[[107,[-1]]],22,[]],[[[100,[-1]]],22,84],[101,22],[[[102,[-1,-2]]],22,[103,104,115],[]],[[[80,[-1,-2]]],22,115,115],[109,22],[[[93,[-1]]],22,115],0,0,[[[16,[-1]],-2],[[2,[[16,[-3]],[16,[-4]]]]],[],75,[],[]],[[],[[15,[130,14]]]],[[],27],0,[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,-3]]],75,[],[[131,[97]]]],[-2,[[19,[-2]]],[],[]],[[-2,-3],[[19,[-2]]],108,[],[]],[-2,[[19,[-2]]],[],[]],[[-2,-3],[[19,[-2]]],108,[],[]],[-2,[[19,[-2]]],[],[]],[-2,[[19,[-2]]],108,[]],[[-2,-3],[[19,[-2]]],108,[],[]],[-2,[[19,[-2]]],[60,23,52,108],[]],[[-2,-3],[[19,[-2]]],[60,23,52,108],[],[]],[-2,[[19,[-2]]],[],[]],[[-2,-3],[[19,[-2]]],[],[],[]],[[-1,-2],[[19,[-1]]],[],[]],[-1,[[19,[-1]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[12]]],115],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[12]]],2],[[[82,[-1]],-2],-3,[84,85,86],75,[]],[[[88,[-1]],-2],-3,[],75,[]],[[[89,[-1]],-2],-3,84,75,[]],[[[90,[-1]],-2],-3,[84,85,86],75,[]],[[[91,[-1]],-2],-3,[84,85,86],75,[]],[[[92,[-1]],-2],-3,[84,85,86],75,[]],[[[87,[-1]],22],[[19,[114,83]]],[84,85,86]],[[[88,[-1]],22],[[19,[114,83]]],[84,85,86]],[[[89,[-1]],22],[[19,[114,83]]],84],[[[92,[-1]],22],[[19,[114,83]]],[85,86,84]],[22,[[19,[114,83]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[109,122],44],0,[[],[[15,[132,14]]]],[[-1,63],[[77,[76]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[133,10],133],[[133,63],133],0,0,[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[133,[[19,[134,135]]]],[133,134],[[],133],[136,136],[137,137],[134,134],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[19,[136,34]]],35],[-1,[[19,[137,34]]],35],[-1,[[19,[134,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[],136],[[],135],[[],134],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[136,[[15,[12,14]]]],[[136,-1],2,[42,43]],[[137,-1],2,[42,43]],[[134,-1],2,[42,43]],0,[[136,45],[[19,[2,46]]]],[[135,45],[[19,[2,46]]]],[[137,45],[[19,[2,46]]]],[[134,45],[[19,[2,46]]]],[[133,-1,-2],133,[[138,[128]]],139],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[134,128],137],0,[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,136],0,0,0,0,[[27,10],136],0,0,[63,134],[136,22],[137,22],[134,22],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,-1],-2,75,[]],[134,[[19,[134,135]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[63,10],134],0,0,0,0,0,[[],63],[[],63],[[],63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[[140,[-1,-2,-3]]],[[141,[127,14]]],142,143,[]],[[],[[140,[-1,-2,144]]],142,143],[[],[[140,[-1,-2,145]]],142,143],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[140,[-1,-2,-3]]],44,142,143,[]],[[[146,[-1]]],[[146,[-1]]],142],[[-1,-2],2,[],[]],[[],[[16,[2]]]],[[],[[140,[-1,-2,-3]]],142,143,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[[[146,[-1]],[146,[-1]]],44,[]],[[[140,[-1,-2,-3]],45],[[19,[2,46]]],[142,67],[143,67],67],[[[146,[-1]],45],[[19,[2,46]]],[142,67]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,0,[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[127]]]],[22,[[146,[-1]]],142],[-1,[],[]],0,[[-1,-2],[],[],139],[[[140,[-2,-3,144]],-4],[],[],[142,[147,[-1]]],143,139],[[[140,[-2,-3,145]],-4],[],[],[[147,[-1]],142],143,139],[[-1,[146,[-2]],-3],[[16,[[19,[2,2]]]]],[],[],[]],[[-1,-2,-3],[],[],139,139],[[[140,[-2,-3,145]],-4,-5],[],[],[142,[148,[-1]]],143,139,139],[[[140,[-2,-3,144]],-4,-5],[],[],[142,[148,[-1]]],143,139,139],[[-1,-2],[],[],139],[[[36,[12]],-1],[[16,[-2]]],[],[]],[-1,16,[]],[[[140,[-1,-2,144]],-3],[],142,143,139],[[[140,[-1,-2,145]],-3],[],142,143,139],[[-1,[36,[12]]],[],[]],[[[140,[-1,-2,145]],[36,[12]]],[],142,143],[[[140,[-1,-2,144]],[36,[12]]],[],142,143],[16,[[19,[2,2]]]],[[],[[19,[2,2]]]],[[-1,-2],[[16,[[19,[2,2]]]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[12]],-1,-2],44,[],[]],[-1,44,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[140,[-1,-2,-3]],[15,[14]]],[[140,[-1,-2,-3]]],142,143,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-2,[[19,[2,116]]],[],[]],[-2,[[19,[2,116]]],[],[]],[-2,[[19,[-1,116]]],[],[]],[-2,[[19,[[16,[-1]],116]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[22,-1,[]],[22,-1,[]],[22,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,63],[27,63],[27,63],[27,63],[27,63],[27,63],[27,63],[27,63],[[],63],[[],63],[[],63],[[],63],[27,63],[27,63],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[149,149],149],[[150,150],150],[[149,-1],149,[[21,[149]]]],[[149,-1],149,[[21,[149]]]],[[150,-1],150,[[21,[150]]]],[[150,-1],150,[[21,[150]]]],[[149,149],2],[[150,150],2],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[36,[12]]],[]],[-1,[[36,[12]]],[]],[-1,[[36,[12]]],[]],[-1,[[36,[12]]],[]],[-1,[[36,[12]]],[]],[153,[[36,[12]]]],[154,[[36,[12]]]],[155,[[36,[12]]]],[153,[[36,[12]]]],[154,[[36,[12]]]],[155,[[36,[12]]]],[153,[[13,[12]]]],[154,[[13,[12]]]],[155,[[13,[12]]]],[153,[[13,[12]]]],[154,[[13,[12]]]],[155,[[13,[12]]]],[153,[[36,[12]]]],[154,[[36,[12]]]],[155,[[36,[12]]]],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[151,[-2,-3]]],[],[],152],[-1,[[36,[12]]],[]],[-1,[[36,[12]]],[]],[-1,[[36,[12]]],[]],[153,12],[154,12],[155,12],[-1,[[19,[[36,[-2]],156]]],[],157],[-1,[[19,[[36,[-2]],156]]],[],157],[-1,[[19,[[36,[-2]],156]]],[],157],[153,12],[154,12],[155,12],[149,[[36,[38]]]],[150,[[36,[38]]]],[153,[[36,[12]]]],[154,[[36,[12]]]],[155,[[36,[12]]]],[-1,[[19,[[36,[-2]],156]]],[],157],[-1,[[19,[[36,[-2]],156]]],[],157],[-1,[[19,[[36,[-2]],156]]],[],157],[149,33],[150,33],[149,27],[150,27],[149,38],[150,38],[149,22],[150,22],[[153,[36,[12]]],2],[[154,[36,[12]]],2],[[155,[36,[12]]],2],[[149,22],44],[[150,22],44],[[149,149],149],[[150,150],150],[[153,153]],[[153,153]],[[154,154]],[[154,154]],[[155,155]],[[155,155]],[[149,149],2],[[150,150],2],[[153,153],2],[[153,153],2],[[154,154],2],[[154,154],2],[[155,155],2],[[155,155],2],[[149,149],149],[[150,150],150],[[153,153]],[[153,153]],[[154,154]],[[154,154]],[[155,155]],[[155,155]],[[149,149],2],[[150,150],2],[[153,153],2],[[153,153],2],[[154,154],2],[[154,154],2],[[155,155],2],[[155,155],2],[149,22],[150,22],[[149,149],149],[[150,150],150],[[153,153]],[[153,153]],[[154,154]],[[154,154]],[[155,155]],[[155,155]],[[149,149],2],[[150,150],2],[[153,153],2],[[153,153],2],[[154,154],2],[[154,154],2],[[155,155],2],[[155,155],2],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[149,22],12],[[150,22],12],[[154,154],2],[[149,149],[[16,[149]]]],[[149,149],[[16,[149]]]],[[150,150],[[16,[150]]]],[[150,150],[[16,[150]]]],[[149,149],[[16,[149]]]],[[149,149],[[16,[149]]]],[[150,150],[[16,[150]]]],[[150,150],[[16,[150]]]],[[149,149],[[16,[149]]]],[[149,149],[[16,[149]]]],[[150,150],[[16,[150]]]],[[150,150],[[16,[150]]]],[149,[[16,[149]]]],[150,[[16,[150]]]],[[149,149],[[16,[149]]]],[[150,150],[[16,[150]]]],[[149,149],[[16,[149]]]],[[150,150],[[16,[150]]]],[[149,149],[[16,[149]]]],[[149,149],[[16,[149]]]],[[150,150],[[16,[150]]]],[[150,150],[[16,[150]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[149,149],[150,150],[153,153],[154,154],[155,155],[158,158],[159,159],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[149,149],31],[[150,150],31],[[153,153],31],[[154,154],31],[[155,155],31],[[153,153],44],[[154,154],44],[[155,155],44],[-1,[[19,[149,34]]],35],[-1,[[19,[150,34]]],35],[-1,[[19,[153,34]]],35],[-1,[[19,[154,34]]],35],[-1,[[19,[155,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[],149],[[],150],[[],153],[[],154],[[],155],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[-1,[[19,[149]]],41],[-1,[[19,[150]]],41],[-1,[[19,[153]]],41],[-1,[[19,[154]]],41],[-1,[[19,[155]]],41],[-1,[[19,[158]]],41],[-1,[[19,[159]]],41],[[149,-1],149,[[21,[149]]]],[[149,-1],149,[[21,[149]]]],[[150,-1],150,[[21,[150]]]],[[150,-1],150,[[21,[150]]]],[[149,-1],2,[[21,[149]]]],[[150,-1],2,[[21,[150]]]],[[149,149],[[2,[149,149]]]],[[150,150],[[2,[150,150]]]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[[149,149],44],[[150,150],44],[[153,153],44],[[154,154],44],[[155,155],44],[[158,158],44],[[159,159],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[22,149],[22,150],[[149,45],[[19,[2,46]]]],[[149,45],[[19,[2,46]]]],[[149,45],[[19,[2,46]]]],[[149,45],[[19,[2,46]]]],[[150,45],[[19,[2,46]]]],[[150,45],[[19,[2,46]]]],[[150,45],[[19,[2,46]]]],[[150,45],[[19,[2,46]]]],[[153,45],[[19,[2,46]]]],[[153,45],[[19,[2,46]]]],[[153,45],[[19,[2,46]]]],[[153,45],[[19,[2,46]]]],[[154,45],[[19,[2,46]]]],[[154,45],[[19,[2,46]]]],[[154,45],[[19,[2,46]]]],[[154,45],[[19,[2,46]]]],[[155,45],[[19,[2,46]]]],[[155,45],[[19,[2,46]]]],[[155,45],[[19,[2,46]]]],[[155,45],[[19,[2,46]]]],[[158,45],[[19,[2,46]]]],[[159,45],[[19,[2,46]]]],[162,149],[[[13,[12]]],149],[163,149],[164,149],[18,149],[27,149],[165,149],[[[36,[12]]],149],[-1,-1,[]],[22,149],[166,149],[12,149],[149,149],[[[13,[12]]],149],[38,149],[39,149],[33,149],[37,149],[40,149],[18,150],[33,150],[163,150],[39,150],[166,150],[-1,-1,[]],[149,150],[[[13,[12]]],150],[[[13,[12]]],150],[[[36,[12]]],150],[27,150],[162,150],[37,150],[22,150],[12,150],[165,150],[149,150],[38,150],[164,150],[40,150],[150,150],[[[13,[12]]],153],[[[13,[12]]],153],[[[13,[12]]],153],[154,153],[-1,-1,[]],[[[13,[12]]],154],[153,154],[[[13,[12]]],154],[[[13,[12]]],154],[167,154],[-1,-1,[]],[168,154],[169,155],[[[13,[12]]],155],[[[13,[12]]],155],[[[13,[12]]],155],[170,155],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[36,[12]]],149],[[[36,[12]]],150],[18,[[19,[149,171]]]],[18,[[19,[150,171]]]],[172,[[19,[-1,71]]],[]],[172,[[19,[-1,71]]],[]],[172,[[19,[-1,71]]],[]],[[],153],[[],154],[[],155],[[[36,[12]]],149],[[[36,[12]]],150],[38,153],[38,154],[38,155],[38,153],[38,154],[38,155],[38,153],[38,154],[38,155],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[36,[12]]],153],[[[36,[12]]],154],[[[36,[12]]],155],[18,[[19,[149]]]],[18,[[19,[150]]]],[18,[[19,[153,173]]]],[18,[[19,[154,173]]]],[18,[[19,[155,173]]]],[[18,27],[[19,[149,174]]]],[[18,27],[[19,[149]]]],[[18,27],[[19,[150,174]]]],[[18,27],[[19,[150]]]],[[149,149],150],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[149,-1],2,177],[[[36,[12]]]],[[150,-1],2,177],[[153,-1],2,177],[[154,-1],2,177],[[155,-1],2,177],[[[36,[12]]]],[[[36,[12]]]],[-1,[],115],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[[153,-1],[],[[178,[[36,[12]]]]]],[[154,-1],[],[[178,[[36,[12]]]]]],[[155,-1],[],[[178,[[36,[12]]]]]],[[153,-1],[],[[178,[[36,[12]]]]]],[[154,-1],[],[[178,[[36,[12]]]]]],[[155,-1],[],[[178,[[36,[12]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[153],[154],[155],[149,149],[150,150],[149,[[16,[149]]]],[150,[[16,[150]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,172],[[19,[71]]],[]],[[-1,172],[[19,[71]]],[]],[[-1,172],[[19,[71]]],[]],[153],[154],[155],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[149,44],[149,44],[150,44],[150,44],[153,44],[154,44],[155,44],[149,27],[150,27],[[],22],[[],22],[[],22],[149,33],[150,33],[149,27],[150,27],[149,38],[150,38],[[],22],[[],22],[[],22],[[],22],[[],22],[[],149],[[],150],[[149,162],149],[[149,165],149],[[149,40],149],[[149,149],149],[[149,37],149],[[149,27],149],[[149,163],149],[[149,37],149],[[149,22],149],[[149,166],149],[[149,165],149],[[149,166],149],[[149,149],149],[[149,12],149],[[149,163],149],[[149,38],149],[[149,12],149],[[149,12],149],[[149,27],149],[[149,37],149],[[149,22],149],[[149,37],149],[[149,27],149],[[149,40],149],[[149,165],149],[[149,162],149],[[149,165],149],[[149,40],149],[[149,12],149],[[149,38],149],[[149,40],149],[[149,163],149],[[149,162],149],[[149,27],149],[[149,22],149],[[149,166],149],[[149,38],149],[[149,163],149],[[149,22],149],[[149,38],149],[[149,162],149],[[149,149],149],[[149,149],149],[[149,166],149],[[150,37],150],[[150,37],150],[[150,27],150],[[150,37],150],[[150,12],150],[[150,22],150],[[150,27],150],[[150,166],150],[[150,150],150],[[150,165],150],[[150,40],150],[[150,40],150],[[150,150],150],[[150,22],150],[[150,37],150],[[150,40],150],[[150,162],150],[[150,150],150],[[150,163],150],[[150,165],150],[[150,27],150],[[150,38],150],[[150,38],150],[[150,12],150],[[150,162],150],[[150,150],150],[[150,165],150],[[150,163],150],[[150,38],150],[[150,165],150],[[150,22],150],[[150,162],150],[[150,22],150],[[150,27],150],[[150,166],150],[[150,162],150],[[150,163],150],[[150,12],150],[[150,40],150],[[150,12],150],[[150,38],150],[[150,166],150],[[150,166],150],[[150,163],150],[[149,166],2],[[149,149],2],[[149,38],2],[[149,12],2],[[149,40],2],[[149,162],2],[[149,165],2],[[149,37],2],[[149,27],2],[[149,163],2],[[149,22],2],[[150,38],2],[[150,150],2],[[150,166],2],[[150,22],2],[[150,37],2],[[150,165],2],[[150,12],2],[[150,162],2],[[150,40],2],[[150,163],2],[[150,27],2],[149,149],[150,150],[[],149],[[],149],[[],150],[[],150],[[[15,[[15,[12,14]],14]],179]],[[[15,[[15,[12,14]],14]],179]],[[[15,[[15,[12,14]],14]],179]],[[149,149],[[2,[149,44]]]],[[150,150],[[2,[150,44]]]],[[149,149],[[2,[149,44]]]],[[150,150],[[2,[150,44]]]],[149,[[2,[149,44]]]],[150,[[2,[150,44]]]],[[149,149],[[2,[149,44]]]],[[150,150],[[2,[150,44]]]],[[149,149],[[2,[149,44]]]],[[150,150],[[2,[150,44]]]],[[149,149],[[16,[31]]]],[[150,150],[[16,[31]]]],[[153,153],[[16,[31]]]],[[154,154],[[16,[31]]]],[[155,155],[[16,[31]]]],[[149,149],149],[[150,150],150],[[],153],[[],154],[[],155],[-1,153,[180,43]],[-1,154,[180,43]],[-1,155,[180,43]],[153,2],[154,2],[155,2],[[153,-1],2,[180,43]],[[154,-1],2,[180,43]],[[155,-1],2,[180,43]],[[149,-1],149,[[21,[149]],65]],[[149,-1],149,[[21,[149]],65]],[[150,-1],150,[[21,[150]],65]],[[150,-1],150,[[21,[150]],65]],[[149,-1],2,[[21,[149]],65]],[[150,-1],2,[[21,[150]],65]],[12,153],[12,154],[12,155],[[149,149],149],[[150,150],150],[[149,149],149],[[150,150],150],[[149,149],149],[[150,150],150],[[149,-1],19,70],[[150,-1],19,70],[[153,-1],19,70],[[154,-1],19,70],[[155,-1],19,70],[[158,-1],19,70],[[159,-1],19,70],[[149,-1],149,[[21,[149]]]],[[149,-1],149,[[21,[149]]]],[[150,-1],150,[[21,[150]]]],[[150,-1],150,[[21,[150]]]],[[149,-1],2,[[21,[149]]]],[[150,-1],2,[[21,[150]]]],[[149,-1],149,[[21,[149]]]],[[149,-1],149,[[21,[149]]]],[[150,-1],150,[[21,[150]]]],[[150,-1],150,[[21,[150]]]],[[149,-1],2,[[21,[149]]]],[[150,-1],2,[[21,[150]]]],[[149,-1],149,[[21,[149]]]],[[149,-1],149,[[21,[149]]]],[[150,-1],150,[[21,[150]]]],[[150,-1],150,[[21,[150]]]],[[149,149],2],[[150,150],2],[[149,[36,[12]]],2],[[150,[36,[12]]],2],[153,[[13,[12]]]],[154,[[13,[12]]]],[155,[[13,[12]]]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[149,[36,[12]]],2],[[150,[36,[12]]],2],[153,38],[154,38],[155,38],[153,38],[154,38],[155,38],[153,38],[154,38],[155,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[149,27],[150,27],[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]],179]],[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]],179]],[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]],179]],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[150,[[19,[149,182]]]],[-1,[[19,[-2]]],[],[]],[150,[[19,[149,182]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[149,-1],-2,75,[]],[[150,-1],-2,75,[]],[[153,-1],-2,75,[]],[[154,-1],-2,75,[]],[[155,-1],-2,75,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],149],[[],149],[[],150],[[],150],[[],153],[[],154],[[],155],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,[[-1,-2],[[19,[-3,183]]],[],[],[]],[[184,38],184],[[184,184],184],[[184,184],2],[[[185,[-1]],186],2,187],[-1,[[19,[[16,[27]],183]]],43],[[122,[13,[12]]],[[16,[27]]]],0,[-1,[[19,[[19,[[19,[2,97]],83]],183]]],[]],[-1,[[19,[[19,[[19,[2,188]],83]],183]]],[]],[[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]],[190,[-1,[189,[-1]],[15,[12,14]]]]],2,187],0,[-1,[[151,[-2,-3]]],[],[],152],[-1,[[36,[12]]],[]],[193,194],[193,38],[-1,195,[]],[196,[[36,[12]]]],[-1,[[19,[[36,[-2]],156]]],[],157],[-1,[[192,[-2,-3]]],[],[],[]],[[[192,[-2,-1,-3]]],[[192,[-2,-1,-3]]],187,[[197,[-1]]],[]],0,[198,[[19,[[16,[184]],199]]]],[[198,184],2],0,0,[-1,[[19,[[15,[-2,14]],183]]],[],[]],[[[192,[-2,-1,-3]]],-2,187,[[197,[-1]]],[[200,[-1]],85,86]],[[[192,[-2,-1,-3]]],-2,187,[[197,[-1]]],[[200,[-1]],85,86]],0,0,[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[201,[-2,-1,-3]]],[[192,[-2,-1,-3]]],187,[[197,[-1]]],[]],[[-1,[202,[-2]]],[[19,[[15,[12,14]],183]]],[],[]],0,[[122,122],44],[[[185,[-1]]],[[0,[127]]],187],[[[203,[-1,-2]]],44,[],[]],[[-1,-2,198],[[19,[204,183]]],[],[]],[[[205,[-1,-2]],206,207,38,38],44,115,115],[[[205,[-1,-2]],206,207,38,38,[15,[12,14]]],44,115,115],[[[185,[-1]],[36,[12]]],[[16,[[2,[[0,[127]],208]]]]],187],[[-1,208,[36,[12]]],[[19,[[16,[209]]]]],[]],[[[192,[-2,-1,-3]],208,[36,[12]]],[[19,[[16,[209]]]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[[185,[-1]],[36,[12]],[36,[12]]],[[0,[127]]],187],[[-1,208,[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],[]],[[[185,[-1]],208,[36,[12]]],[[16,[[16,[[36,[12]]]]]]],187],[[[192,[-2,-1,-3]],208,[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],187,[[197,[-1]]],[[200,[-1]],85,86]],0,[[-1,208,[36,[12]]],[[19,[16]]],[]],[[[192,[-2,-1,-3]],208,[36,[12]]],[[19,[16]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[-1,208,-2,179],[[2,[44,[190,[-3,[189,[-3]],[15,[12,14]]]]]]],[],127,[]],[[[185,[-1]],208,-2,179],[[19,[[2,[44]]]]],187,[[210,[-1]]]],[[[192,[-2,-1,-3]],208,-4,179],[[2,[44,[190,[-1,[189,[-1]],[15,[12,14]]]]]]],187,[[197,[-1]]],[[200,[-1]],85,86],127],[[[185,[-1]]],[[0,[127]]],187],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[184,184],[193,193],[122,122],[[[211,[-1]]],[[211,[-1]]],[23,212]],[[[213,[-1]]],[[213,[-1]]],23],[[[203,[-1,-2]]],[[203,[-1,-2]]],23,23],[[[214,[-1,-2]]],[[214,[-1,-2]]],23,23],[179,179],[[[185,[-1]]],[[185,[-1]]],187],[198,198],[204,204],[[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[215,215],[216,216],[[[217,[-1]]],[[217,[-1]]],[23,218]],[196,196],[219,219],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,[36,[12]]],[[19,[[16,[209]]]]],[]],[[[192,[-2,-1,-3]],[36,[12]]],[[19,[[16,[209]]]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[184,184],31],[[193,193],31],[[216,216],31],[[219,219],31],[[-1,[190,[-2,[189,[-2]],[15,[12,14]]]],[15,[[2,[[15,[12,14]],[16,[[15,[12,14]]]]]],14]],[15,[[2,[[15,[12,14]],[15,[[2,[[15,[12,14]],[16,[[15,[12,14]]]]]],14]]]],14]]],[[19,[2]]],[],[]],0,[[[185,[-1]]],[[19,[2,220]]],187],[-1,221,[]],0,[-1,[[19,[38,183]]],[]],0,[-1,[[19,[-2,34]]],35,[]],[-1,[[19,[184,34]]],35],[-1,[[19,[193,34]]],35],[-1,[[19,[122,34]]],35],[-1,[[19,[[211,[-2]],34]]],35,212],[-1,[[19,[[213,[-2]],34]]],35,108],[-1,[[19,[[203,[-2,-3]],34]]],35,[],[]],[-1,[[19,[[214,[-2,-3]],34]]],35,[],[]],[-1,[[19,[179,34]]],35],[222,[[16,[-1]]],108],[-1,[[19,[222,34]]],35],[-1,[[19,[198,34]]],35],[-1,[[19,[204,34]]],35],[-1,[[19,[215,34]]],35],[-1,[[19,[216,34]]],35],[-1,[[19,[[217,[-2]],34]]],35,218],[-1,[[19,[196,34]]],35],[-1,[[19,[223,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[-1,[78,[-2]]],[[19,[79,34]]],35,[]],[[-1,[15,[12,14]]],[[19,[[16,[[15,[[2,[[15,[12,14]],216]],14]]]],183]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[-1,[16,[27]]],[[19,[122,34]]],35],[-1,[[2,[[15,[14]]]]],[]],[[],184],[[],224],[[],122],[[],179],[[],[[185,[-1]]],187],[[],198],[[],204],[[],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[[],216],[[],196],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],0,[22,-1,[]],[22,-1,[]],[184,38],[22,-1,[]],[[[221,[-1]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[196,18],[22,-1,[]],[223],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[[221,[-1]]],-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[224,72],44],[-1,[[19,[184]]],41],[-1,[[19,[122]]],41],[-1,[[19,[216]]],41],[-1,[[19,[196]]],41],[[[13,[12]]],[[2,[[13,[12]],27]]]],[-1,113,[]],[-1,113,[]],0,[[[185,[-1]],-2,179],[[19,[[225,[-1]],71]]],187,[[210,[-1]]]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],0,[[],215],[184,[[15,[12,14]]]],[193,[[15,[12,14]]]],[-1,[[15,[12,14]]],[]],[222,[[15,[12,14]]]],[198,[[15,[12,14]]]],[215,[[15,[12,14]]]],[216,[[15,[12,14]]]],[196,[[15,[12,14]]]],[223,[[15,[12,14]]]],[36,[[15,[12,14]]]],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[[184,-1],2,[42,43]],[[193,-1],2,[42,43]],[[-1,-2],2,[],[42,43]],[[122,-1],2,[42,43]],[[[211,[-1]],-2],2,212,[42,43]],[[[213,[-1]],-2],2,115,[42,43]],[[[203,[-1,-2]],-3],2,[],[],[42,43]],[[[214,[-1,-2]],-3],2,[],[],[42,43]],[[179,-1],2,[42,43]],[[222,-1],2,[42,43]],[[198,-1],2,[42,43]],[[204,-1],2,[42,43]],[[215,-1],2,[42,43]],[[216,-1],2,[42,43]],[[[217,[-1]],-2],2,218,[42,43]],[[223,-1],2,[42,43]],[215,[[16,[22]]]],[[],[[16,[22]]]],[-1,22,[]],[[[185,[-1]]],[[19,[2,226]]],187],[[184,-1],44,[[21,[38]],65]],[[193,193],44],[[122,122],44],[[[211,[-1]],[211,[-1]]],44,[]],[[[213,[-1]],[213,[-1]]],44,[]],[[[203,[-1,-2]],[203,[-1,-2]]],44,[],[]],[[[214,[-1,-2]],[214,[-1,-2]]],44,[],[]],[[179,179],44],[[222,222],44],[[204,204],44],[[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]],[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],44,187],[[215,215],44],[[216,216],44],[[[217,[-1]],[217,[-1]]],44,[]],[[196,196],44],[[219,219],44],[[223,223],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[[192,[-2,-1,-3]]],[[227,[-2,-1,-3]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[-1,-2],[[19,[2,183]]],[],[]],[[-1,-2],-3,43,75,[]],[[-1,208,[36,[12]]],[[19,[44]]],[]],[[-1,[36,[12]]],[[19,[44]]],[]],[[[185,[-1]]],[[19,[2,228]]],187],[[224,-1],2,229],0,[-1,[[16,[215]]],[]],[[[192,[-2,-1,-3]]],[[16,[215]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[-1,36,[]],[-1,[],[]],[204,44],[-1,[[19,[183]]],[]],[[184,45],[[19,[2,46]]]],[[184,45],[[19,[2,46]]]],[[193,45],[[19,[2,46]]]],[[224,45],[[19,[2,46]]]],[[183,45],[[19,[2,46]]]],[[183,45],[[19,[2,46]]]],[[122,45],[[19,[2,46]]]],[[122,45],[[19,[2,46]]]],[[[211,[-1]],45],[[19,[2,46]]],[67,212]],[[[213,[-1]],45],[[19,[2,46]]],67],[[[203,[-1,-2]],45],[[19,[2,46]]],67,67],[[[214,[-1,-2]],45],[[19,[2,46]]],67,67],[[179,45],[[19,[2,46]]]],[[179,45],[[19,[2,46]]]],[[[185,[-1]],45],[[19,[2,46]]],187],[[[192,[-2,-1,-3]],45],[[19,[2,46]]],187,[[197,[-1]]],[[200,[-1]]]],[[215,45],[[19,[2,46]]]],[[216,45],[[19,[2,46]]]],[[[217,[-1]],45],[[19,[2,46]]],[218,67]],[[[217,[-1]],45],[[19,[2,46]]],218],[[196,45],[[19,[2,46]]]],[[196,45],[[19,[2,46]]]],[[219,45],[[19,[2,46]]]],[-1,-1,[]],[-1,-1,[]],[38,184],[-1,-1,[]],[-1,[[221,[-1]]],[]],[230,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[141,[231,14]]],183],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[233,[206,[232,[-1,-2]],207]]],[[214,[-1,-2]]],[],[]],[[[233,[206,[234,[-1,-2]],207]]],[[214,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[95,[[185,[-1]]],187],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[95,179]]],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[-1,-1,[]],[[[2,[[15,[[2,[[16,[208]],[15,[[2,[[15,[12,14]],[16,[[15,[12,14]]]]]],14]]]],14]],179]]],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[[[2,[[237,[[16,[208]],[235,[[15,[12,14]],[15,[12,14]],14]],236]],179]]],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[[[2,[[235,[[15,[12,14]],[15,[12,14]],14]],179]]],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[-1,-1,[]],[-1,-1,[]],[27,216],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,196],[-1,-1,[]],[-1,-1,[]],[238,-1,[]],[172,[[19,[-1,71]]],[]],[172,[[19,[-1,71]]],[]],[238,-1,[]],[[],216],[-1,-2,239,[]],[-1,-2,240,[]],[38,193],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[238,-1,[]],[[241,193],184],[[-1,-2,-3,179],[[2,[[190,[-4,[189,[-4]],[15,[12,14]]]]]]],[],127,127,[]],0,[[-1,38,206],[[19,[[16,[222]],183]]],[]],[[-1,[16,[[15,[12,14]]]]],[[19,[[15,[12,14]],183]]],[]],[[198,[13,[12]]],[[19,[[16,[-1]],199]]],108],[[204,[13,[12]]],[[19,[[16,[-1]],199]]],108],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[224,72],[[16,[195]]]],[-1,[[15,[[2,[[15,[12,14]],27,27,44]],14]]],[]],[-1,[[15,[132,14]]],[]],[-1,[[19,[[15,[[2,[206,38]],14]],183]]],[]],[-1,[[19,[44,183]]],43],[[-1,-2],[[19,[44,183]]],43,139],[[122,[13,[12]],-1],44,139],[[[36,[12]]]],[[184,-1],2,177],[[193,-1],2,177],[[[36,[12]]]],[-1,[],[]],[-1,[],[]],[[216,-1],2,177],[[],[[217,[-1]]],218],[-1,[],115],[-1,[],[]],0,[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],0,0,0,[[-1,198],[[19,[[15,[14]],183]]],[]],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],2],[-1,[[19,[2,183]]],[]],[[-1,224],[[19,[2,183]]],[]],[216],[[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]],-2,179],2,187,229],[[-1,-2],-3,[],75,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[215,[[19,[242,[244,[243]]]]]],[204,[[245,[[13,[12]],[15,[12,14]],14]]]],[[-1,172],[[19,[71]]],[]],[[-1,172],[[19,[71]]],[]],[216],[[[246,[-1]]],-1,[]],[215,[[0,[247]]]],[215,[[190,[-1,[248,[-1]],[15,[12,14]]]]],187],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[215,[[249,[[15,[12,14]],14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[192,[-2,-1,-3]]],-2,187,[[197,[-1]]],[[200,[-1]],85,86]],[[-1,-2],[[19,[225,71]]],43,210],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[[[185,[-1]]],44,187],[215,44],[[[217,[-1]]],44,218],[[[185,[-1]],[36,[12]]],[[0,[127]]],187],[224,[[0,[127]]]],[215,[[0,[247]]]],[[-1,250],[[19,[[251,[-2]]]]],[],[]],[198,22],[[38,38,-1],[[15,[12,14]]],115],[[38,38,-1,[15,[12,14]]],2,115],0,[[],22],[[224,224],2],[-1,215,229],0,[-1,[[19,[223,183]]],[]],[[-1,27],[[19,[[16,[223]],183]]],[]],[-1,[[19,[[15,[27,14]],183]]],[]],0,[113,-1,[]],[[[15,[14]]],-1,[]],[[],224],[[38,[214,[-1,-2]]],[[203,[-1,-2]]],[],[]],[[[15,[12,14]]],222],[[],198],[[],204],[-2,[[201,[-2,-1,[191,[-1]]]]],187,[[197,[-1]]]],[-1,215,229],[[[15,[12,14]]],223],[[-2,-3],[[201,[-2,-1,-3]]],187,[[197,[-1]]],[]],0,[[-1,208,[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],[]],[[[192,[-2,-1,-3]],208,[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[-1,[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],[]],[[[192,[-2,-1,-3]],[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[-1,[],[]],[[],[[217,[-1]]],218],[[[185,[-1]]],252,187],[[[185,[-1]]],[[0,[127]]],187],0,[-1,[[19,[2,183]]],[]],[-1,[[19,[2,183]]],[]],[[[203,[-1,-2]]],206,[],[]],[[[214,[-1,-2]]],206,[],[]],[204,44],[[[15,[[15,[12,14]],14]],179]],0,[[-1,250],[[19,[[253,[-2]]]]],[],[]],[-1,[],[]],[[184,-1],[[16,[31]]],[[21,[38]],65]],[[193,193],[[16,[31]]]],[[216,216],[[16,[31]]]],[[219,219],[[16,[31]]]],[[],[[217,[-1]]],218],0,0,0,0,[-1,[[16,[254]]],[]],[-1,[[16,[27]]],[]],[[198,[13,[12]],-1],[[19,[2,199]]],115],[[204,[13,[12]],-1],[[19,[2,199]]],[115,255]],[[-1,250],19,[]],[[[192,[-2,-1,-3]],250],19,187,[[197,[-1]]],[[200,[-1]],85,86]],[-1,[[2,[27,27,27,27]]],[]],[-1,2,[]],0,[[224,-1],2,256],[[-1,-2],2,[],256],[[-1,257],2,[]],[[[192,[-2,-1,-3]],257],2,187,[[197,[-1]]],[[200,[-1]],85,86]],[[224,72,[141,[256,14]]],[[19,[2,258]]]],[[198,[13,[12]],-1],2,115],[-1,2,[]],[[[185,[-1]]],[[19,[2,220]]],187],[[[192,[-2,-1,-3]]],[],187,[[197,[-1]]],[[200,[-1]],85,86]],[[[203,[-1,-2]]],38,[],[]],0,[[[214,[-1,-2]]],38,[],[]],0,[-1,221,[]],[-1,[[19,[122,183]]],[]],[[184,-1],184,[[21,[38]]]],[[184,-1],184,[[21,[38]]]],[[184,-1],19,70],[[122,-1],19,70],[[[213,[-1]],-2],19,129,70],[[216,-1],19,70],[[196,-1],19,70],[[[13,[12]],27],[[13,[12]]]],[[-1,219],2,[]],[[[185,[-1]],44],2,187],[-1,2,[]],[[[203,[-1,-2]]],38,[],[]],[-1,2,[]],[[[185,[-1]],[36,[12]],[16,[[36,[12]]]]],2,187],[-1,2,[]],[[[192,[-2,-1,-3]]],2,187,[[197,[-1]]],[[200,[-1]],85,86]],[-1,2,[]],[[[185,[-1]],[15,[12,14]],[16,[[15,[12,14]]]]],2,187],[[-1,[15,[132,14]]],2,[]],[[[260,[259,14]],[205,[-1,-2]],206,38,38],[[16,[[261,[-1,-2,207,206]]]]],115,115],0,[184,22],[193,22],[-1,22,[]],[122,22],[[[211,[-1]]],22,212],[[[213,[-1]]],22,115],[[[203,[-1,-2]]],22,[],[]],[[[214,[-1,-2]]],22,[],[]],[179,22],[222,22],[198,22],[204,22],[215,22],[216,22],[[[217,[-1]]],22,218],[223,22],[-1,[[19,[2,34]]],35],[-1,[[19,[193,183]]],[]],[183,[[16,[231]]]],0,0,0,0,[[[185,[-1]]],2,187],[-1,[[19,[183]]],[]],[-1,[],[]],[179,[[16,[27]]]],[122,179],0,0,0,[[-1,[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],[]],[[[185,[-1]],[36,[12]]],[[16,[[16,[[36,[12]]]]]]],187],[[[192,[-2,-1,-3]],[36,[12]]],[[19,[[16,[[15,[12,14]]]]]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[-1,[36,[12]]],[[19,[16]]],[]],[[[192,[-2,-1,-3]],[36,[12]]],[[19,[16]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[-1,-2,179],[[2,[[190,[-3,[189,[-3]],[15,[12,14]]]]]]],[],127,[]],[[[185,[-1]],-2,179],[[2,[44]]],187,[[210,[-1]]]],[[[192,[-2,-1,-3]],-4,179],[[2,[[190,[-1,[189,[-1]],[15,[12,14]]]]]]],187,[[197,[-1]]],[[200,[-1]],85,86],127],[[184,184],184],[[184,184],2],[[-1,203,222],[[19,[[16,[2]],183]]],[]],0,0,0,0,0,0,0,0,0,0,[198,[[19,[[16,[241]],199]]]],[215,[[19,[242,[244,[243]]]]]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[215,[[190,[-1,[248,[-1]],[15,[12,14]]]]],187],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],0,[[[185,[-1]]],22,187],0,[[[185,[-1]]],[[36,[186]]],187],0,0,[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]],179]],[-1,[[19,[[151,[-2,-3]],[181,[-2]]]]],[],[],152],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[12,[[19,[179,2]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[18,[[19,[216,2]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]],-2,179],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187,229],[[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]],[190,[-1,[189,[-1]],[15,[12,14]]]]],[[192,[[190,[-1,[189,[-1]],[15,[12,14]]]],-1,[191,[-1]]]]],187],[-1,262,[]],[[[192,[-2,-1,-3]]],262,187,[[197,[-1]]],[[200,[-1]],85,86]],[[184,-1],-2,75,[]],[[193,-1],-2,75,[]],[[-1,-2],-3,[],75,[]],[[222,-1],-2,75,[]],[[198,-1],-2,75,[]],[[215,-1],-2,75,[]],[[216,-1],-2,75,[]],[[223,-1],-2,75,[]],[[-1,263],[[19,[[19,[114,83]],183]]],[]],[-1,[[19,[[19,[114,83]],183]]],[]],[[-1,263],[[19,[[19,[114,83]],183]]],[]],[[[185,[-1]],[36,[12]],-2],[[15,[12,14]]],187,139],0,[-1,[[19,[122,183]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[2]]],[]],[[[192,[-2,-1,-3]]],[[19,[2]]],187,[[197,[-1]]],[[200,[-1]],85,86]],[[[201,[-2,-1,-3]],-4],[[201,[-2,-1,-4]]],187,[[197,[-1]]],[],[]],[[[201,[-2,-1,-3]],[16,[-4]]],[[201,[-2,-1,-4]]],187,[[197,[-1]]],[],[]],[[[201,[-2,-1,-3]],[16,[[254,[-1]]]]],[[201,[-2,-1,-3]]],187,[[197,[-1]]],[]],[[[201,[-2,-1,-3]],[254,[-1]]],[[201,[-2,-1,-3]]],187,[[197,[-1]]],[]],[[[192,[-2,-1,-3]]],[[201,[-2,-1,-3]]],187,[[197,[-1]]],[]],0,0,0,0,0,0,0,0,[-1,[[16,[184]]],[]],[-1,[[16,[-2]]],[],[]],[184,-1,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,[[19,[[16,[184]],199]]],[]],[[-1,184],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[264],[22,-1,[]],[22,-1,[]],[22,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[241,193],264],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[184,264],[[264,198],[[266,[[141,[265,14]]]]]],[-1,[[19,[-2]]],[],[]],[[264,[13,[12]],[36,[12]]],[[266,[[141,[265,14]]]]]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[19,[[19,[2,97]],83]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[267,122],[[19,[2,71]]]],0,0,0,[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],0,[22,2],[22,2],[-1,2,218],[-1,2,218],[[],63],[[]],[[267,45],[[19,[2,46]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[[],22],[[],22],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],0,0,0,0,0,0,0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[263,[[19,[114,83]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,95],[[19,[2,71]]],[]],[[95,95],[[19,[2,71]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[95,71]]],[]],0,[95,95],[[-1,-2],2,[],[]],[[],95],[22,-1,[]],[22,-1,[]],[22,2],[[95,45],[[19,[2,46]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,75,[]],[[]],[[126,40]],[[-1,-2],2,[],139],[132,2],[-1,[[19,[2,97]]],[]],[132,2],[-1,[[19,[83]]],[]],0,[[],268],[[-1,22],[[19,[[19,[77]],83]]],[]],[[-1,-2],10,[],[]],0,[[],[[16,[[2,[-1]]]]],[]],[-1,[[16,[-2]]],[],[]],[-1,16,[]],[-1,[[16,[[93,[-2]]]]],[],[]],[-1,[[16,[93]]],[]],[[-1,95],[[19,[2,71]]],[]],[[],-1,[]],[[],-1,[]],[[-1,-2],-3,[],[],[]],[[],63],[[268,268],268],[[268,268],2],[[268,268],268],[[268,268],2],[268,12],[[268,268],268],[[268,268],2],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[[269,[-1]],97]]],115],[-1,2,[]],[-1,2,[]],[-1,[[19,[95,71]]],[]],[[]],[[-1,-2],2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[19,[2,97]]],[]],[[],44],[-1,44,[]],[-1,44,[]],[[[36,[-1]],[36,[-1]],[15,[-1,14]]],2,[]],[[[36,[-1]],[36,[-1]],[36,[-1]]],2,[]],[[-1,-2],[[19,[83]]],[],[]],[-1,[[19,[83]]],[]],[[-1,-1],2,[]],[-1,16,[]],[[-1,-1],[[16,[-1]]],[]],[[-1,-1],[[16,[-1]]],[]],[-1,[[16,[-2]]],[],[[270,[-1]]]],[-2,[[16,[-1]]],[],[[51,[-1]]]],[[-1,-1],[[16,[-1]]],[]],[[-1,22],[[16,[-1]]],[23,24,25]],[[-1,27],[[16,[-1]]],[]],[[-1,27],[[16,[-1]]],[]],[[-1,-1],[[16,[-1]]],[]],[[],[[15,[14]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[132,132],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[[[282,[-1]]],[[282,[-1]]],43],[[[283,[-1]]],[[283,[-1]]],23],[284,284],[285,285],[268,268],[[[286,[-1]]],[[286,[-1]]],23],[[[287,[-1]]],[[287,[-1]]],23],[124,124],[288,288],[105,105],[126,126],[130,130],[289,289],[290,290],[291,291],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[132,132],31],[[[282,[-1]],[282,[-1]]],31,43],[[268,268],31],[[124,124],31],[[105,105],31],[[126,126],31],[[-1,-1],[[16,[31]]],[]],[[-1,-1],[[16,[31]]],60],[268,268],[[[36,[-1]],[36,[-1]]],[[2,[[15,[-1,14]],[15,[-1,14]]]]],[]],[-1,44,[]],[[-1,-2],44,[],[]],[[[2,[-1,-2]]],44,[],[]],[-1,44,[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[-1,44,[]],[[-1,-2],44,[],[]],[-1,44,[]],[[-1,-2],44,[],[]],[-1,44,[]],[[-1,-2],44,[],[]],[-1,44,[]],[-1,44,60],[-1,44,[]],[-1,44,[52,292]],[-1,44,292],[[268,268],44],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[[16,[-1]]],23],[-1,[[16,[-2]]],[23,21],[23,[21,[-1]]]],[-2,-1,[],[[21,[-1]]]],[-1,[[16,[-2]]],[23,51],[23,[51,[-1]]]],[289,-1,[[131,[38]],293]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,-1,[]],[-1,[[16,[-1]]],23],[-1,[[16,[-2]]],[23,21],[23,[21,[-1]]]],[-1,[[16,[-2]]],[23,51],[23,[51,[-1]]]],[[],22],[[],22],0,[[],[[16,[105]]]],[[],105],0,[-1,[[19,[2,97]]],[]],[[]],[[]],[[],2],[-1,[[19,[132,34]]],35],[-1,[[19,[[282,[-2]],34]]],35,[]],[-1,[[19,[[282,[-2]],294]]],295,43],[-1,[[19,[116,34]]],35],[-1,[[19,[125,34]]],35],[-1,[[19,[285,34]]],35],[-1,[[19,[268,34]]],35],[-1,[[19,[[286,[-2]],34]]],35,108],[-1,[[19,[[287,[-2]],34]]],35,108],[-1,[[19,[105,34]]],35],[-1,[[19,[126,34]]],35],[-1,[[19,[130,34]]],35],[-1,[[19,[290,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[-1,[[2,[[15,[14]]]]],[]],[[],271],[[],272],[[],273],[[],274],[[],275],[[],276],[[],277],[[],278],[[],279],[[],280],[[],281],[[],[[282,[-1]]],43],[[],[[283,[-1]]],111],[[],[[286,[-1]]],111],[[],[[287,[-1]]],111],[[],288],[[],105],[[],126],[[],296],[[],289],[[],291],[-1,-1,[]],[[-1,-2],[[19,[-3,-4]]],[],75,[],[]],[[-1,-2],[[16,[-3]]],[],75,[]],[[-1,-2],[[19,[-3,-4]]],[],75,[],[]],[[-1,-2,-3],-4,[],75,75,[]],[[-1,-2,-3],-4,[],75,75,[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[-1,[[16,[-2]]],[],[]],[[-1,-2],[[19,[-3,-2]]],[],67,[]],[[-1,-2],[[19,[-3,-4]]],[],75,[],67],0,[[-1,18],-1,[]],[[-1,-1],2,[]],[[-1,-1],-1,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],-1,[]],[[-1,-1],2,[]],[[-1,-1],-1,[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[-1,-2,[],[]],[[-1,-2],-2,[],[]],[-1,-2,[],111],[[-1,-2],-3,[],75,[]],[[],[[19,[2,97]]]],[-1,[],[]],[-1,[[19,[97]]],[]],[-1,[],[]],[[[282,[-1]],[282,[-1]]],[[19,[31,294]]],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[-1,[[19,[[282,[-2]]]]],41,43],[[[282,[-1]],-2],[[19,[-1]]],297,41],[-1,[[19,[[286,[-2]]]]],41,297],[[268,268],268],[-1,113,[]],[-1,113,[]],[-1,[[19,[77]]],[]],[-1,[[19,[76,[77,[76]]]]],[]],[[-1,-2],[],[],[]],[[-1,-2],[[19,[2,97]]],[],[]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[[[298,[-2,-1]]],2,[],[[299,[-1]]]],[22,2],[22,2],[[[300,[-2,-1]]],2,[],[[299,[-1]]]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[[[269,[-1]]],2,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[-1,[[19,[2,-1]]],[]],[[[301,[-1,-2]]],[[19,[2,[301,[-1,-2]]]]],[302,303,65,304,67,111],[[305,[-1]]]],0,[[],268],[[[282,[-1]],-2],[[19,[2,294]]],43,306],[268,[[15,[12,14]]]],[[[286,[-1]]],[[15,[12,14]]],115],[[[287,[-1]]],[[15,[12,14]]],115],[126,[[15,[12,14]]]],[36,[[15,[12,14]]]],[[132,-1],2,[42,43]],[[[282,[-1]],-2],2,[],[42,43]],[[116,-1],2,[42,43]],[[125,-1],2,[42,43]],[[285,-1],2,[42,43]],[[268,-1],2,[42,43]],[[[286,[-1]],-2],2,115,[42,43]],[[[287,[-1]],-2],2,115,[42,43]],[[105,-1],2,[42,43]],[[126,-1],2,[42,43]],[[130,-1],2,[42,43]],[[290,-1],2,[42,43]],[[[287,[-1]]],[[36,[12]]],108],[[[282,[-1]]],[[19,[307,294]]],43],[[[287,[-1]]],22,108],[[[308,[12]],-1],2,[]],[[[308,[12]],-1],2,309],[[-1,-2],2,127,[]],[[-1,-2],2,127,309],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,268],[[19,[2,97]]],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-2],[[19,[-2,30]]],[],20],[-1,[[19,[-2,30]]],[],[]],[[-1,-2],[[19,[-3,30]]],20,20,[]],[-1,[[19,[2,27]]],[]],[-1,[[19,[-2,30]]],[],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[-1,-2],[[19,[-2,30]]],[],20],[[[310,[-1,-2,-3]]],[[16,[[2,[-1,-3]]]]],[],[],[]],[-1,[[19,[116]]],[]],[[-1,-2],[[19,[116]]],[],[]],[[-1,-2],[[19,[116]]],[],[]],[-1,[[19,[16,116]]],311],[[-1,22],[[19,[-1,30]]],[24,25,23]],[-1,[[19,[2,97]]],[]],[[-1,-1],[[19,[-1,30]]],[]],[[-1,-1],[[19,[2,30]]],[]],[[],[[19,[2,312]]]],[[],2],[[132,132],44],[[[282,[-1]],[282,[-1]]],44,43],[[[283,[-1]],[283,[-1]]],44,[]],[[284,284],44],[[285,285],44],[[268,268],44],[[[286,[-1]],[286,[-1]]],44,[]],[[[287,[-1]],[287,[-1]]],44,[]],[[124,124],44],[[288,288],44],[[105,105],44],[[126,126],44],[[126,40],44],[[130,130],44],[[289,289],44],[[290,290],44],[[313,313],44],[[291,291],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,76],-2,[],[]],[[-1,76],-2,[],[[131,[27]]]],[-1,[[2,[[16,[9]],63]]],[]],[-1,[[2,[[16,[-1]],63]]],[]],[-1,[[2,[[16,[-1]],63]]],[]],[268,268],[-1,2,[]],[63,[[19,[63,313]]]],[[],44],[[],[[19,[2,312]]]],[[],2],[[],[[19,[2,312]]]],[[268,-1],2,229],[[[13,[12]],-1,268],2,[]],[[-1,-2],-1,[],[]],[-1,36,[]],[-1,[],[]],[[[16,[27]]],[[19,[[314,[[36,[12]]]],97]]]],[-1,44,[]],[[-1,-2],44,[],[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,[[16,[-2]]],229,[]],[[132,45],[[19,[2,46]]]],[[271,45],[[19,[2,46]]]],[[272,45],[[19,[2,46]]]],[[273,45],[[19,[2,46]]]],[[274,45],[[19,[2,46]]]],[[275,45],[[19,[2,46]]]],[[276,45],[[19,[2,46]]]],[[277,45],[[19,[2,46]]]],[[278,45],[[19,[2,46]]]],[[279,45],[[19,[2,46]]]],[[280,45],[[19,[2,46]]]],[[281,45],[[19,[2,46]]]],[[[282,[-1]],45],[[19,[2,46]]],43],[[116,45],[[19,[2,46]]]],[[125,45],[[19,[2,46]]]],[[284,45],[[19,[2,46]]]],[[285,45],[[19,[2,46]]]],[[268,45],[[19,[2,46]]]],[[268,45],[[19,[2,46]]]],[[268,45],[[19,[2,46]]]],[[268,45],[[19,[2,46]]]],[[268,45],[[19,[2,46]]]],[[[286,[-1]],45],[[19,[2,46]]],67],[[[287,[-1]],45],[[19,[2,46]]],67],[[124,45],[[19,[2,46]]]],[[288,45],[[19,[2,46]]]],[[105,45],[[19,[2,46]]]],[[126,45],[[19,[2,46]]]],[[296,45],[[19,[2,46]]]],[[130,45],[[19,[2,46]]]],[[289,45],[[19,[2,46]]]],[[290,45],[[19,[2,46]]]],[[313,45],[[19,[2,46]]]],[[291,45],[[19,[2,46]]]],[-1,291,[]],[[],291],[-1,291,309],[[],291],[-1,[],[]],[-1,-1,[]],[[[15,[12,14]]],132],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[230,-1,[]],[-1,[[286,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[16,[268]]]],[12,268],[12,268],[-1,289,115],[[[15,[12,14]]],[[287,[-1]]],108],[238,-1,[]],[172,[[19,[-1,71]]],[]],[238,-1,[]],[-1,-2,239,[]],[-1,-2,240,[]],[-1,268,229],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[22,22],289],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[238,-1,[]],0,[[]],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,111],[[],44],[[],44],[[],[[16,[44]]]],[[],12],[[],[[16,[12]]]],[[],12],[[],40],[[],[[16,[40]]]],[[],40],[[],27],[[],[[16,[27]]]],[[],27],[[],38],[[],[[16,[38]]]],[[],38],[[],33],[[],33],[[],[[16,[33]]]],[[],[[16,[165]]]],[[],165],[[],165],[[],163],[[],[[16,[163]]]],[[],163],[[],166],[[],[[16,[166]]]],[[],166],[[],37],[[],37],[[],[[16,[37]]]],[[],[[16,[39]]]],[[],39],[[],39],[[-1,216],[[16,[-2]]],[],108],[[]],[[]],[-1,-2,303,[303,111]],[[],27],[[],126],[-1,[[16,[315]]],[]],[-1,12,[]],[[],[[36,[12]]]],[-1,288,[]],[-1,18,[]],[[],[[36,[18]]]],[18,[[36,[18]]]],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[-1,-2],38,[175,43],176],[[],[[36,[18]]]],[-1,[[16,[[15,[12,14]]]]],[]],[[],[[16,[-1]]],[]],[[-1,216],[[36,[12]]],[]],[[[308,[12]]],2],[[[308,[12]]],2],[-1,2,127],[-1,2,127],[132,44],[132,44],[[132,-1],2,177],[[[36,[12]]]],[-1,[],[]],[-1,[],[]],[[[282,[-1]],-2],2,43,177],[[268,-1],2,177],[-1,[],115],[[[269,[-1]]],44,[]],[-1,44,[]],[-1,[],[]],[[[269,[-1]]],2,[]],0,[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[16,[-1]]],[]],[[],[[16,[22]]]],[[],22],0,[[],[[19,[2,97]]]],[[],[[15,[124,14]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],[[16,[-1]]],[]],[[[36,[-1]]],2,[]],[[-1,-2],[[19,[2,97]]],[],[]],[[-1,-2],[[19,[2,97]]],303,[303,111]],[[268,268],2],[-1,-1,43],[-1,[[16,[-1]]],43],[[],2],[[],2],[[268,268],268],[[268,268],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,-2,[],[]],[-1,[],[]],[[-1,172],[[19,[71]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[[-1,-2],-3,[],115,[]],[-1,[[16,[[93,[-2]]]]],[],[]],[268,44],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[27,44],[268,44],[[],44],[[-1,-2],44,[],[]],[-1,44,[]],[-1,44,[]],[-1,44,60],[-1,44,[]],[[],44],[-1,44,[]],[[],44],[-1,44,[]],[-1,[[16,[44]]],[]],[-1,[[16,[-2]]],[],[]],[[-1,-1],44,[]],[-1,44,[]],[[]],0,[[],[[36,[216]]]],[-1,[[19,[2,97]]],[]],[-1,-2,[],[]],[-1,22,[]],[[],[[16,[27]]]],[-1,[[19,[125]]],[]],[[],[[19,[125]]]],[[],[[19,[125]]]],[-1,[[19,[-1,125]]],[316,23,60,67,317]],[[[283,[-1]],-1],[[19,[-1,125]]],[]],0,[-1,301,[]],[[],27],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],27],0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-1]]],[]],[-2,[[16,[-1]]],[],[[21,[-1]]]],[-2,[[16,[-1]]],[],[23,[51,[-1]]]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-1]]],[]],[-1,[[16,[-2]]],21,[[21,[-1]]]],[-1,[[16,[-2]]],[23,51],[23,[51,[-1]]]],[[-1,[16,[-1]]],-1,[]],[[-1,[16,[-1]]],2,[]],[[-1,-1],-1,[]],[[[301,[-1,-2]],[301,[-1,-2]]],[[301,[-1,-2]]],[302,303,65,304,67,111],[[305,[-1]]]],[[-1,-1],2,[]],[[],[[15,[318,14]]]],[[],22],[[]],[[]],0,[[],[[16,[18]]]],[[],18],0,[-1,[],[]],[-2,-1,[],[[21,[-1]]]],[[[2,[-1,-2,-3,-4]]],-1,[],[],[],[]],[[[2,[-1,-2]]],-1,[],[]],[[[2,[-1,-2,-3]]],-1,[],[],[]],[[[2,[-1]]],-1,[]],[-1,-1,[]],[-1,[],[]],[[]],[[-1,-2],[],[],[]],[[-1,-2],[[19,[-3,97]]],[],75,[]],[[-1,-2],[[19,[-3,97]]],303,75,[]],[[-1,-2],[[19,[-3,97]]],[],75,[]],[[-1,-2],[[19,[-3,97]]],303,75,[]],[[],[[16,[18]]]],[[],18],0,[[],[[16,[[13,[12]]]]]],[[],[[13,[12]]]],[113,-1,[]],[[[15,[14]]],-1,[]],[[-1,289],[[19,[-2,97]]],[],[]],[-1,-2,[],[]],[[[15,[12,14]]],132],[16,[[16,[-1]]],[]],[-1,[[319,[-1]]],[]],[[[36,[12]]],320],[-1,[[298,[-3,-2]]],139,[],[[299,[-2]]]],[[],[[300,[-2,-1]]],[],[[299,[-1]]]],[[40,12,12],105],[40,126],[[],-1,[]],[268,268],[[[314,[[36,[12]]]]],[[19,[97]]]],[[[321,[12]]],2],[[]],[[],194],[-1,[],[]],[-1,2,[]],[-1,2,[]],[-1,[[322,[-1]]],[]],[[],2],[[],126],[27,2],[-1,2,[]],[-1,2,[]],[[],2],[-1,2,127],[[-1,63],63,[]],[[-1,63],63,[]],[-1,63,[]],[-1,63,[]],[-1,2,[]],[-1,2,[]],[[44,-1,-1],2,127],[-1,2,[]],[[],63],[[],63],[-1,2,[]],[-1,2,[]],[-1,2,127],[[],-1,[]],[[[15,[[15,[12,14]],14]],179]],[[[322,[-1,-2]]],[[19,[-2,-1]]],[],111],[[-1,[36,[12]]],44,[]],0,[[],2],0,0,[[],18],[[],[[13,[12]]]],0,[-1,[],[]],[[132,132],[[16,[31]]]],[[[282,[-1]],[282,[-1]]],[[16,[31]]],43],[[268,268],[[16,[31]]]],[[124,124],[[16,[31]]]],[[105,105],[[16,[31]]]],[[126,40],[[16,[31]]]],[[126,126],[[16,[31]]]],[[],[[15,[130,14]]]],0,[[],[[19,[2,323]]]],[-1,-2,[],[]],[[[269,[-1]]],[[19,[[2,[-1,[16,[27]]]],97]]],108],[27,[[269,[-1]]],[]],[[],2],[[16,22,[19,[2,97]]],[[19,[2,83]]]],[[-1,22],[[19,[83]]],[]],[[],[[19,[2,83]]]],[22,[[19,[2,83]]]],0,[[],[[13,[12]]]],[-1,44,[]],[-1,2,[]],[[[36,[12]],324,[13,[12]]],[[19,[44,290]]]],[[],[[19,[2,97]]]],[-1,16,[]],[-1,2,139],[126,2],[[[36,[12]]],[[2,[-1,-2]]],[],[]],[[],[[2,[-1,-2]]],[],[]],[[],16],[[-1,27,27],[[2,[-1,-1]]],[]],[[-1,27,27,[2,[-1,-1]]],[[2,[-1,-1]]],[]],[[-1,27,27,[2,[-1,-1]]],2,[]],[[],2],[[[319,[-1]],[36,[12]]],[[19,[2,34]]],35],[[320,[36,[12]]],[[19,[2,34]]]],0,[[[269,[-1]]],[[19,[[2,[-1,[16,[27]]]],97]]],108],[[-1,-2],[],[],[]],[[],16],[[[319,[-1]]],[[19,[[16,[22]],34]]],35],[320,[[19,[[16,[22]],34]]]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],303],[[268,268],2],[[[13,[12]],-1],2,[]],[[-1,27],[[19,[2,97]]],[]],[[-1,-1,285],[[19,[2,97]]],[]],[[-1,-1,285],[[19,[97]]],[]],[[-1,-1,285],[[19,[97]]],[]],[[],2],[-1,2,[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[],[]],[-1,[],[]],[-1,2,[]],[-1,2,[]],[-1,[[19,[2]]],[]],[[],2],[[],-1,[]],[[[322,[-1,-2]]],[[19,[-1,-2]]],111,[]],[-1,-2,[],[[68,[-1]]]],[-2,-1,[],[[62,[-1]]]],[[-1,-1],2,24],[[-1,-1],-1,[]],[-1,2,24],[-1,2,24],[-1,-1,24],[[-1,-1],-1,[]],[-1,-1,24],[[-1,22],-1,[]],[[-1,-1],2,24],[[-1,-1],-1,[]],0,[[[282,[-1]],-2],19,43,70],[[[286,[-1]],-2],19,129,70],[63,63],[63,63],[[],27],[[268,268,44],2],[[-1,-2],2,[],[[21,[-1]]]],[-1,2,[]],[[[13,[12]],-1,268],2,[]],[[[36,[-1]],[36,[-1]]],2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[16,[-1]]],2,[]],[-1,2,[]],[-1,2,[]],[[-1,268,284],[[19,[2]]],[]],[[],-1,[]],0,[132,22],[116,22],[125,22],[285,22],[268,22],[[[286,[-1]]],22,115],[[[287,[-1]]],22,115],[105,22],[126,22],[130,22],[290,22],[-1,[[19,[2,34]]],35],[-1,[[19,[2,34]]],35],[-1,2,[]],[-1,[],[]],[-1,2,[]],[-1,2,[]],[[],[[15,[-1,14]]],[]],[[],[[15,[-1,14]]],[]],[[-1,-2],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],2,[],[]],[-1,[],[]],0,[[],[[15,[130,14]]]],[[],[[13,[12]]]],0,[[],[[13,[12]]]],[[],2],[[],2],[[268,268],268],[[268,268],2],[[-1,-1],2,[]],[[-1,-2],10,[],[]],[-1,2,[]],[[],2],[-1,2,309],[[],2],[[268,268],268],[[]],[[-1,[217,[-2]]],[[19,[16]]],[],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[217,[-2]]],[[19,[16]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[268,268],2],0,[-1,[],[]],[[]],[[-1,-2,-2],[[19,[2,97]]],[],[]],[[-1,-1,284],[[19,[2,97]]],[]],[[[15,[[2,[[15,[12,14]],[15,[12,14]]]],14]],179]],[-1,[[19,[-2,97]]],75,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2,-1]]],[],[]],[-1,[[19,[-2,-1]]],[],[]],[-1,[[19,[-1,-1]]],[]],[-2,[[19,[-1,-2]]],[],[[21,[-1]]]],[-2,[[19,[-1,-2]]],[],[23,[51,[-1]]]],[-1,[[19,[-2,-1]]],[],[]],[-1,[[19,[-2,-1]]],[],[]],[-1,[[19,[-1,-1]]],[]],[-1,[[19,[-2,-1]]],21,[[21,[-1]]]],[-1,[[19,[-2,-1]]],[23,51],[23,[51,[-1]]]],[[[287,[-1]]],[[16,[-1]]],108],[-1,[[19,[2,-1]]],[]],[[[322,[-1,-2]]],[[19,[2,[322,[-1,-2]]]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[[2,[-2,-3]]]]],[],[],108],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[-1,-2],[[16,[-3]]],[],115,[]],[-1,[[19,[2]]],[]],[-2,[[19,[-1,2]]],[],[[51,[-1]]]],[-1,[[19,[-1,2]]],[]],[-1,[[19,[2]]],[]],[[],[[19,[2]]]],[[],[[19,[2]]]],[[],[[19,[2]]]],[[-1,-2],[[19,[-3,-4]]],[],75,[],[[131,[97]]]],[[-1,-2],[[19,[-3,-4]]],303,75,[],[[131,[97]]]],[[[322,[-1,-2]]],[[19,[2,[322,[-1,-2]]]]],[],[]],[-1,[[19,[-1]]],[]],[[-1,-2],[[19,[-1]]],[],[]],[-1,[[19,[-1]]],292],[-1,[[19,[-2,-1]]],[],[]],[[-1,-2],[[19,[-1]]],[],[]],[[-1,-2],[[19,[-1]]],[],[]],[-1,[[19,[-1]]],[]],[[-1,-2],[[19,[-1]]],[],[]],[-1,[[19,[-1]]],23],[[-1,-2],[[19,[-1]]],23,[]],[[-1,-2],[[19,[-3,-1]]],[],[],[]],[[-1,-2],[[19,[-1]]],[],[]],[-1,[[19,[-1]]],[]],[-1,[[19,[-1]]],[]],[[-1,-2],[[19,[-1]]],[],[]],[-1,[[19,[16,-1]]],311],[[[322,[-1,-2]]],[[19,[-2,[322,[-1,-2]]]]],[],[]],[[[322,[-1,-2]]],[[19,[-1,[322,[-1,-2]]]]],[],[]],[[-1,-2],[[19,[-3,-1]]],[],75,[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],0,[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[268,268],268],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[-1,-1,[316,23,60,67,317]],[[],2],[-1,2,[]],[[],[[19,[2,323]]]],[[],2],[-1,2,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[-1,-2,289],[[19,[-1,97]]],[],[]],[[268,-1],-2,75,[]],[[[286,[-1]],-2],-3,115,75,[]],[[[287,[-1]],-2],-3,115,75,[]],[[126,-1],-2,75,[]],[[-1,263,22],[[19,[114,83]]],[]],[[-1,22],[[19,[114,83]]],[]],[263,[[19,[114,83]]]],[22,[[19,[114,83]]]],[[],[[15,[14]]]],[[[282,[-1]],[282,[-1]]],[[19,[31,294]]],[]],[[-1,-2],44,[],[[325,[[36,[12]]]]]],[[-1,-2],44,[],[[325,[[36,[12]]]]]],[-1,[[19,[[16,[-2]],18]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,2],0,[[],[[15,[132,14]]]],[[-1,63],[[77,[76]]],[]],[[-1,63],[[77,[76]]],[]],[[-1,268,284],[[19,[97]]],[]],0,[[],-1,[]],[[],-1,[]],[[],[[301,[-1,-2]]],[302,303,65,304,67,111],[[305,[-1]]]],[[],320],[[[282,[-1]]],2,[]],0,0,0,[-1,-1,[]],[[-1,-2],[[19,[-3,-4]]],[],75,[],[]],[[-1,-2],[[16,[-3]]],[],75,[]],[[-1,-2],[[19,[-3,-4]]],[],75,[],[]],[[-1,-2,-3],-4,[],75,75,[]],[[-1,-2,-3],-4,[],75,75,[]],[-1,[[16,[-2]]],[],[]],[[-1,-2],[[19,[-3,-2]]],[],67,[]],[[-1,-2],[[19,[-3,-4]]],[],75,[],67],[[-1,18],-1,[]],[[-1,-2],-2,[],[]],[-1,-2,[],111],[[-1,-2],-3,[],75,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[[326,[-1,-2]]],[[16,[-2]]],108,[]],[[[326,[-1,-2]]],[[16,[-1]]],108,[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[19,[2,2]]]],[[[15,[12,14]]],[[19,[2,2]]]],[[[327,[-1]]],[[327,[-1]]],23],[[[326,[-1,-2]]],[[326,[-1,-2]]],23,23],[328,328],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[19,[[327,[-2]],34]]],35,108],[-1,[[19,[[326,[-2,-3]],34]]],35,108,108],[-1,[[19,[328,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[[[327,[-1]],-2],2,115,[42,43]],[[[326,[-1,-2]],-3],2,115,115,[42,43]],[[328,-1],2,[42,43]],[[[326,[-1,-2]]],2,108,[]],[[[326,[-1,-2]]],2,108,[]],[[[327,[-1]],[327,[-1]]],44,[]],[[[326,[-1,-2]],[326,[-1,-2]]],44,[],[]],[[328,328],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[[327,[-1]],-1],-1,[293,65]],[[[327,[-1]],45],[[19,[2,46]]],67],[[[326,[-1,-2]],45],[[19,[2,46]]],67,67],[[328,45],[[19,[2,46]]]],[-1,-1,[]],[230,-1,[]],[-1,[[326,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[238,-1,[]],[238,-1,[]],[-1,-2,239,[]],[-1,-2,240,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[238,-1,[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],22],[[],22],[[],22],[[],[[19,[-1,2]]],[]],[[[15,[12,14]]],[[19,[-1,2]]],[]],[[[327,[-1]]],[[19,[97]]],[]],[[[15,[12,14]],[327,[-1]]],[[19,[97]]],[]],[[[326,[-1,-2]]],[[2,[[326,[-1,-2]],[16,[-2]]]]],108,[]],[[[327,[-1]],[16,[[2,[-1,27]]]],12,-2,-3],[[19,[97]]],[],[],[]],[[[15,[12,14]],[327,[-1]],[16,[[2,[-1,27]]]],12,-2,-3],[[19,[2]]],[],[],[]],[[[327,[-1]]],22,115],[[[326,[-1,-2]]],22,115,115],[328,22],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],[[19,[2,2]]]],[[[15,[12,14]]],[[19,[2,2]]]],[[],[[19,[-1,2]]],[]],[[[15,[12,14]]],[[19,[-1,2]]],[]],[[[327,[-1]]],[[19,[97]]],[]],[[[15,[12,14]],[327,[-1]]],[[19,[97]]],[]],[[[327,[-1]],[16,[[2,[-1,27]]]],12,-2,-3],[[19,[97]]],[],[],[]],[[[15,[12,14]],[327,[-1]],[16,[[2,[-1,27]]]],12,-2,-3],[[19,[2]]],[],[],[]],0,0,0,0,0,0,[[],[[19,[2,2]]]],[[[15,[12,14]]],[[19,[2,2]]]],[[],[[19,[-1,2]]],[]],[[[15,[12,14]]],[[19,[-1,2]]],[]],[[[327,[-1]]],[[19,[97]]],[]],[[[15,[12,14]],[327,[-1]]],[[19,[97]]],[]],[[[327,[-1]],[16,[[2,[-1,27]]]],12,-2,[326,[-3]]],[[19,[97]]],[],[],[]],[[[15,[12,14]],[327,[-1]],[16,[[2,[-1,27]]]],12,-2,[326,[-3]]],[[19,[2]]],[],[],[]],0,0,0,0,0,0,0,[[],[[19,[2,97]]]],[[[13,[12]]],[[19,[2,97]]]],[[],[[19,[-1,97]]],[]],[[[13,[12]]],[[19,[-1,97]]],[]],[[[327,[-1]]],[[19,[97]]],[]],[[[13,[12]],[327,[-1]]],[[19,[97]]],[]],[[[327,[-1]],[16,[[2,[-1,27]]]],12,-2,[269,[-3]]],[[19,[97]]],[],[],[]],[[[13,[12]],[327,[-1]],[16,[[2,[-1,27]]]],12,-2,[269,[-3]]],[[19,[97]]],[],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],329],[2,329],[330,330],[331,331],[332,332],[333,333],[334,334],[[[335,[-1]]],[[335,[-1]]],23],[336,336],[329,329],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[19,[329,34]]],35],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[-1,[[19,[2,-1]]],[]],[[329,-1],2,[42,43]],[[330,330],44],[[331,331],44],[[332,332],44],[[333,333],44],[[334,334],44],[[[335,[-1]],[335,[-1]]],44,[]],[[336,336],44],[[329,329],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],-1,[],[]],[[330,45],[[19,[2,46]]]],[[331,45],[[19,[2,46]]]],[[332,45],[[19,[2,46]]]],[[333,45],[[19,[2,46]]]],[[334,45],[[19,[2,46]]]],[[[335,[-1]],45],[[19,[2,46]]],67],[[336,45],[[19,[2,46]]]],[[329,45],[[19,[2,46]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[19,[-3]]],[],[],[]],[[-2,-3],[[19,[-1]]],[],[[21,[-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],0,0,[[-1,-2],-3,[],[],[]],[[-1,-2],-3,[],[],[]],[-1,[[15,[12,14]]],[]],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[335,[-1]],44],[[19,[-1,97]]],58],[336,[[19,[2,97]]]],[[-1,-2],44,[],[]],[[],22],[[-1,[16,[-1]]],-1,[]],[[-1,[16,[-1]]],2,[]],[[-1,-1],-1,[]],[[-1,-1],2,[]],0,0,0,0,[-1,[[322,[-1]]],[]],0,[[],19],[[],19],[-1,-2,[],[]],[[-1,27,27],[[2,[-1,-1]]],[]],[[-1,27,27,[2,[-1,-1]]],[[2,[-1,-1]]],[]],[[-1,27,27,[2,[-1,-1]]],2,[]],[329,22],[[-1,-2],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],2,[],[]],[[-1,-1],2,[]],[[-1,-2],[[19,[-3]]],[],[],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[-1,[[19,[2,97]]],[]],[[]],[-1,[[19,[2,97]]],[]],[-1,44,[]],[-1,44,[]],[[],2],[-1,[],[]],[-1,[[19,[97]]],[]],[[-1,268],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[[13,[12]],-1,268],2,[]],[-1,[],[]],[[]],[-1,301,[]],[[]],[[],2],[[],2],[[[13,[12]],-1],2,[]],[[-1,27],[[19,[2,97]]],[]],[[-1,-1,285],[[19,[2,97]]],[]],[[-1,-1,285],[[19,[97]]],[]],[[-1,-1,285],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[],[]],[-1,[],[]],[-1,2,[]],[-1,[[19,[2]]],[]],[[[13,[12]],-1,268],2,[]],[[-1,268,284],[[19,[2]]],[]],[-1,2,[]],[-1,[],[]],[-1,2,[]],[-1,2,[]],[-1,[],[]],[[]],[[-1,-1,284],[[19,[2,97]]],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,16,[]],[[-1,268,284],[[19,[97]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[337,[-1,-2,-3,-4]],-1],2,[],[[338,[-1]]],339,[[340,[289]]]],[[[341,[-1,-2,-3,-4]],-1],2,[],[[338,[-1]]],339,[[340,[289]]]],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],292],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,330],336,[]],[[-1,330],336,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,335,[]],[-1,335,[]],[[],-1,[]],[[[342,[-1,-2,-3,-4]]],[[342,[-1,-2,-3,-4]]],[],[[343,[-1]]],[],[]],[[[337,[-1,-2,-3,-4]]],[[337,[-1,-2,-3,-4]]],[],[[338,[-1]]],[],[]],[[[344,[-1,-2,-3,-4]]],[[344,[-1,-2,-3,-4]]],[],[],[],[]],[[[341,[-1,-2,-3,-4]]],[[341,[-1,-2,-3,-4]]],[],[],[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],2],[-1,[[19,[[342,[-2,-3,-4,-5]],34]]],35,[],[[343,[-2]]],[],[]],[-1,[[19,[[337,[-2,-3,-4,-5]],34]]],35,[],[[338,[-2]]],[],[]],[-1,[[19,[[344,[-2,-3,-4,-5]],34]]],35,[],[],[],[]],[-1,[[19,[[341,[-2,-3,-4,-5]],34]]],35,[],[],[],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,[36,[12]]],[[19,[-1,34]]],[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[27,-1],[[19,[-2,34]]],35,[]],[[-1,334,332,333],[[19,[97]]],[]],[[-1,334,332,333],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[[],[[345,[-1,-2,-3]]],346,[[347,[-1]]],[[347,[-1]]]],[[-1,334],[[19,[345,97]]],[]],[[-1,334],[[19,[345,97]]],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[],2],[-1,2,[]],[-1,2,[]],[[],2],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,2,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[[[345,[-1,-2,-3]]],2,346,[[347,[-1]]],[[347,[-1]]]],[[[342,[-1,-2,-3,-4]],-1],[[19,[2,97]]],[],[[343,[-1]]],339,[[340,[289]]]],[22,2],[[[337,[-1,-2,-3,-4]],-1],[[19,[2,97]]],[],[[338,[-1]]],339,[[340,[289]]]],[22,2],[[[344,[-1,-2,-3,-4]],-1],[[19,[2,97]]],[],[[343,[-1]]],339,[[340,[289]]]],[22,2],[[[341,[-1,-2,-3,-4]],-1],[[19,[2,97]]],[],[[338,[-1]]],339,[[340,[289]]]],[22,2],[[[345,[-1,-2,-3]]],[[19,[2,[345,[-1,-2,-3]]]]],346,[[347,[-1]]],[[347,[-1]]]],[[[344,[-1,-2,-3,-4]]],[[15,[12,14]]],[],[],[],[]],[[[341,[-1,-2,-3,-4]]],[[15,[12,14]]],[],[],[],[]],[[[342,[-1,-2,-3,-4]],-5],2,[],[[343,[-1]]],[],[],[42,43]],[[[337,[-1,-2,-3,-4]],-5],2,[],[[338,[-1]]],[],[],[42,43]],[[[344,[-1,-2,-3,-4]],-5],2,[],[],[],[],[42,43]],[[[341,[-1,-2,-3,-4]],-5],2,[],[],[],[],[42,43]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[[[345,[-1,-2,-3]],[345,[-1,-2,-3]]],44,346,[[347,[-1]]],[[347,[-1]]]],[[[342,[-1,-2,-3,-4]],[342,[-1,-2,-3,-4]]],44,[],[[343,[-1]]],[],[]],[[[337,[-1,-2,-3,-4]],[337,[-1,-2,-3,-4]]],44,[],[[338,[-1]]],[],[]],[[[344,[-1,-2,-3,-4]],[344,[-1,-2,-3,-4]]],44,[],[],[],[]],[[[341,[-1,-2,-3,-4]],[341,[-1,-2,-3,-4]]],44,[],[],[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[[345,[-1,-2,-3]],-1],[[345,[-1,-2,-3]]],346,[[347,[-1]]],[[347,[-1]]]],[[[345,[-1,-2,-3]],45],[[19,[2,46]]],346,[[347,[-1]]],[[347,[-1]]]],[[[342,[-1,-2,-3,-4]],45],[[19,[2,46]]],[],[[343,[-1]]],[],[]],[[[337,[-1,-2,-3,-4]],45],[[19,[2,46]]],[],[[338,[-1]]],[],[]],[[[344,[-1,-2,-3,-4]],45],[[19,[2,46]]],[],[],[],[]],[[[341,[-1,-2,-3,-4]],45],[[19,[2,46]]],[],[],[],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,2,[]],[[],2],[[],2],[[[348,[-1,-2]]],2,[],[]],[[[348,[-1,[349,[-2,-3,-1]]]]],2,[],[[350,[-1]]],339],[[],2],0,[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,44,[]],[-1,44,[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[348,[-1,-2]]],345,[],[[351,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[[],345],[[],345],[[],22],[[],22],[[],22],[[],22],[[[345,[-1,-2,-3]],[345,[-1,-2,-3]]],[[345,[-1,-2,-3]]],346,[[347,[-1]]],[[347,[-1]]]],[[]],[[]],[-1,[[19,[97]]],292],[-1,[[19,[97]]],[]],[[-1,289],[[19,[[342,[-1,-2,-3,-4]],97]]],[],[[343,[-1]]],339,[[340,[289]]]],[[-1,289],[[19,[[337,[-1,-2,-3,-4]],97]]],[],[[338,[-1]]],339,[[340,[289]]]],[[-1,289],[[19,[[344,[-1,-2,-3,-4]],97]]],[],[[343,[-1]]],339,[[340,[289]]]],[[-1,289],[[19,[[341,[-1,-2,-3,-4]],97]]],[],[[338,[-1]]],339,[[340,[289]]]],[[[345,[-1,-2,-3]],[345,[-1,-3,-2]]],[[322,[[345,[-1,-2,-3]],[345,[-1,-3,-2]]]]],346,[[347,[-1]]],[[347,[-1]]]],[[],[[2,[345,345]]]],[[],[[2,[345,345]]]],[[[345,[-1,-2,-3]]],-1,346,[[347,[-1]]],[[347,[-1]]]],[[],2],[[-1,332,333],[],[]],[[-1,332,333],[],[]],[[-1,333],[],[]],[[-1,333],[],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[[],345],[[],345],[[-1,345],[[19,[2,345]]],[]],[[-1,345],[[19,[2,345]]],[]],[-1,[[19,[97]]],292],[-1,[[19,[97]]],[]],[-1,[],292],[-1,[],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[],2],[[],2],[[-1,345,332],[[19,[345,345]]],[]],[[-1,345,332],[[19,[345,345]]],[]],[-1,[[19,[97]]],292],[-1,[[19,[97]]],[]],[[[342,[-1,-2,-3,-4]]],22,[],[[343,[-1]]],[],[]],[[[337,[-1,-2,-3,-4]]],22,[],[[338,[-1]]],[],[]],[[[344,[-1,-2,-3,-4]]],22,[],[],[],[]],[[[341,[-1,-2,-3,-4]]],22,[],[],[],[]],[-1,[[2,[345]]],[]],[-1,[[2,[345]]],[]],[[[345,[-1,-2,-3]],-1],[[2,[[345,[-1,-2,-3]],[345,[-1,-2,-3]]]]],346,[[347,[-1]]],[[347,[-1]]]],[[[345,[-1,-2,-3]],[345,[-1,-2,-3]]],2,346,[[347,[-1]]],[[347,[-1]]]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[[-1,[36,[12]]],[[15,[12,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[]],[[]],[[-1,-1,332],[[19,[97]]],292],[[-1,-1,332],[[19,[97]]],[]],[[-1,-1,334,332,333],[[19,[97]]],[]],[[-1,-1,334,332,333],[[19,[97]]],[]],[[-1,-1,334,331,333],[[19,[97]]],[]],[[-1,-1,334,331,333],[[19,[97]]],[]],[[[345,[-1,-2,-3]]],[[19,[2,[345,[-1,-2,-3]]]]],346,[[347,[-1]]],[[347,[-1]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[13,[12]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,[[15,[12,14]]],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[[],[[74,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[342,[-1,-2,-3,-4]],-1,289],[[19,[[342,[-1,-2,-3,-4]],97]]],[],[[343,[-1]]],339,[[340,[289]]]],[[[337,[-1,-2,-3,-4]],-1,289],[[19,[[337,[-1,-2,-3,-4]],97]]],[],[[338,[-1]]],339,[[340,[289]]]],[[[344,[-1,-2,-3,-4]],-1,289],[[19,[[344,[-1,-2,-3,-4]],97]]],[],[[343,[-1]]],339,[[340,[289]]]],[[[341,[-1,-2,-3,-4]],-1,289],[[19,[[341,[-1,-2,-3,-4]],97]]],[],[[338,[-1]]],339,[[340,[289]]]],[[[344,[-1,-2,-3,-4]],-5],-6,[],[],[],[],75,[]],[[[341,[-1,-2,-3,-4]],-5],-6,[],[],[],[],75,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,334,332,333],[[19,[345,97]]],[]],[[-1,334,332,333],[[19,[345,97]]],[]],[-1,[[19,[16,97]]],[]],[-1,[[19,[16,97]]],[]],[[],[[345,[-1,-2,-3]]],346,[[347,[-1]]],[[347,[-1]]]],0,[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],[[[16,[-1]]],2,352],0,0,0,[-1,[],[]],[-1,[],[]],[-1,44,[]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],0,0,0,0,0,[-1,[],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],[]],[-1,44,[]],[[-1,334],[[19,[97]]],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,44,[]],[[-1,334],[[19,[97]]],[]],[[-1,333],[],[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[2,[345]]],[]],[-1,[],[]],[[-1,-1,334,332,333],[[19,[97]]],[]],[[-1,-1,334,331,333],[[19,[97]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[[353,[-1,-2,-3,-4]]],-1,354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[[],44],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,330],336,[]],[-1,44,[]],[-1,44,[]],[-1,335,[]],[[-1,44],[[19,[2,97]]],[]],[[],2],[[-1,334,332,333],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[[-1,334],[[19,[353,97]]],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[27,[[19,[27,97]]]],[27,[[19,[27,97]]]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[],2],[-1,2,[]],[-1,2,[]],[[],2],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,2,[]],[22,2],[22,2],[22,2],[[[353,[-1,-2,-3,-4]]],2,354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[22,2],[[[353,[-1,-2,-3,-4]]],[[19,[2,[353,[-1,-2,-3,-4]]]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[[[353,[-1,-2,-3,-4]],[353,[-1,-2,-3,-4]]],44,354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[-1,[[19,[2,97]]],[]],[[[353,[-1,-2,-3,-4]],-2],[[353,[-1,-2,-3,-4]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[[],[[19,[2,97]]]],[[[353,[-1,-2,-3,-4]],45],[[19,[2,46]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],2,[],[]],[[],2],[[],2],[[[356,[-1,-2]]],2,[],[]],[[],2],0,[-1,[[19,[2,97]]],[]],[-1,44,[]],[[-1,334],[[19,[97]]],[]],[[-1,334],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[356,[-1,-2]]],353,[],[[357,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],353],[[[353,[-1,-2,-3,-4]],[353,[-1,-2,-3,-4]]],[[19,[[353,[-1,-2,-3,-4]],[2,[[353,[-1,-2,-3,-4]],[353,[-1,-2,-3,-4]]]]]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],0,[[]],[-1,[[19,[97]]],[]],[[[353,[-1,-2,-3,-4]],[353,[-1,-2,-4,-3]]],[[19,[[322,[[353,[-1,-2,-3,-4]],[353,[-1,-2,-4,-3]]]],[2,[[353,[-1,-2,-3,-4]],[353,[-1,-2,-4,-3]]]]]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[[],[[2,[353,353]]]],[[[353,[-1,-2,-3,-4]]],-2,354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[[],2],[[-1,332,333],[],[]],[[-1,333],[],[]],[[-1,334],[[19,[97]]],[]],[[],353],[[-1,353],[[19,[2,353]]],[]],[-1,[[19,[97]]],[]],0,[-1,[],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[[],2],[[-1,353,332],[[19,[353,353]]],[]],[-1,[[19,[97]]],[]],[-1,[[2,[353]]],[]],[[[353,[-1,-2,-3,-4]],-2],[[2,[[353,[-1,-2,-3,-4]],[353,[-1,-2,-3,-4]]]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[[[16,[-1]]],[[19,[2,97]]],[]],[[[353,[-1,-2,-3,-4]],[353,[-1,-2,-3,-4]]],[[19,[2,[353,[-1,-2,-3,-4]]]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[-1,[[19,[2,97]]],[]],[-1,[],[]],[-1,[],[]],[[]],[[-1,-1,332],[[19,[97]]],[]],[[-1,-1,334,332,333],[[19,[97]]],[]],[[-1,-1,334,331,333],[[19,[97]]],[]],[[[353,[-1,-2,-3,-4]]],[[19,[2,[353,[-1,-2,-3,-4]]]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,334,332,333],[[19,[353,97]]],[]],[-1,[[19,[16,97]]],[]],[-1,[[353,[-1,-2,-3,-4]]],354,346,[[355,[-1,-2]]],[[355,[-1,-2]]]],0,0,[[-1,-1],[],[]],[[-1,-1],[[19,[2,97]]],[]],[[-1,-1,-1],[[19,[2,97]]],[]],0,0,0,[-1,[],[]],[-1,[],[]],[-1,44,[]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[[-1,333],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],0,0,0,0,0,[-1,[],[]],[[-1,334,333],[[19,[97]]],[]],[[-1,334,333],[[19,[97]]],[]],[-1,44,[]],[[-1,334],[[19,[97]]],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,44,[]],[[-1,334],[[19,[97]]],[]],[[-1,333],[],[]],[[-1,334],[[19,[97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[2,[353]]],[]],[-1,[],[]],[[-1,-1,334,332,333],[[19,[97]]],[]],[[-1,-1,334,331,333],[[19,[97]]],[]],0,0,0,[[[36,[12]],[36,[12]]],-1,[]],[[],12],[[],[[15,[12,14]]]],[[-1,[15,[12,14]],[15,[12,14]],12],[[19,[2,97]]],[]],[[],[[15,[12,14]]]],0,[[],[[16,[-1]]],[]],[[],[[16,[-1]]],[]],[[],[[16,[-1]]],[]],[[],[[16,[-1]]],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[-1,[[19,[2,-1]]],[]],[[-1,-2],-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[16,[-1]]],-1,[]],[[-1,[16,[-1]]],2,[]],[[-1,-1],-1,[]],[[-1,-1],2,[]],[-1,[[322,[-1]]],[]],[-1,2,[]],[345,2],[353,2],[-2,2,[131,293,53],[[305,[-1]]]],[-1,2,[]],[-1,2,127],[-1,-2,[],[]],[[-1,27,27],[[2,[-1,-1]]],[]],[[-1,27,27,[2,[-1,-1]]],[[2,[-1,-1]]],[]],[[-1,27,27,[2,[-1,-1]]],2,[]],[[-1,-2],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],2,[],[]],[[-1,-1],2,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,0,0,0,0,0,0,0,[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[[36,[12]]],[[16,[[15,[12,14]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]]],[[19,[2,97]]],[]],[[[16,[-1]]],[[19,[2,97]]],[]],[[],44],[[],44],[22,-1,[]],[22,-1,[]],[22,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[],[]],[-1,[],[]],[[],[[16,[-1]]],[]],[[],[[16,[-1]]],[]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[-1,-2],[[19,[2,97]]],115,115],[[-1,-2],[[19,[2,97]]],115,115],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,[[16,[-2]]],115,108],[-1,[[16,[-2]]],115,108],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[[36,[12]]],[[16,[[15,[12,14]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]]],[[19,[2,97]]],[]],[[[16,[-1]]],[[19,[2,97]]],[]],[[],44],[[],44],[[[36,[12]]],[[19,[2,97]]]],[[[36,[12]]],[[19,[2,97]]]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],115],[-1,[[19,[2,97]]],115],[[-1,[36,[12]]],[[16,[[15,[12,14]]]]],[]],[[-1,[36,[12]]],[[16,[[15,[12,14]]]]],[]],[22,-1,[]],[22,-1,[]],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[22,2],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[[-1,-2,44],[[19,[2,97]]],[],[]],[[-1,-2,44],[[19,[2,97]]],[],[]],[-1,[],[]],[-1,[],[]],[[],[[16,[-1]]],[]],[[],[[16,[-1]]],[]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[-1,[36,[12]]],[[19,[2,97]]],[]],[[-1,-2],[[19,[2,97]]],115,115],[[-1,-2],[[19,[2,97]]],115,115],[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[[36,[12]]],[[16,[[15,[12,14]]]]]],[-1,[[19,[2,97]]],[]],[-1,[[19,[2,97]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,[[16,[-2]]],115,108],[-1,[[16,[-2]]],115,108],[[-1,-2],[[16,[-3]]],[],115,108],[[-1,-2],[[16,[-3]]],[],115,108],[-1,[[16,[-2]]],115,108],[-1,[[16,[-2]]],115,108],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[[16,[-1]]],[[19,[2,97]]],[]],[[],44],[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[],[[16,[-1]]],[]],[[]],[[-1,-1],[[19,[2,97]]],[]],[[[16,[-1]]],[[19,[97]]],[]],[[],16],[[]],[-1,[[19,[2,97]]],[]],[-1,[],[]],[-1,[],[]],[[],[[16,[-1]]],[]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[-1,-2],[[19,[2,97]]],115,115],[[-1,-2],[[19,[2,97]]],115,115],[-1,[[19,[2,97]]],[]],[-1,[[16,[-2]]],115,108],[-1,[[16,[-2]]],115,108],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[[16,[-1]]],[[19,[2,97]]],[]],[[-1,-2],[[19,[2,97]]],[],[]],[[],44],[[[36,[12]]],[[19,[2,97]]]],[[[36,[12]]],[[19,[2,97]]]],[[[16,[-1]]],[[19,[2,97]]],[]],[[[16,[-1]]],[[19,[2,97]]],[]],[-1,[[19,[2,97]]],115],[-1,[[19,[2,97]]],115],[[[36,[12]]],[[16,[[15,[12,14]]]]]],[[],[[16,[-1]]],[]],[[]],[[-1,-1,-2],[[19,[97]]],[],[]],[[-1,-1,-2],[[19,[2,97]]],[],[]],[[-1,[36,[12]]],[[16,[[15,[12,14]]]]],[]],[[[16,[-1]]],[[19,[97]]],[]],[[],[[19,[2,97]]]],[[],[[19,[2,97]]]],[[],16],[-1,44,[]],[-1,44,[]],[-1,44,[]],[[],[[16,[-1]]],[]],[[]],[[-1,-2,44],[[19,[2,97]]],[],[]],[-1,[],[]],[-1,[],[]],[[],[[16,[-1]]],[]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[[36,[12]],[36,[12]]],[[19,[2,97]]]],[[[16,[-1]],[36,[12]]],[[19,[2,97]]],[]],[[[16,[-1]],[36,[12]]],[[19,[2,97]]],[]],[[-1,[16,[-2]],[16,[-1]]],[[19,[2,97]]],[],[]],[[-1,-2],[[19,[2,97]]],115,115],[[-1,-2],[[19,[2,97]]],115,115],[[16,[36,[12]]],[[16,[[15,[12,14]]]]]],[-1,[[19,[2,97]]],[]],[-1,[[16,[-2]]],115,108],[-1,[[16,[-2]]],115,108],[[-1,-2],[[16,[-3]]],[],115,108],[[16,-1],[[16,[-2]]],115,108],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],329],[2,329],[22,-1,[]],[22,-1,[]],[22,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,72,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[715,788,789,790,791,792,793,1626,1630,1890,1963,2128,2602,2808,3599,4794,5664,6031,6032,6283,6371,6390,6417,6424,6716,6719,6931,6932,7598],"p":[[3,"Private",11300],[15,"tuple"],[3,"FixedI64",13],[3,"FixedU64",13],[3,"FixedI128",13],[3,"FixedU128",13],[3,"Percent",13],[3,"PerU16",13],[3,"Permill",13],[3,"Perbill",13],[3,"Perquintill",13],[15,"u8"],[15,"array"],[3,"Global",11301],[3,"Vec",11302],[4,"Option",11303],[3,"Rational128",13],[15,"str"],[4,"Result",11304],[8,"FixedPointOperand",13],[8,"Into",11305],[15,"usize"],[8,"Clone",11306],[8,"One",1651],[8,"CheckedMul",1651],[4,"SignedRounding",13],[15,"u32"],[4,"Rounding",13],[3,"RationalInfinite",13],[4,"ArithmeticError",13],[4,"Ordering",11307],[3,"BigUint",1474],[15,"u128"],[3,"Error",11308],[8,"Input",11309],[15,"slice"],[15,"i64"],[15,"u64"],[15,"i128"],[15,"u16"],[8,"Deserializer",11310],[8,"Output",11309],[8,"Sized",11311],[15,"bool"],[3,"Formatter",11312],[3,"Error",11312],[3,"Compact",11313],[8,"PerThing",13],[15,"f64"],[8,"RationalArg",13],[8,"TryInto",11305],[8,"Ord",11307],[8,"Div",11314],[8,"Rem",11314],[8,"Add",11314],[8,"AddAssign",11314],[8,"Unsigned",1651],[8,"Zero",1651],[8,"MultiplyRational",13],[8,"PartialEq",11307],[8,"Mul",11314],[8,"UniqueSaturatedInto",1651],[3,"Weight",11315],[8,"MultiplyArg",13],[8,"Copy",11311],[8,"BaseArithmetic",1651],[8,"Debug",1759],[8,"UniqueSaturatedFrom",1651],[8,"ReciprocalArg",13],[8,"Serializer",11316],[3,"String",11317],[3,"TypeId",11318],[4,"MetaForm",11319],[3,"Type",11320],[8,"FnOnce",11321],[3,"PostDispatchInfo",11322],[3,"DispatchErrorWithPostInfo",11323],[19,"MaybeUninit",11324],[3,"DecodeFinished",11325],[3,"AccountInfo",1819],[8,"EncodeLike",11326],[3,"CheckGenesis",1819],[4,"TransactionValidityError",11327],[8,"Config",1819],[8,"Send",11311],[8,"Sync",11311],[3,"CheckEra",1819],[3,"CheckNonZeroSender",1819],[3,"CheckNonce",1819],[3,"CheckSpecVersion",1819],[3,"CheckTxVersion",1819],[3,"CheckWeight",1819],[4,"RawOrigin",1819],[3,"GenesisConfig",1819],[3,"Storage",6202],[3,"PerDispatchClass",11322],[4,"DispatchError",11323],[3,"Pallet",1819],[4,"Event",1819],[4,"Call",1819],[4,"Phase",1819],[3,"EventRecord",1819],[8,"Parameter",11322],[8,"Member",6273],[3,"CrateVersion",6273],[4,"DecRefStatus",1819],[4,"Error",1819],[8,"Decode",1759],[3,"LastRuntimeUpgradeInfo",1819],[3,"ChainContext",1819],[8,"Default",11328],[4,"DigestItem",11329],[3,"Digest",11329],[3,"ValidTransaction",11327],[8,"Encode",1759],[3,"BadOrigin",6273],[4,"IncRefStatus",1819],[3,"Blake2Hasher",11330],[3,"TestExternalities",11331],[4,"RefStatus",1819],[4,"Era",11332],[3,"RuntimeVersion",4636],[3,"DispatchInfo",11322],[3,"PalletInfoData",6273],[3,"LookupError",6273],[3,"StorageVersion",6273],[8,"Iterator",11333],[4,"DispatchClass",11322],[8,"Serialize",11316],[3,"StorageInfo",6273],[8,"From",11305],[3,"TrackedStorageKey",6273],[3,"BlockWeightsBuilder",3181],[3,"BlockWeights",3181],[3,"ValidationErrors",3181],[3,"BlockLength",3181],[3,"WeightsPerClass",3181],[8,"OneOrMany",11322],[8,"Fn",11321],[3,"Signer",3397],[3,"Box",11334],[8,"SigningTypes",3397],[8,"AppCrypto",3397],[3,"ForAll",3397],[3,"ForAny",3397],[3,"Account",3397],[8,"CreateSignedTransaction",3397],[8,"SendTransactionTypes",3397],[3,"U256",3745],[3,"U512",3745],[3,"BitSlice",11335],[8,"BitOrder",11336],[3,"H160",3745],[3,"H256",3745],[3,"H512",3745],[4,"Error",11337],[8,"FromByteSlice",11337],[3,"BlakeTwo256",3745],[3,"Keccak256",3745],[15,"char"],[8,"FromIterator",11338],[15,"isize"],[15,"i16"],[3,"U128",11339],[15,"i8"],[15,"i32"],[3,"Public",11340],[3,"Public",11341],[3,"Signature",11341],[3,"Signature",11340],[4,"FromDecStrErr",11342],[8,"FunctionContext",11343],[4,"FromHexError",11344],[3,"FromStrRadixErr",11342],[8,"Hash",11345],[8,"BuildHasher",11345],[8,"Hasher",11345],[8,"SliceIndex",11346],[4,"StateVersion",4636],[8,"Rng",11347],[4,"BitSpanError",11348],[4,"Error",11339],[4,"ApiError",4636],[3,"Slot",4636],[3,"OverlayedChanges",4636],[4,"IndexOperation",11349],[8,"Hasher",4636],[4,"DispatchError",11350],[3,"PrefixedKey",11351],[3,"MemoryDB",11351],[3,"LocalTrieCache",11352],[3,"TrieBackend",4636],[3,"SlotDuration",4636],[3,"Duration",11353],[8,"Any",11318],[4,"RuntimeString",4636],[8,"TrieBackendStorage",11354],[3,"InherentData",4636],[4,"Error",11355],[8,"TrieCacheProvider",11356],[3,"TrieBackendBuilder",4636],[3,"CallApiAtParams",4636],[3,"EquivocationProof",4636],[3,"CheckInherentsResult",4636],[4,"Message",11357],[3,"Public",11358],[3,"Signature",11358],[4,"ChildInfo",11359],[4,"MerkleValue",11360],[8,"StateBackend",4636],[3,"GrandpaJustification",4636],[8,"Header",6273],[3,"ScheduledChange",4636],[4,"Equivocation",4636],[3,"StorageProof",4636],[3,"KeyTypeId",4636],[4,"BlockId",4636],[8,"Block",6273],[4,"CallContext",4636],[3,"NoOpenTransaction",11361],[3,"ApiRef",4636],[3,"OpaqueKeyOwnershipProof",4636],[3,"OpaqueMetadata",4636],[3,"Extensions",4636],[3,"StorageChanges",11349],[3,"AlreadyInRuntime",11361],[3,"TrieBackendEssence",11354],[3,"NotInRuntime",11361],[8,"IntoIterator",11338],[15,"never"],[8,"Error",11362],[3,"Precommit",11357],[3,"Equivocation",11357],[3,"Prevote",11357],[3,"BTreeMap",11363],[3,"RandomState",11364],[3,"HashMap",11364],[3,"OwnedFd",11365],[8,"IntoFilelike",11366],[8,"IntoSocketlike",11366],[3,"Timestamp",11367],[3,"CompactProof",11368],[4,"Error",11369],[4,"Error",11370],[3,"IntoIter",11363],[4,"TransactionOutcome",4636],[8,"DoubleEndedIterator",11371],[3,"HashKey",11351],[3,"BTreeSet",11372],[3,"IterArgs",11373],[3,"KeysIter",11373],[3,"OffchainOverlayedChanges",11374],[3,"PairsIter",11373],[3,"Recorder",11375],[8,"IsFatalError",11355],[8,"Extension",4636],[3,"StateMachineStats",11376],[4,"Error",11377],[8,"Keystore",11378],[3,"Arc",11379],[3,"SignedMessage",11357],[3,"UsageInfo",11376],[4,"TransactionSource",11327],[3,"InherentDataProvider",6084],[8,"Future",11380],[3,"Pin",11381],[3,"NativeVersion",6118],[3,"WithdrawReasons",6273],[4,"Bounded",11382],[8,"TryFrom",11305],[3,"ConstBool",6273],[3,"ConstU8",6273],[3,"ConstU16",6273],[3,"ConstU32",6273],[3,"ConstU64",6273],[3,"ConstU128",6273],[3,"ConstI8",6273],[3,"ConstI16",6273],[3,"ConstI32",6273],[3,"ConstI64",6273],[3,"ConstI128",6273],[3,"PhantomData",6273],[3,"IdentityLookup",6273],[4,"ExistenceRequirement",6273],[4,"BalanceStatus",6273],[3,"WrapperOpaque",6273],[3,"WrapperKeepOpaque",6273],[3,"CallMetadata",6273],[3,"Footprint",6273],[4,"ProcessMessageError",6273],[3,"QueueFootprint",6273],[8,"Eq",11307],[8,"Saturating",1651],[3,"Error",11383],[8,"Reader",11384],[3,"NoStorageVersionSet",6273],[8,"Deserialize",11310],[3,"FilterStackGuard",6273],[8,"FilterStack",6273],[3,"ClearFilterGuard",6273],[4,"SignedImbalance",6273],[8,"AtLeast32BitUnsigned",1651],[8,"FullCodec",11309],[8,"MaybeSerializeDeserialize",6273],[8,"Imbalance",6273],[8,"Writer",11385],[3,"Length",11386],[3,"BoundedSlice",11387],[8,"MaxEncodedLen",11388],[4,"PollStatus",6273],[8,"OriginTrait",6273],[4,"SafeModeError",6273],[4,"ExecuteOverweightError",6273],[4,"Cow",11389],[3,"Backing",6273],[8,"Codec",11309],[8,"TypeInfo",1759],[3,"SignedExtensionMetadata",6273],[3,"AppendZerosInput",6273],[3,"TrailingZeroInput",6273],[3,"BoundedVec",11387],[4,"SameOrOther",6273],[4,"TransactionPauseError",6273],[3,"WeightMeter",11390],[8,"Lazy",6273],[4,"MaybeHashed",9475],[4,"DispatchTime",9475],[4,"LookupError",9475],[4,"PaymentStatus",9693],[4,"Provenance",9693],[4,"Restriction",9693],[4,"Preservation",9693],[4,"Fortitude",9693],[4,"Precision",9693],[4,"WithdrawConsequence",9693],[4,"DepositConsequence",9693],[3,"HoldConsideration",10160],[8,"MutateHold",10160],[8,"Get",6273],[8,"Convert",6273],[3,"LoneHoldConsideration",10160],[3,"FreezeConsideration",10160],[8,"MutateFreeze",10160],[3,"LoneFreezeConsideration",10160],[3,"Imbalance",10160],[8,"Balance",9693],[8,"HandleImbalanceDrop",10160],[3,"Dust",10160],[3,"ItemOf",10160],[8,"Unbalanced",10696],[8,"Balanced",10160],[8,"AtLeast8BitUnsigned",1651],[3,"Imbalance",10696],[8,"AssetId",9693],[8,"HandleImbalanceDrop",10696],[3,"Dust",10696],[8,"Balanced",10696],[8,"FixedPointNumber",13],[8,"Signed",1651],[8,"CheckedAdd",1651],[8,"CheckedDiv",1651],[8,"CheckedNeg",1651],[8,"CheckedRem",1651],[8,"CheckedShl",1651],[8,"CheckedShr",1651],[8,"CheckedSub",1651],[8,"EnsureAdd",1651],[8,"EnsureAddAssign",1651],[8,"EnsureDiv",1651],[8,"EnsureDivAssign",1651],[8,"EnsureFixedPointNumber",1651],[8,"EnsureFrom",1651],[8,"EnsureInto",1651],[8,"EnsureMul",1651],[8,"EnsureMulAssign",1651],[8,"EnsureSub",1651],[8,"EnsureSubAssign",1651],[8,"IntegerSquareRoot",1651],[8,"Bounded",1651],[8,"Normalizable",13],[8,"SaturatedConversion",1651],[8,"ThresholdOrd",13],[8,"DefaultConfig",1819],[6,"Origin",1819],[3,"EnsureRoot",1819],[3,"EnsureRootWithSuccess",1819],[3,"EnsureWithSuccess",1819],[3,"EnsureSigned",1819],[3,"EnsureSignedBy",1819],[3,"EnsureNone",1819],[3,"EnsureNever",1819],[3,"Provider",1819],[3,"SelfSufficient",1819],[3,"Consumer",1819],[8,"WeightInfo",1819],[8,"ConsumerLimits",1819],[8,"SetCode",1819],[13,"set_code",3642],[13,"set_code_without_checks",3642],[13,"set_storage",3642],[13,"kill_storage",3642],[13,"set_heap_pages",3642],[13,"kill_prefix",3642],[13,"remark",3642],[13,"remark_with_event",3642],[13,"NewAccount",3651],[13,"KilledAccount",3651],[13,"ExtrinsicFailed",3651],[13,"ExtrinsicSuccess",3651],[13,"Remarked",3651],[6,"ValidationResult",3181],[8,"V2ToV3",3377],[6,"MockBlock",6248],[6,"MockBlockU32",6248],[6,"MockBlockU128",6248],[6,"MockUncheckedExtrinsic",6248],[8,"SendSignedTransaction",3397],[8,"SendUnsignedTransaction",3397],[8,"SignMessage",3397],[3,"SubmitTransaction",3397],[8,"SignedPayload",3397],[3,"TestDefaultConfig",3658],[3,"SolochainDefaultConfig",3658],[3,"SubstrateWeight",3709],[8,"Hash",3745],[8,"ProvideRuntimeApi",4636],[6,"ApisVec",4636],[6,"TransactionValidity",4636],[6,"ApplyExtrinsicResult",4636],[8,"RuntimeApiInfo",4636],[6,"Message",4636],[8,"ConstructRuntimeApi",4636],[8,"CallApiAt",4636],[8,"AsTrieBackend",4636],[8,"AccountNonceApi",4636],[8,"ApiExt",4636],[8,"BlockBuilder",4636],[6,"CompactCommit",4636],[8,"AuraApi",4636],[6,"CatchUp",4636],[6,"StorageChanges",4636],[8,"GrandpaApi",4636],[8,"DecodeLimit",4636],[8,"SessionKeys",4636],[8,"Core",4636],[6,"SignedMessage",4636],[8,"Metadata",4636],[8,"OffchainWorkerApi",4636],[6,"Commit",4636],[6,"PrimaryPropose",4636],[6,"Prevote",4636],[6,"Precommit",4636],[8,"TaggedTransactionQueue",4636],[13,"FailedToDecodeReturnValue",6069],[13,"FailedToConvertReturnValue",6069],[13,"FailedToConvertParameter",6069],[8,"CompatibleDigestItem",6076],[8,"AuraInherentData",6084],[3,"Executive",6118],[8,"BuildStorage",6202],[6,"Signature",6235],[6,"BlockOf",6235],[6,"OpaqueBlock",6235],[6,"TestState",6248],[8,"IdentifyAccount",6273],[8,"AppVerify",6273],[8,"SignedExtension",6273],[8,"RankedMembers",6273],[8,"Currency",6273],[8,"AccountTouch",6273],[8,"BlockNumberProvider",6273],[8,"SafeMode",6273],[8,"Extrinsic",6273],[8,"Applyable",6273],[8,"ValidateUnsigned",6273],[8,"TransactionPause",6273],[8,"Checkable",6273],[8,"BlindCheckable",6273],[8,"Polling",6273],[8,"Dispatchable",6273],[8,"VestingSchedule",6273],[8,"GetStorageVersion",6273],[6,"FetchResult",6273],[8,"TryCollect",6273],[8,"BlockIdTo",6273],[8,"QueryPreimage",6273],[8,"Instance",6273],[8,"ValidatorSetWithIdentification",6273],[8,"KeyOwnerProofSystem",6273],[8,"OneSessionHandler",6273],[8,"OpaqueKeys",6273],[8,"PalletError",6273],[8,"StorePreimage",6273],[8,"LockableCurrency",6273],[8,"EnqueueMessage",6273],[8,"HandleMessage",6273],[8,"PreimageRecipient",6273],[8,"Time",6273],[8,"GetNodeBlockType",6273],[8,"ProcessMessage",6273],[8,"Morph",6273],[8,"TryMorph",6273],[8,"Scale",6273],[8,"ServiceQueues",6273],[8,"NamedReservableCurrency",6273],[8,"GetRuntimeBlockType",6273],[8,"UnfilteredDispatchable",6273],[8,"StorageInstance",6273],[8,"SignaturePayload",6273],[8,"ExtrinsicMetadata",6273],[8,"Verify",6273],[8,"Lookup",6273],[8,"StaticLookup",6273],[8,"EnsureOrigin",6273],[8,"EnsureOriginWithArg",6273],[8,"TypedGet",6273],[8,"VariantCount",6273],[8,"ValidatorSet",6273],[8,"VoteTally",6273],[8,"CallerTrait",6273],[8,"GenesisBuild",6273],[8,"EstimateNextSessionRotation",6273],[8,"EstimateNextNewSession",6273],[8,"BeforeAllRuntimeMigrations",6273],[3,"GetDefault",6273],[3,"AccountIdLookup",6273],[3,"MorphInto",6273],[3,"TryMorphInto",6273],[3,"TakeFirst",6273],[3,"ConvertToValue",6273],[3,"Identity",6273],[3,"ConvertInto",6273],[3,"TryConvertInto",6273],[3,"TotalIssuanceOf",6273],[3,"ActiveIssuanceOf",6273],[3,"Replace",6273],[3,"ReduceBy",6273],[3,"CheckedReduceBy",6273],[3,"MorphWithUpperLimit",6273],[3,"FromContainsPair",6273],[4,"Everything",6273],[4,"Nothing",6273],[3,"EverythingBut",6273],[3,"TheseExcept",6273],[3,"InsideBoth",6273],[3,"Equals",6273],[3,"AsContains",6273],[3,"IsInVec",6273],[3,"EqualPrivilegeOnly",6273],[3,"StorageMapShim",6273],[3,"LinearStoragePrice",6273],[3,"EnsureOriginEqualOrHigherPrivilege",6273],[3,"NeverEnsureOrigin",6273],[3,"AsEnsureOriginWithArg",6273],[3,"MapSuccess",6273],[3,"TryMapSuccess",6273],[3,"TryWithMorphedArg",6273],[3,"EitherOfDiverse",6273],[3,"EitherOf",6273],[3,"ClassCountOf",6273],[3,"NoopServiceQueues",6273],[3,"TransformOrigin",6273],[3,"EnqueueWithOrigin",6273],[8,"BuildGenesisConfig",6273],[8,"Consideration",6273],[8,"ExtrinsicCall",6273],[8,"ReservableCurrency",6273],[8,"ChangeMembers",6273],[8,"CheckEqual",6273],[8,"CheckedConversion",6273],[8,"Clear",6273],[8,"PrivilegeCmp",6273],[8,"Contains",6273],[8,"ContainsPair",6273],[8,"SortedMembers",6273],[8,"MaybeEquivalence",6273],[8,"ConvertBack",6273],[8,"PalletsInfoAccess",6273],[8,"PalletInfo",6273],[8,"PalletInfoAccess",6273],[8,"HandleLifetime",6273],[8,"Defensive",6273],[8,"DefensiveResult",6273],[8,"DefensiveOption",6273],[8,"DefensiveMax",6273],[8,"DefensiveMin",6273],[8,"DefensiveSaturating",6273],[8,"DefensiveTruncateFrom",6273],[8,"EnsureInherentsAreFirst",6273],[8,"SafeModeNotify",6273],[8,"EstimateCallFee",6273],[8,"ExecuteBlock",6273],[8,"Filter",6273],[8,"InstanceFilter",6273],[8,"FindAuthor",6273],[8,"IsType",6273],[8,"StoredMap",6273],[8,"GetBacking",6273],[8,"GetCallIndex",6273],[8,"GetCallMetadata",6273],[8,"GetCallName",6273],[8,"PreimageProvider",6273],[8,"Incrementable",6273],[8,"InitializeMembers",6273],[8,"Hooks",6273],[8,"IntegrityTest",6273],[8,"AccountIdConversion",6273],[8,"DisabledValidators",6273],[8,"Locker",6273],[8,"IsMember",6273],[8,"QueuePausedQuery",6273],[8,"ValidatorRegistration",6273],[8,"IsSubType",6273],[8,"Lateness",6273],[8,"Len",6273],[8,"ContainsLengthBound",6273],[8,"MaybeConvert",6273],[8,"MaybeConvertBack",6273],[8,"UnixTime",6273],[8,"OffchainWorker",6273],[8,"OnFinalize",6273],[8,"OnGenesis",6273],[8,"OnIdle",6273],[8,"OnInitialize",6273],[8,"OnKilledAccount",6273],[8,"OnNewAccount",6273],[8,"OnUnbalanced",6273],[8,"OnRuntimeUpgrade",6273],[8,"OnTimestampSet",6273],[8,"PartialStorageInfoTrait",6273],[8,"Printable",6273],[8,"Randomness",6273],[8,"StorageInfoTrait",6273],[8,"TryConvert",6273],[8,"TryConvertBack",6273],[8,"TryDrop",6273],[8,"VerifySeal",6273],[8,"WhitelistedStorageKeys",6273],[8,"Anon",9475],[8,"Named",9475],[8,"Anon",9664],[8,"Named",9664],[8,"Anon",9678],[8,"Named",9678],[8,"Pay",9693],[8,"ConversionToAssetBalance",9693],[8,"ConversionFromAssetBalance",9693],[3,"UnityAssetBalanceConversion",9693],[3,"ConvertRank",9693],[3,"PayFromAccount",9693],[8,"GetSalary",9693],[8,"Inspect",10160],[8,"InspectFreeze",10160],[8,"InspectHold",10160],[3,"IncreaseIssuance",10160],[3,"DecreaseIssuance",10160],[8,"Mutate",10160],[8,"Unbalanced",10160],[8,"UnbalancedHold",10160],[8,"BalancedHold",10160],[8,"Inspect",10696],[8,"InspectEnumerable",10696],[8,"InspectFreeze",10696],[8,"InspectHold",10696],[3,"IncreaseIssuance",10696],[3,"DecreaseIssuance",10696],[8,"MutateHold",10696],[8,"Mutate",10696],[8,"Create",10696],[8,"UnbalancedHold",10696],[8,"MutateFreeze",10696],[8,"Destroy",10696],[8,"BalancedHold",10696],[8,"Inspect",10905],[8,"Mutate",10905],[8,"MetadataDeposit",10950],[8,"Inspect",10950],[8,"Mutate",10950],[8,"Inspect",10958],[3,"ResolveTo",10963],[3,"ResolveAssetTo",10963],[3,"SplitTwoWays",10963],[8,"Inspect",11054],[8,"InspectEnumerable",11054],[3,"ItemOf",11054],[8,"Mutate",11054],[8,"Transfer",11054],[8,"Inspect",11104],[8,"InspectEnumerable",11104],[3,"ItemOf",11104],[8,"Mutate",11104],[8,"Transfer",11104],[8,"Inspect",11172],[8,"InspectEnumerable",11172],[8,"Destroy",11172],[8,"Mutate",11172],[8,"Create",11172],[8,"Transfer",11172],[8,"Inspect",11206],[8,"InspectEnumerable",11206],[8,"Destroy",11206],[8,"Mutate",11206],[8,"Trading",11206],[8,"Create",11206],[8,"Transfer",11206],[8,"InspectRole",11206],[3,"PayAssetFromAccount",11263]],"a":{"{:?}":[1760]}},\
"frame_support":{"doc":"Support code for the runtime.","t":"","n":["Blake2_128","Blake2_128Concat","Blake2_256","BoundedBTreeMap","BoundedBTreeSet","BoundedSlice","BoundedVec","Callable","CloneNoBound","ConsensusEngineId","DebugNoBound","DefaultNoBound","EqNoBound","Hashable","Identity","IterableStorageDoubleMap","IterableStorageMap","IterableStorageNMap","LOG_TARGET","MAX_MODULE_ERROR_ENCODED_SIZE","METADATA","Never","Output","PalletError","PalletId","Parameter","PartialEqNoBound","Printable","ReversibleStorageHasher","RuntimeDebugNoBound","StorageDoubleMap","StorageHasher","StorageMap","StorageNMap","StorageNoopGuard","StoragePrefixedMap","StorageValue","Twox128","Twox256","Twox64Concat","WeakBoundedVec","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_std_enabled","as_bits","as_bits","as_bounded_slice","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_byte_slice","as_mut_byte_slice","as_mut_slice_of","as_mut_slice_of","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","assert_err","assert_err_ignore_postinfo","assert_err_with_weight","assert_error_encoded_size","assert_noop","assert_ok","assert_storage_noop","batch_invert","batch_invert","batch_invert","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","bound","bound","bound","bound","bound","bounded_resize","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","construct_runtime","crate_to_crate_version","crypto","debug","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_non_dedup_len","decode_non_dedup_len","decode_non_dedup_len","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","defensive","defensive_assert","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_truncate_from","defensive_truncate_from","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_impl","deserialize","deserialize","dispatch","dispatch_context","drain","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fail","fmt","fmt","fmt","fmt","fmt","fmt","force_from","force_insert_keep_left","force_insert_keep_right","force_push","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","genesis_builder_helper","get_hash","get_hash","get_hash","get_hash","get_mut","get_mut","get_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hypothetically","hypothetically_ok","identity","identity","identity","identity","identity","identity","identity","impl_ensure_origin_with_arg_ignoring_arg","impl_filter_stack","index","index","index_mut","index_mut","inherent","init","init","init","init","init","init","init","init","init","init","init","init","init","init","instances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_sub_account_truncating","is_clear","is_clear","is_clear","is_clear","is_full","iter_mut","iter_mut","last_mut","len","len","len","len","map","match_and_insert","match_type","match_types","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_len","max_len","max_len","max_len","max_len","max_len","max_len","max_len","migration","migrations","new","new","new","ord_parameter_types","pallet","pallet_macros","pallet_prelude","parameter_types","parameter_types_impl_thread_local","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","print","print","register_default_impl","remove","remove","remove","remove","remove_entry","require_transactional","retain","retain","retain","reverse","reverse","reverse","reverse","runtime_print","serialize","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","skip","skip","slide","sort","sort_by","sort_by_key","sp_runtime","storage","storage_alias","swap_remove","swap_remove","take","testing_prelude","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","traits","transactional","truncate","truncate_from","truncate_from","truncate_from","truncate_from","try_append","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_sub_account","try_insert","try_insert","try_insert","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_sub_account","try_map","try_mutate","try_mutate","try_mutate","try_mutate","try_push","try_push","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weights","with_bounded_capacity","with_max_capacity","ecdsa","ECDSAExt","to_eth_address","Callable","CallableCallFor","CheckIfFeeless","ClassifyDispatch","DispatchClass","DispatchErrorWithPostInfo","DispatchInfo","DispatchResult","DispatchResultWithPostInfo","Err","Err","GetDispatchInfo","Iter","Mandatory","No","None","Normal","Ok","Ok","OneOrMany","Operational","Origin","Parameter","Pays","PaysFee","PerDispatchClass","PostDispatchInfo","RawOrigin","Root","RuntimeCall","Signed","WeighData","WithPostDispatchInfo","Yes","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accrue","actual_weight","add","all","as_signed","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_actual_weight","calc_unspent","checked_accrue","class","classify_dispatch","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","extract_actual_pays_fee","extract_actual_weight","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_dispatch_info","get_mut","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_feeless","is_none","is_root","max_encoded_len","max_encoded_len","new","non_mandatory","pays_fee","pays_fee","pays_fee","pays_fee","post_info","print","reduce","serialize","set","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","weigh_data","weight","with_weight","Value","borrow","borrow_mut","clear","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get","get_mut","init","into","into_mut","into_ref","or_default","run_in_context","set","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","with_context","build_config","create_default_config","Call","CheckInherentsResult","Error","INHERENT_IDENTIFIER","InherentData","InherentIdentifier","IsFatalError","MakeFatalError","ProvideInherent","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","check_inherent","clone","clone_into","create_inherent","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode_to","eq","fatal_error","from","from_mut","from_mut","from_ref","from_ref","get_error","identity","init","into","into_errors","into_mut","into_ref","is_fatal_error","is_inherent","is_inherent_required","new","ok","put_error","size_hint","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Instance1","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","MigrationExecuted","Noop","PalletVersionToStorageVersionHelper","RemovePallet","StoreCurrentStorageVersion","VersionedMigration","VersionedPostUpgradeData","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","migrate","migrate_from_pallet_version_to_storage_version","on_runtime_upgrade","on_runtime_upgrade","size_hint","store_current_storage_version","to_keyed_vec","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","call","call_index","compact","composite_enum","config","constant","disable_frame_system_supertrait_check","error","event","extra_constants","feeless_if","generate_deposit","generate_store","genesis_build","genesis_config","getter","hooks","import_section","inherent","no_default","no_default_bounds","origin","pallet_section","storage","storage_prefix","storage_version","type_value","unbounded","validate_unsigned","weight","whitelist_storage","AncientBirthBlock","Arithmetic","BadMandatory","BadOrigin","BadProof","BadSigner","Blake2_128","Blake2_128Concat","Blake2_256","BoundedBTreeMap","BoundedBTreeSet","BoundedVec","BuildGenesisConfig","Call","Call","CannotLookup","CannotLookup","CloneNoBound","ConstU32","ConsumerRemaining","Corruption","CountedStorageMap","CountedStorageNMap","Custom","Custom","DebugNoBound","Decode","Decode","DispatchClass","DispatchError","DispatchResult","DispatchResultWithPostInfo","Encode","Encode","EnsureOrigin","EqNoBound","Err","Exhausted","ExhaustsResources","External","Future","Get","GetDefault","GetStorageVersion","Hooks","Identity","Identity","InBlock","InherentData","InherentIdentifier","Invalid","InvalidTransaction","IsType","Local","MAX","MAX_MODULE_ERROR_ENCODED_SIZE","MakeFatalError","MandatoryValidation","MaxEncodedLen","MaxEncodedLen","MaybeSerializeDeserialize","Member","Module","NMapKey","NoProviders","NoUnsignedValidator","Ok","OptionQuery","Other","PalletInfoAccess","Parameter","PartialEqNoBound","Payment","Pays","PhantomData","ProvideInherent","ResultQuery","RootNotAllowed","RuntimeDebug","RuntimeDebugNoBound","Stale","StorageDoubleMap","StorageInfoTrait","StorageList","StorageMap","StorageNMap","StorageValue","StorageVersion","Token","TooManyConsumers","TransactionLongevity","TransactionPriority","TransactionSource","TransactionTag","TransactionValidity","TransactionValidityError","Transactional","Twox128","Twox256","Twox64Concat","Type","TypeInfo","TypeInfo","TypedGet","Unavailable","Unknown","UnknownTransaction","ValidTransaction","ValidateUnsigned","ValueQuery","WeakBoundedVec","Weight","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_assign","add_proof_size","add_ref_time","all_gt","all_gte","all_lt","all_lte","any_eq","any_gt","any_gte","any_lt","any_lte","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_accrue","checked_add","checked_add","checked_div","checked_div_per_component","checked_mul","checked_reduce","checked_sub","checked_sub","classify_dispatch","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","combine_with","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","defensive","defensive_assert","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","der_cmp","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded_fixed_size","encoded_len","encoded_size","ensure","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_call_fee","exhausted_resources","exhausted_resources","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_all","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get_data","get_hash","hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","inject_runtime_type","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_fatal_error","is_zero","len","longevity","max","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","min","min_value","min_value","mul","mul","new","partial_cmp","pays_fee","pre_dispatch","print","print","priority","proof_size","proof_size_mut","propagate","provides","put_data","ref_time","ref_time_mut","register_default_impl","replace_data","requires","saturating_accrue","saturating_add","saturating_div","saturating_mul","saturating_pow","saturating_reduce","saturating_sub","serialize","serialize","serialize","serialize","serialize","serialize","set_proof_size","set_ref_time","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","source","storage","stripped","sub","sub_assign","sub_proof_size","sub_ref_time","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","validate_unsigned","value_cmp","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","was_mandatory","was_mandatory","weigh_data","with_tag_prefix","with_weight","zero","zero","zeroize","Appender","ChildTriePrefixIterator","Commit","FullKeyIterator","IterableStorageDoubleMap","IterableStorageMap","IterableStorageNMap","Iterator","Iterator","Iterator","Iterator","Key","KeyIterator","KeyIterator","KeyLenOf","KeyPrefixIterator","PartialKeyIterator","PrefixIterator","PrefixIterator","PrefixIteratorOnRemoval","Query","Query","Query","Query","Rollback","StorageAppend","StorageAppender","StorageDecodeLength","StorageDecodeNonDedupLength","StorageDoubleMap","StorageEntryMetadataBuilder","StorageList","StorageMap","StorageNMap","StoragePrefixedContainer","StoragePrefixedMap","StorageStreamIter","StorageTryAppend","StorageValue","TransactionOutcome","TryAppendDoubleMap","TryAppendMap","TryAppendValue","append","append","append","append","append","append_many","append_many","append_one","appender","batch_invert","batch_invert","batch_invert","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","bounded_btree_map","bounded_btree_set","bounded_vec","child","cjk_compat_variants","cjk_compat_variants","cjk_compat_variants","clear","clear_prefix","clear_prefix","contains_key","contains_key","contains_key","contains_prefix","contains_prefix","convert_on_removal","decode_len","decode_len","decode_len","decode_len","decode_len","decode_non_dedup_len","decode_non_dedup_len","decode_non_dedup_len","decode_non_dedup_len","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drain","drain","drain","drain","drain","drain","drain","drain_prefix","drain_prefix","drop","drop","drop","drop","drop","exists","final_prefix","final_prefix","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","hashed","hashed_key","hashed_key_for","hashed_key_for","hashed_key_for","in_storage_layer","init","init","init","init","init","insert","insert","insert","into","into","into","into","into","into_inner","into_iter","into_iter","into_iter","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","iter","iter","iter","iter","iter_from","iter_from","iter_from","iter_key_prefix","iter_key_prefix","iter_key_prefix_from","iter_key_prefix_from","iter_keys","iter_keys","iter_keys","iter_keys_from","iter_keys_from","iter_keys_from","iter_prefix","iter_prefix","iter_prefix_from","iter_prefix_from","iter_prefix_values","iter_prefix_values","iter_values","kill","last_raw_key","last_raw_key","migrate_key","migrate_key_from_blake","migrate_keys","migrate_keys","migration","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","mutate","mutate","mutate","mutate","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_extant","mutate_extant","new","new","next","next","next","nfc","nfc","nfc","nfd","nfd","nfd","nfkc","nfkc","nfkc","nfkd","nfkd","nfkd","on_removal","pallet_prefix","pallet_prefix","prefix","prefix","put","remove","remove","remove","remove_all","remove_prefix","remove_prefix","set","set","set","set","set_last_raw_key","set_last_raw_key","storage_noop_guard","storage_prefix","storage_prefix","storage_prefix","stream_iter","stream_safe","stream_safe","stream_safe","swap","swap","swap","take","take","take","take","transactional","translate","translate","translate","translate","translate_next","translate_values","try_append","try_append","try_append","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_get","try_into","try_into","try_into","try_into","try_into","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","type_id","type_id","type_id","type_id","type_id","types","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unhashed","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","weak_bounded_vec","with_prefix","with_prefix_over_key","with_storage_layer","with_transaction","with_transaction_unchecked","BoundedBTreeMap","BoundedBTreeSet","BoundedSlice","BoundedVec","AllRemoved","ChildInfo","ChildType","KillStorageResult","MultiRemovalResults","ParentKeyId","ParentKeyId","SomeRemaining","StateVersion","V0","V1","__clone_box","__clone_box","__clone_box","backend","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_type","clear","clear_storage","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_prefixed_key","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_hash","get_or","get_or_default","get_or_else","get_raw","hash","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_ffi_value","into_ffi_value","into_ffi_value","into_mut","into_mut","into_mut","into_mut","into_mut","into_prefixed_storage_key","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","keyspace","kill","kill_storage","len","loops","maybe_cursor","new","new_default","new_default_from_vec","parent_prefix","partial_cmp","prefixed_storage_key","put","put_raw","root","size_hint","size_hint","size_hint","size_hint","state_value_threshold","storage_key","take","take_or","take_or_default","take_or_else","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_update","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","exists","get","get_or","get_or_default","get_or_else","get_raw","kill","put","put_raw","take","take_or","take_or_default","take_or_else","StorageIterator","StorageKeyIterator","borrow","borrow","borrow_mut","borrow_mut","clear_storage_prefix","deref","deref","deref_mut","deref_mut","drain","drain","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get_storage_value","have_storage_value","init","init","into","into","into_iter","into_iter","into_mut","into_mut","into_ref","into_ref","move_pallet","move_prefix","move_storage_from_pallet","multiunzip","multiunzip","new","new","next","next","put_storage_value","remove_storage_prefix","storage_iter","storage_iter_with_suffix","storage_key_iter","storage_key_iter_with_suffix","take_storage_item","take_storage_value","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","with_suffix","with_suffix","StorageNoopGuard","borrow","borrow_mut","default","deref","deref_mut","drop","drop","from","from_error_message","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","new","set_error_message","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Layer","TRANSACTIONAL_LIMIT","TRANSACTION_LEVEL_KEY","in_storage_layer","is_transactional","with_storage_layer","with_transaction","with_transaction_unchecked","CountedStorageMap","CountedStorageMapInstance","CountedStorageNMap","CountedStorageNMapInstance","Counter","CounterPrefix","CounterPrefix","EncodeLikeTuple","HASHER_METADATA","HArg","HasKeyPrefix","HasReversibleKeyPrefix","HashFn","KArg","Key","Key","KeyGenerator","KeyGeneratorMaxEncodedLen","METADATA","OptionQuery","Query","QueryKindTrait","ResultQuery","ReversibleHasher","ReversibleKeyGenerator","StorageDoubleMap","StorageEntryMetadataBuilder","StorageMap","StorageNMap","StorageValue","Suffix","TupleToEncodedIter","ValueQuery","append","append","append","append","append","append","append","append","append","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_metadata","build_metadata","build_metadata","build_metadata","build_metadata","build_metadata","build_metadata","clear","clear","clear","clear","clear","clear_prefix","clear_prefix","clear_prefix","clear_prefix","clear_prefix","contains_key","contains_key","contains_key","contains_key","contains_key","contains_key","contains_key","contains_key","contains_prefix","contains_prefix","count","count","counter_storage_final_key","counter_storage_final_key","decode_final_key","decode_final_key","decode_len","decode_len","decode_len","decode_len","decode_len","decode_len","decode_non_dedup_len","decode_non_dedup_len","decode_non_dedup_len","decode_partial_key","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drain","drain","drain","drain","drain","drain","drain_prefix","drain_prefix","drain_prefix","drain_prefix","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","exists","exists","final_key","final_key","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_optional_value_to_query","from_optional_value_to_query","from_optional_value_to_query","from_optional_value_to_query","from_query_to_optional_value","from_query_to_optional_value","from_query_to_optional_value","from_query_to_optional_value","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","hashed_key","hashed_key","hashed_key_for","hashed_key_for","hashed_key_for","hashed_key_for","hashed_key_for","hashed_key_for","hashed_key_for","hashed_key_for","init","init","init","init","init","init","init","init","init","init","initialize_counter","initialize_counter","insert","insert","insert","insert","insert","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","iter","iter","iter","iter","iter","iter","iter_from","iter_from","iter_from","iter_from","iter_from","iter_from","iter_from_key","iter_key_prefix","iter_key_prefix","iter_key_prefix","iter_key_prefix","iter_key_prefix_from","iter_key_prefix_from","iter_key_prefix_from","iter_key_prefix_from","iter_keys","iter_keys","iter_keys","iter_keys","iter_keys","iter_keys","iter_keys_from","iter_keys_from","iter_keys_from","iter_keys_from","iter_keys_from","iter_keys_from_key","iter_prefix","iter_prefix","iter_prefix","iter_prefix","iter_prefix_from","iter_prefix_from","iter_prefix_from","iter_prefix_from","iter_prefix_values","iter_prefix_values","iter_prefix_values","iter_prefix_values","iter_prefix_values","iter_values","iter_values","iter_values","iter_values","iter_values","key_max_encoded_len","key_max_encoded_len","kill","kill","map_storage_final_prefix","map_storage_final_prefix","migrate_key","migrate_key","migrate_key","migrate_key","migrate_key","migrate_keys","migrate_keys","migrate_keys","migrate_keys","migrate_keys","mutate","mutate","mutate","mutate","mutate","mutate","mutate","mutate","mutate","mutate","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_exists","mutate_extant","mutate_extant","pallet_prefix","pallet_prefix","pallet_prefix","partial_key","partial_storage_info","partial_storage_info","partial_storage_info","partial_storage_info","partial_storage_info","partial_storage_info","put","put","remove","remove","remove","remove","remove","remove","remove","remove","remove_all","remove_all","remove_all","remove_all","remove_prefix","remove_prefix","remove_prefix","remove_prefix","set","set","set","set","set","set","set","set","set","set","storage_info","storage_info","storage_info","storage_info","storage_info","storage_info","storage_prefix","storage_prefix","storage_prefix","stream_iter","swap","swap","swap","swap","swap","swap","swap","swap","take","take","take","take","take","take","take","take","take","take","to_encoded_iter","translate","translate","translate","translate","translate","translate","translate","translate","translate_values","translate_values","translate_values","translate_values","translate_values","try_append","try_append","try_append","try_append","try_append","try_append","try_append","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_get","try_get","try_get","try_get","try_get","try_get","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","try_mutate_exists","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","clear_prefix","contains_prefixed_key","exists","get","get_or","get_or_default","get_or_else","get_raw","kill","kill_prefix","put","put_raw","take","take_or","take_or_default","take_or_else","WeakBoundedVec","Get","assert_eq_error_rate","assert_err","assert_err_ignore_postinfo","assert_err_with_weight","assert_error_encoded_size","assert_noop","assert_ok","assert_storage_noop","bounded_btree_map","bounded_btree_map","bounded_vec","bounded_vec","get","parameter_types","BoundedBTreeMap","BoundedSlice","BoundedVec","TruncateFrom","truncate_from","AccountId","AccountId","AccountTouch","ActiveIssuanceOf","AllowAll","AlreadyEntered","AlreadyExited","AlreadyPaused","AlreadyProcessed","AlreadyUnpaused","AsContains","AsEnsureOriginWithArg","Backing","BadFormat","Balance","BalanceStatus","BeforeAllRuntimeMigrations","BlockNumber","Bounded","BoundedInline","BuildGenesisConfig","Call","CallIdentifier","CallMetadata","CallerTrait","ChangeMembers","Class","ClassCountOf","ClearFilterGuard","Completed","Consideration","ConstBool","ConstI128","ConstI16","ConstI32","ConstI64","ConstI8","ConstU128","ConstU16","ConstU32","ConstU64","ConstU8","Contains","ContainsLengthBound","ContainsPair","Corrupt","CrateVersion","Currency","CurrentStorageVersion","Defensive","DefensiveMax","DefensiveMin","DefensiveOption","DefensiveResult","DefensiveSaturating","DefensiveTruncateFrom","DenyAll","DisabledValidators","EitherOf","EitherOfDiverse","EnqueueMessage","EnqueueWithOrigin","EnsureInherentsAreFirst","EnsureOneOf","EnsureOrigin","EnsureOriginEqualOrHigherPrivilege","EnsureOriginWithArg","EqualPrivilegeOnly","Equals","Err","Error","EstimateCallFee","EstimateNextNewSession","EstimateNextSessionRotation","Everything","EverythingBut","ExecuteBlock","ExecuteOverweightError","ExistenceRequirement","ExtrinsicCall","FetchResult","Filter","FilterStack","FilterStackGuard","FindAuthor","Footprint","FromContainsPair","GenesisBuild","Get","GetBacking","GetCallIndex","GetCallMetadata","GetCallName","GetDefault","GetStorageVersion","H","HandleLifetime","HandleMessage","Hooks","INDEX","Identification","IdentificationOf","IdentificationTuple","Imbalance","Incrementable","Index","InitializeMembers","Inline","InsideBoth","Instance","InstanceFilter","InsufficientWeight","IntegrityTest","IsInVec","IsSubType","IsType","Key","KeyOwnerProofSystem","Lateness","Legacy","Len","LinearStoragePrice","LockIdentifier","LockableCurrency","Locker","Lookup","MAX_ENCODED_SIZE","MAX_LENGTH","MapSuccess","MaxMessageLen","MaxMessageLen","MaxSize","Moment","Moment","NamedReservableCurrency","NeverEnsureOrigin","NoStorageVersionSet","None","None","NoopServiceQueues","NotFound","NotFound","Nothing","OffchainWorker","Ok","OnFinalize","OnGenesis","OnIdle","OnInitialize","OnKilledAccount","OnNewAccount","OnRuntimeUpgrade","OnTimestampSet","OnUnbalanced","OneSessionHandler","Ongoing","Origin","OriginTrait","Other","Other","Overweight","OverweightMessageAddress","PREFIX","PalletError","PalletInfo","PalletInfoAccess","PalletInfoData","PalletsInfoAccess","PalletsOrigin","PartialStorageInfoTrait","PollStatus","Polling","PreimageProvider","PreimageRecipient","PrivilegeCmp","ProcessMessage","ProcessMessageError","Proof","QueryPreimage","QueueFootprint","QueuePaused","QueuePausedQuery","Randomness","Rank","RankedMembers","ReservableCurrency","RuntimeOrigin","STORAGE_PREFIX","STORAGE_VERSION_STORAGE_KEY_POSTFIX","SafeMode","SafeModeError","SafeModeNotify","Same","SameOrOther","ServiceQueues","SignedImbalance","SortedMembers","Stack","StorageInfo","StorageInfoTrait","StorageInstance","StorageMapShim","StorageVersion","StorePreimage","StoredMap","Success","Success","TheseExcept","Time","TotalIssuanceOf","TrackedStorageKey","TransactionPause","TransactionPauseError","TransformOrigin","TryCollect","TryDrop","TryMapSuccess","TryWithMorphedArg","Type","TypedGet","UnfilteredDispatchable","UnixTime","Unknown","Unknown","Unpausable","Unsupported","VARIANT_COUNT","ValidatorId","ValidatorIdOf","ValidatorRegistration","ValidatorSet","ValidatorSetWithIdentification","VariantCount","VerifySeal","VestingSchedule","VoteTally","Votes","WhitelistedStorageKeys","WithdrawReasons","WrapperKeepOpaque","WrapperOpaque","Yield","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_poll","add","add_filter","add_read","add_write","approval","approvals","as_ongoing","as_signed","as_signed","as_signed","as_signed","as_system_ref","as_system_ref","as_system_ref","assimilate_storage","assimilate_storage","average_session_length","average_session_length","ayes","before_all_runtime_migrations","before_all_runtime_migrations","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","bound","build","build","build_storage","build_storage","burn","burn","call","caller","can_pause","change_members","change_members","change_members_sorted","check_proof","classes","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp_privilege","cmp_privilege","compute_members_diff_sorted","compute_members_diff_sorted","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","convert","count","count","count","count","count","crate_version","crate_version","crate_version","created","created","current_storage_version","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","defensive","defensive_map","defensive_map","defensive_map_err","defensive_map_or_else","defensive_map_or_else","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_ok","defensive_ok_or","defensive_ok_or_else","defensive_prelude","defensive_proof","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_truncate_from","defensive_unwrap_or","defensive_unwrap_or_default","defensive_unwrap_or_else","demote","deposit_required","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eligible","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encoded","encoded_len","enqueue_message","enqueue_message","enqueue_messages","enqueue_messages","ensure_inherents_are_first","ensure_ongoing","ensure_origin","ensure_origin","ensure_origin","ensure_origin","ensure_origin","ensure_origin_or_root","ensure_origin_or_root","enter","entered","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_call_fee","estimate_current_session_progress","estimate_next_new_session","estimate_next_session_rotation","execute_block","execute_overweight","execute_overweight","exists","exit","exited","extend","fetch","filter","filter","filter","filter","filter","filter","filter","filter","filter","filter","filter","filter_call","find_author","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","footprint","footprint","footprint","footprint","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_encodable","from_encoded","from_fd","from_ffi_value","from_filelike","from_into_filelike","from_into_socketlike","from_legacy_hash","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","function_name","fungible","fungibles","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_backing","get_call_index","get_call_indices","get_call_metadata","get_call_name","get_call_names","get_call_names","get_hash","get_module_names","get_preimage","get_prime","get_prime","handle_message","handle_message","handle_messages","handle_messages","has_been_read","has_been_written","hash","hash","have","have","have_preimage","hold","hold","identity","identity","identity","identity","identity","identity","identity","identity","increment","index","index","index","induct","infos","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_value","initialize_members","insert","insert","insert","integrity_test","integrity_test","integrity_test","integrity_test","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_caller","into_ffi_value","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_signer","into_signer","into_system","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_disabled","is_entered","is_entered","is_none","is_none","is_paused","is_paused","is_registered","is_requested","is_root","is_root","is_sub_type","is_superset","is_superset","key","killed","killed","lateness","len","len","len","lookup_hash","lookup_len","lookup_needed","major","max_encoded_len","max_encoded_len","max_encoded_len","max_len","max_size","max_values","min_len","min_rank","minor","module_name","module_name","module_name","mutate","mutate","mutate","mutate_exists","mutate_exists","mutate_exists","name","name","name","name_hash","name_hash","new","new","new","new","new","new","new","none","nonfungible","nonfungible_v2","nonfungibles","nonfungibles_v2","note","note_preimage","now","now","offchain_worker","offchain_worker","offchain_worker","offchain_worker","on_before_session_ending","on_before_session_ending","on_chain_storage_version","on_disabled","on_finalize","on_finalize","on_finalize","on_finalize","on_genesis","on_genesis","on_genesis_session","on_idle","on_idle","on_idle","on_idle","on_initialize","on_initialize","on_initialize","on_initialize","on_killed_account","on_new_account","on_new_session","on_runtime_upgrade","on_runtime_upgrade","on_runtime_upgrade","on_runtime_upgrade","on_timestamp_set","other","pages","pallet_name","pallet_name","pallet_prefix","pallet_prefix_hash","pallet_prefix_hash","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_storage_info","patch","pause","peek","peek","pick","pick","pop","prefix","prefix_hash","prefix_hash","preimage_requested","process_message","promote","prove","push","put","random","random_seed","random_seed","rank_of","reads","realize","realize","remaining","remove","remove","remove","request","request_preimage","reset_filter","restore","root","same","schedule","serialize","service_queues","service_queues","session_index","set_caller_from","set_members_sorted","set_members_sorted","set_prime","set_prime","signed","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","sorted_members","sorted_members","storage","storage_info","storage_key","storage_name","storage_prefix_hash","storage_prefix_hash","store_current_storage_version","store_current_storage_version","support","sweep_queue","sweep_queue","sweep_queue","sweep_queue","take","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokens","touch","transmute","try_access_poll","try_collect","try_decode","try_drop","try_drop","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_mutate_exists","try_mutate_exists","try_none","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin","try_origin_or_root","try_origin_or_root","try_other","try_same","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unnote","unnote","unnote_preimage","unpause","unrequest","unrequest_preimage","unrequested","update","using_encoded","using_encoded","using_encoded","validators","verify_seal","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","whitelisted","whitelisted_storage_keys","writes","dummy","hash","hash","len","Defensive","DefensiveOption","DefensiveResult","defensive","defensive_map","defensive_map","defensive_map_err","defensive_map_or_else","defensive_map_or_else","defensive_ok","defensive_ok_or","defensive_ok_or_else","defensive_proof","defensive_unwrap_or","defensive_unwrap_or_default","defensive_unwrap_or_else","After","At","BadFormat","DispatchTime","HARD_DEADLINE","HIGHEST_PRIORITY","Hash","LOWEST_PRIORITY","LookupError","MaybeHashed","Period","Priority","Unknown","Value","__clone_box","__clone_box","__clone_box","as_hash","as_value","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","encode_to","encode_to","ensure_requested","ensure_unrequested","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","evaluate","fmt","fmt","fmt","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_socketlike","identity","identity","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","max_encoded_len","max_encoded_len","max_encoded_len","resolved","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","v1","v2","v3","vzip","vzip","vzip","Address","Address","Anon","Named","cancel","cancel_named","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","schedule","schedule_named","Address","Address","Anon","Hash","Hash","Named","cancel","cancel_named","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","schedule","schedule_named","Address","Address","Anon","Hasher","Hasher","Named","TaskName","cancel","cancel_named","next_dispatch_time","next_dispatch_time","reschedule","reschedule_named","schedule","schedule_named","AllowDeath","AssetId","Balance","BalanceLow","BalanceStatus","BelowMinimum","BestEffort","Blocked","CannotCreate","ConversionFromAssetBalance","ConversionToAssetBalance","ConvertRank","DepositConsequence","Error","Error","Exact","ExistenceRequirement","Expendable","Extant","FEE","Force","Fortitude","Free","Free","Frozen","GetSalary","Imbalance","KeepAlive","Locker","Minted","OnHold","Overflow","Overflow","Pay","PayFromAccount","PaymentStatus","Polite","Precision","Preservation","Preserve","Protect","Provenance","RESERVE","ReducedToZero","Reserved","Restriction","Success","Success","TIP","TRANSACTION_PAYMENT","TRANSFER","Underflow","UnityAssetBalanceConversion","UnknownAsset","UnknownAsset","WithdrawConsequence","WithdrawReasons","WouldDie","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","currency","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","except","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_asset_balance","from_asset_balance","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","fungible","fungibles","get_hash","get_salary","get_salary","hash","identity","identity","imbalance","init","init","init","init","init","init","init","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_result","into_result","is_all","is_empty","is_locked","max_encoded_len","max_encoded_len","nonfungible","nonfungible_v2","nonfungibles","nonfungibles_v2","not","partial_cmp","pay","remove","set","size_hint","size_hint","sub","sub_assign","symmetric_difference","to_asset_balance","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","union","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ActiveIssuanceOf","Balance","Currency","Currency","LockIdentifier","LockableCurrency","MaxLocks","Moment","Moment","NamedReservableCurrency","NegativeImbalance","PositiveImbalance","ReservableCurrency","ReserveIdentifier","TotalIssuanceOf","VestingSchedule","active_issuance","add_vesting_schedule","borrow","borrow","borrow_mut","borrow_mut","burn","can_add_vesting_schedule","can_reserve","can_slash","deactivate","deposit_creating","deposit_into_existing","deref","deref","deref_mut","deref_mut","drop","drop","ensure_can_withdraw","ensure_reserved_named","ensure_reserved_named","extend_lock","free_balance","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","get","get","init","init","into","into","into_mut","into_mut","into_ref","into_ref","issue","make_free_balance_be","minimum_balance","pair","reactivate","remove_lock","remove_vesting_schedule","repatriate_all_reserved_named","repatriate_all_reserved_named","repatriate_reserved","repatriate_reserved_named","reserve","reserve_named","reserved_balance","reserved_balance_named","resolve_creating","resolve_into_existing","set_lock","settle","slash","slash_all_reserved_named","slash_all_reserved_named","slash_reserved","slash_reserved_named","total_balance","total_issuance","transfer","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unreserve","unreserve_all_named","unreserve_all_named","unreserve_named","vesting_balance","vzip","vzip","withdraw","Balance","Balanced","BalancedHold","Credit","Debt","DecreaseIssuance","Dust","FreezeConsideration","HandleImbalanceDrop","HoldConsideration","Imbalance","IncreaseIssuance","Inspect","InspectFreeze","InspectHold","ItemOf","LoneFreezeConsideration","LoneHoldConsideration","Mutate","MutateFreeze","MutateHold","OnDropCredit","OnDropDebt","Unbalanced","UnbalancedHold","__clone_box","__clone_box","__clone_box","__clone_box","active_issuance","active_issuance","active_issuance","balance","balance","balance_freezable","balance_frozen","balance_on_hold","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","burn","burn_from","burn_from","burn_from","burn_held","can_deposit","can_deposit","can_freeze","can_hold","can_withdraw","can_withdraw","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","conformance_tests","deactivate","deactivate","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decrease_balance","decrease_balance","decrease_balance","decrease_balance_on_hold","default","deposit","deposit","deposit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","done_burn_from","done_burn_from","done_deposit","done_deposit","done_issue","done_issue","done_mint_into","done_mint_into","done_rescind","done_rescind","done_restore","done_restore","done_shelve","done_shelve","done_transfer","done_transfer","done_withdraw","done_withdraw","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_zero","encode","encode","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend_freeze","extract","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle","handle","handle","handle_dust","handle_dust","handle_raw_dust","handle_raw_dust","hold","hold","hold_available","identity","identity","identity","identity","increase_balance","increase_balance","increase_balance","increase_balance_on_hold","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_credit","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","issue","issue","issue","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","merge","minimum_balance","minimum_balance","mint_into","mint_into","mint_into","new","new","new","new","offset","pair","pair","pair","peek","reactivate","reactivate","reducible_balance","reducible_balance","reducible_total_balance_on_hold","release","rescind","rescind","rescind","resolve","resolve","resolve","restore","restore","restore","set_balance","set_balance","set_balance","set_balance_on_hold","set_freeze","set_total_issuance","set_total_issuance","settle","settle","settle","shelve","shelve","shelve","size_hint","size_hint","size_hint","size_hint","slash","split","subsume","thaw","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","total_balance","total_balance","total_balance_on_hold","total_issuance","total_issuance","transfer","transfer","transfer","transfer_and_hold","transfer_on_hold","try_drop","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","update","update","update","update","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw","withdraw","withdraw","write_balance","write_balance","zero","inspect_mutate","burn_from_best_effort_success","burn_from_exact_insufficient_funds","burn_from_exact_success","can_deposit_below_minimum","can_deposit_overflow","can_deposit_success","can_withdraw_balance_low","can_withdraw_reduced_to_zero","can_withdraw_success","mint_into_below_minimum","mint_into_overflow","mint_into_success","reducible_balance_expendable","reducible_balance_protect_preserve","restore_below_minimum","restore_overflow","restore_success","set_balance_burn_success","set_balance_mint_success","shelve_insufficient_funds","shelve_success","transfer_expendable_all","transfer_expendable_dust","transfer_protect_preserve","transfer_success","Id","Inspect","Mutate","balance_freezable","balance_frozen","can_freeze","decrease_frozen","ensure_frozen","extend_freeze","increase_frozen","set_freeze","set_frozen","thaw","Balanced","Inspect","Mutate","Reason","Unbalanced","balance_on_hold","burn_all_held","burn_held","can_hold","decrease_balance_on_hold","done_burn_held","done_hold","done_release","done_slash","done_transfer_and_hold","done_transfer_on_hold","ensure_can_hold","hold","hold_available","increase_balance_on_hold","reducible_total_balance_on_hold","release","release_all","set_balance_on_hold","set_on_hold","slash","total_balance_on_hold","transfer_and_hold","transfer_on_hold","AssetId","AssetsIterator","Balance","Balanced","BalancedHold","Create","Credit","Debt","DecreaseIssuance","Destroy","Dust","HandleImbalanceDrop","Imbalance","IncreaseIssuance","Inspect","InspectEnumerable","InspectFreeze","InspectHold","Mutate","MutateFreeze","MutateHold","OnDropCredit","OnDropDebt","Unbalanced","UnbalancedHold","active_issuance","active_issuance","approvals","asset","asset_exists","asset_ids","balance","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn_from","burn_from","can_deposit","can_withdraw","create","deactivate","deactivate","decrease_balance","decrease_balance","deposit","deposit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","destroy_accounts","destroy_approvals","done_burn_from","done_burn_from","done_deposit","done_deposit","done_issue","done_issue","done_mint_into","done_mint_into","done_rescind","done_rescind","done_restore","done_restore","done_shelve","done_shelve","done_transfer","done_transfer","done_withdraw","done_withdraw","drop","drop","drop","drop","drop","drop_zero","eq","equivalent","equivalent","equivalent","extract","finish_destroy","fmt","freeze","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle","handle","handle","handle_dust","handle_raw_dust","handle_raw_dust","hold","increase_balance","increase_balance","init","init","init","init","into","into","into","into","into_credit","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","issue","issue","merge","metadata","minimum_balance","mint_into","mint_into","offset","pair","pair","peek","reactivate","reactivate","reducible_balance","rescind","rescind","resolve","resolve","restore","restore","roles","set_balance","set_balance","set_total_issuance","settle","settle","shelve","shelve","split","start_destroy","subsume","total_balance","total_issuance","transfer","transfer","try_drop","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","withdraw","withdraw","write_balance","zero","Inspect","Mutate","allowance","approve","transfer_from","Id","Inspect","Mutate","balance_freezable","balance_frozen","can_freeze","decrease_frozen","ensure_frozen","extend_freeze","increase_frozen","set_freeze","set_frozen","thaw","Balanced","Inspect","Mutate","Reason","Unbalanced","balance_on_hold","burn_all_held","burn_held","can_hold","decrease_balance_on_hold","done_burn_held","done_hold","done_release","done_slash","done_transfer_and_hold","done_transfer_on_hold","ensure_can_hold","hold","hold_available","increase_balance_on_hold","reducible_total_balance_on_hold","release","set_balance_on_hold","slash","total_balance_on_hold","transfer_and_hold","transfer_on_hold","Inspect","MetadataDeposit","Mutate","calc_metadata_deposit","decimals","name","set","symbol","Inspect","admin","freezer","issuer","owner","Imbalance","Negative","OnUnbalanced","Opposite","Positive","ResolveAssetTo","ResolveTo","SignedImbalance","SplitTwoWays","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop_zero","drop_zero","extract","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","maybe_merge","maybe_subsume","merge","merge","merge_into","offset","on_nonzero_unbalanced","on_nonzero_unbalanced","on_nonzero_unbalanced","on_nonzero_unbalanced","on_nonzero_unbalanced","on_unbalanced","on_unbalanced","on_unbalanceds","on_unbalanceds","peek","ration","ration_merge","ration_merge_into","split","split_merge","split_merge_into","subsume","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","zero","zero","Inspect","InspectEnumerable","ItemId","ItemOf","ItemsIterator","Mutate","OwnedIterator","Transfer","attribute","attribute","borrow","borrow_mut","burn","burn","can_transfer","can_transfer","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","items","items","mint_into","mint_into","owned","owned","owner","owner","set_attribute","set_attribute","set_typed_attribute","set_typed_attribute","transfer","transfer","try_from","try_into","type_id","typed_attribute","typed_attribute","unchecked_into","unique_saturated_into","vzip","Inspect","InspectEnumerable","ItemId","ItemOf","ItemsIterator","Mutate","OwnedIterator","Transfer","attribute","attribute","borrow","borrow_mut","burn","burn","can_transfer","can_transfer","clear_attribute","clear_attribute","clear_metadata","clear_typed_attribute","clear_typed_attribute","custom_attribute","custom_attribute","deref","deref_mut","disable_transfer","disable_transfer","drop","enable_transfer","enable_transfer","from","from_mut","from_mut","from_ref","from_ref","init","into","into_mut","into_ref","items","items","mint_into","mint_into","owned","owned","owner","owner","set_attribute","set_attribute","set_metadata","set_typed_attribute","set_typed_attribute","system_attribute","system_attribute","transfer","transfer","try_from","try_into","type_id","typed_attribute","typed_attribute","typed_custom_attribute","typed_custom_attribute","typed_system_attribute","typed_system_attribute","unchecked_into","unique_saturated_into","vzip","CollectionId","CollectionsIterator","Create","Destroy","DestroyWitness","Inspect","InspectEnumerable","ItemId","ItemsIterator","Mutate","OwnedInCollectionIterator","OwnedIterator","Transfer","attribute","burn","can_transfer","collection_attribute","collection_owner","collections","create_collection","destroy","get_destroy_witness","items","mint_into","owned","owned_in_collection","owner","set_attribute","set_collection_attribute","set_typed_attribute","set_typed_collection_attribute","transfer","typed_attribute","typed_collection_attribute","CollectionId","CollectionsIterator","Create","Destroy","DestroyWitness","Inspect","InspectEnumerable","InspectRole","ItemId","ItemsIterator","Mutate","OwnedInCollectionIterator","OwnedIterator","Trading","Transfer","attribute","burn","buy_item","can_transfer","clear_attribute","clear_collection_attribute","clear_collection_metadata","clear_item_metadata","clear_typed_attribute","clear_typed_collection_attribute","collection_attribute","collection_owner","collections","create_collection","create_collection_with_id","custom_attribute","destroy","disable_transfer","enable_transfer","get_destroy_witness","is_admin","is_freezer","is_issuer","item_price","items","mint_into","owned","owned_in_collection","owner","set_attribute","set_collection_attribute","set_collection_metadata","set_item_metadata","set_price","set_typed_attribute","set_typed_collection_attribute","system_attribute","transfer","typed_attribute","typed_collection_attribute","typed_custom_attribute","typed_system_attribute","AssetKind","Balance","Beneficiary","Error","Failure","Id","InProgress","Pay","PayAssetFromAccount","PayFromAccount","PaymentStatus","Success","Unknown","__clone_box","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_payment","check_payment","check_payment","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","init","init","init","into","into","into","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","max_encoded_len","pay","pay","pay","size_hint","to_keyed_vec","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","Balance","Balance","ConstantMultiplier","FeePolynomial","FixedFee","IdentityFee","NoFee","OldWeight","RuntimeDbWeight","Weight","WeightMeter","WeightToFee","WeightToFeeCoefficient","WeightToFeeCoefficients","WeightToFeePolynomial","__clone_box","__clone_box","__clone_box","__clone_box","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_accrue","can_consume","check_accrue","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coeff_frac","coeff_integer","constants","consume","consumed","consumed_ratio","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","defensive_saturating_accrue","degree","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode_as","encode_to","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","identity","identity","identity","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","limit","max_encoded_len","negative","new","polynomial","read","reads","reads_writes","remaining","saturating_eval","serialize","size_hint","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","try_consume","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight_to_fee","weight_to_fee","weight_to_fee","weight_to_fee","with_limit","write","writes","BlockExecutionWeight","ExtrinsicBaseWeight","ParityDbWeight","RocksDbWeight","WEIGHT_PROOF_SIZE_PER_KB","WEIGHT_PROOF_SIZE_PER_MB","WEIGHT_REF_TIME_PER_MICROS","WEIGHT_REF_TIME_PER_MILLIS","WEIGHT_REF_TIME_PER_NANOS","WEIGHT_REF_TIME_PER_SECOND","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get","get","get","get","get","get","get","get","get","get","init","init","init","init","into","into","into","into","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip"],"q":[[0,"frame_support"],[768,"frame_support::crypto"],[769,"frame_support::crypto::ecdsa"],[771,"frame_support::dispatch"],[1129,"frame_support::dispatch_context"],[1157,"frame_support::genesis_builder_helper"],[1159,"frame_support::inherent"],[1220,"frame_support::instances"],[1250,"frame_support::migrations"],[1336,"frame_support::pallet_macros"],[1367,"frame_support::pallet_prelude"],[2105,"frame_support::storage"],[2478,"frame_support::storage::bounded_btree_map"],[2479,"frame_support::storage::bounded_btree_set"],[2480,"frame_support::storage::bounded_vec"],[2482,"frame_support::storage::child"],[2728,"frame_support::storage::hashed"],[2741,"frame_support::storage::migration"],[2809,"frame_support::storage::storage_noop_guard"],[2835,"frame_support::storage::transactional"],[2843,"frame_support::storage::types"],[3387,"frame_support::storage::unhashed"],[3403,"frame_support::storage::weak_bounded_vec"],[3404,"frame_support::testing_prelude"],[3419,"frame_support::testing_prelude::bounded_btree_map"],[3420,"frame_support::testing_prelude::bounded_vec"],[3424,"frame_support::traits"],[5577,"frame_support::traits::Bounded"],[5581,"frame_support::traits::defensive_prelude"],[5597,"frame_support::traits::schedule"],[5762,"frame_support::traits::schedule::v1"],[5774,"frame_support::traits::schedule::v2"],[5788,"frame_support::traits::schedule::v3"],[5803,"frame_support::traits::tokens"],[6284,"frame_support::traits::tokens::currency"],[6389,"frame_support::traits::tokens::fungible"],[6849,"frame_support::traits::tokens::fungible::conformance_tests"],[6850,"frame_support::traits::tokens::fungible::conformance_tests::inspect_mutate"],[6875,"frame_support::traits::tokens::fungible::freeze"],[6888,"frame_support::traits::tokens::fungible::hold"],[6917,"frame_support::traits::tokens::fungibles"],[7120,"frame_support::traits::tokens::fungibles::approvals"],[7125,"frame_support::traits::tokens::fungibles::freeze"],[7138,"frame_support::traits::tokens::fungibles::hold"],[7165,"frame_support::traits::tokens::fungibles::metadata"],[7173,"frame_support::traits::tokens::fungibles::roles"],[7178,"frame_support::traits::tokens::imbalance"],[7295,"frame_support::traits::tokens::nonfungible"],[7345,"frame_support::traits::tokens::nonfungible_v2"],[7413,"frame_support::traits::tokens::nonfungibles"],[7447,"frame_support::traits::tokens::nonfungibles_v2"],[7504,"frame_support::traits::tokens::pay"],[7608,"frame_support::weights"],[7899,"frame_support::weights::constants"],[8001,"dyn_clone::sealed"],[8002,"bitvec::slice"],[8003,"bitvec::order"],[8004,"byte_slice_cast"],[8005,"core::result"],[8006,"byte_slice_cast"],[8007,"alloc::collections::btree::map"],[8008,"core::cmp"],[8009,"alloc::collections::btree::set"],[8010,"alloc::vec"],[8011,"core::clone"],[8012,"core::cmp"],[8013,"parity_scale_codec::error"],[8014,"parity_scale_codec::codec"],[8015,"core::option"],[8016,"serde::de"],[8017,"serde::de"],[8018,"core::ops::range"],[8019,"core::iter::traits::collect"],[8020,"parity_scale_codec::codec"],[8021,"core::fmt"],[8022,"core::hash"],[8023,"core::slice::index"],[8024,"core::hash"],[8025,"core::ops::function"],[8026,"serde::ser"],[8027,"serde::ser"],[8028,"core::iter::traits::collect"],[8029,"core::any"],[8030,"scale_info::form"],[8031,"scale_info::ty"],[8032,"core::ops::function"],[8033,"core::cmp"],[8034,"sp_inherents"],[8035,"alloc::collections::btree::map"],[8036,"der::reader"],[8037,"core::mem::maybe_uninit"],[8038,"parity_scale_codec::decode_finished"],[8039,"core::marker"],[8040,"der::length"],[8041,"core::convert"],[8042,"sp_runtime::traits"],[8043,"sp_runtime::transaction_validity"],[8044,"sp_runtime"],[8045,"sp_runtime::traits"],[8046,"core::ops::arith"],[8047,"core::error"],[8048,"alloc::string"],[8049,"sp_runtime"],[8050,"unicode_normalization::replace"],[8051,"unicode_normalization::recompose"],[8052,"unicode_normalization::decompose"],[8053,"unicode_normalization::stream_safe"],[8054,"sp_wasm_interface"],[8055,"sp_storage"],[8056,"parity_scale_codec::codec"],[8057,"alloc::vec::into_iter"],[8058,"sp_arithmetic::per_things"],[8059,"sp_storage"],[8060,"sp_runtime"],[8061,"sp_arithmetic::per_things"],[8062,"io_lifetimes::portability"],[8063,"io_lifetimes::portability"],[8064,"core::time"],[8065,"sp_staking"],[8066,"core::cmp"],[8067,"sp_runtime::traits"],[8068,"smallvec"],[8069,"parity_scale_codec::compact"]],"d":["Hash storage keys with blake2 128","Hash storage keys with <code>concat(blake2_128(key), key)</code>","Hash storage keys with blake2 256","A bounded map based on a B-Tree.","A bounded set based on a B-Tree.","A bounded slice.","A bounded vector.","","Derive <code>Clone</code> but do not bound any generic.","Consensus engine unique ID.","Derive <code>Debug</code> but do not bound any generic.","Derive <code>Default</code> but do not bound any generic.","Derive <code>Eq</code> but do not bound any generic.","","Store the key directly.","","","","A unified log target for support operations.","The number of bytes of the module-specific <code>error</code> field …","","A type that cannot be instantiated.","","","A pallet identifier. These are per pallet and should be …","","Derive <code>PartialEq</code> but do not bound any generic.","Trait for things which can be printed from the runtime.","Hasher to use to hash keys to insert to storage.","Derive [<code>Debug</code>], if <code>std</code> is enabled it uses …","","Hasher to use to hash keys to insert to storage.","","","","","","Hash storage keys with twox 128","Hash storage keys with twox 256","Hash storage keys with <code>concat(twox64(key), key)</code>","A weakly bounded vector.","","","","","","","","Enable/disable the given code depending on <code>feature = &quot;std&quot;</code> …","","","Return a <code>BoundedSlice</code> with the content and bound of <code>Self</code>.","","","","","","","","","","","","","","","","","","","Assert an expression returns an error specified.","Assert an expression returns an error specified.","Assert an expression returns error with the given weight.","Assert that the maximum encoding size does not exceed the …","Evaluate an expression, assert it returns an expected <code>Err</code> …","Panic if an expression doesn’t evaluate to <code>Ok</code>.","Evaluate any expression and assert that runtime storage …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the bound of the type in <code>usize</code>.","Get the bound of the type in <code>usize</code>.","Get the bound of the type in <code>usize</code>.","","","Get the bound of the type in <code>usize</code>.","Same as <code>Vec::resize</code>, but if <code>size</code> is more than <code>Self::bound</code>, …","Clears the map, removing all elements.","","","Clears the set, removing all elements.","Exactly the same semantics as <code>Vec::clear</code>.","","","","","","","","","","","","","","","","","","","","","","Construct a runtime, with the given name and the given …","Convert the current crate version into a <code>CrateVersion</code>.","Utilities for dealing with crypto primitives. Sometimes we …","Print out the debuggable type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generic function to mark an execution path as ONLY …","Trigger a defensive failure if a condition is not met.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This attribute can be used to derive a full implementation …","","","Dispatch system. Contains a macro for defining runtime …","Provides functions to interact with the dispatch context.","Exact same semantics as <code>Vec::drain</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Evaluate <code>$x:expr</code> and if not true return <code>Err($y:expr)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return Err of the expression: <code>return Err($expression);</code>.","","","","","","","Create <code>Self</code> from <code>t</code> without any checks. Logs warnings if …","Forces the insertion of <code>element</code> into <code>self</code> retaining all …","Forces the insertion of <code>element</code> into <code>self</code> retaining all …","Forces the insertion of <code>s</code> into <code>self</code> truncating first if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Helper functions for implementing …","","","","","Return a mutable reference to the value corresponding to …","Exactly the same semantics as <code>slice::get_mut</code>.","Exactly the same semantics as <code>slice::get_mut</code>.","","","","","","","","","","","","","Do something hypothetically by rolling back any changes …","Assert something to be <em>hypothetically</em> <code>Ok</code>, without actually …","","","","","","","","Simple macro to explicitly implement EnsureOriginWithArg …","","","","","","","","","","","","","","","","","","","","","Some instance placeholder to be used in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume self, and return the inner <code>BTreeMap</code>.","Consume self, and return the inner <code>BTreeSet</code>.","Consume self, and return the inner <code>Vec</code>. Henceforth, the …","Consume self, and return the inner <code>Vec</code>. Henceforth, the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true of this collection is full.","Gets a mutable iterator over the entries of the map, …","Exactly the same semantics as <code>slice::iter_mut</code>.","Exactly the same semantics as <code>slice::last_mut</code>.","","","","","Consume the map, applying <code>f</code> to each of it’s values and …","Macro that inserts some tokens after the first match of …","Create a type which implements the <code>Contains</code> trait for a …","Create a type which implements the <code>Contains</code> trait for a …","","","","","The max length of the final hash, for the given key type.","","","","","","","","","","Create a new <code>BoundedBTreeMap</code>.","Create a new <code>BoundedBTreeSet</code>.","Create <code>Self</code> with no items.","Macro for easily creating a new implementation of both the …","The <code>pallet</code> attribute macro defines a pallet that can be …","Contains macro stubs for all of the pallet:: macros","Prelude to be used alongside pallet macro, for ease of use.","Create new implementations of the <code>Get</code> trait.","","","","","","","","","","","","","Exactly the same semantics as <code>Vec::pop</code>.","Print something that implements <code>Printable</code> from the runtime.","Print the object.","Attach this attribute to an impl statement that you want …","Remove a key from the map, returning the value at the key …","Remove an item from the set, returning whether it was …","Exactly the same semantics as <code>Vec::remove</code>.","Exactly the same semantics as <code>Vec::remove</code>.","Remove a key from the map, returning the value at the key …","Assert the annotated function is executed within a storage …","Exactly the same semantics as <code>BTreeMap::retain</code>.","Exactly the same semantics as <code>Vec::retain</code>.","Exactly the same semantics as <code>Vec::retain</code>.","Split the hash part out of the input.","","","","Print out a formatted message.","","","","","","","","","","","","","Move the position of an item from one location to another …","Exactly the same semantics as <code>slice::sort</code>.","Exactly the same semantics as <code>slice::sort_by</code>.","Exactly the same semantics as <code>slice::sort_by_key</code>.","","Stuff to do with the runtime’s storage.","Generate a <code>#[pallet::storage]</code> alias outside of a pallet.","Exactly the same semantics as <code>slice::swap_remove</code>.","Exactly the same semantics as <code>Vec::swap_remove</code>.","Removes and returns the value in the set, if any, that is …","Prelude to be used for pallet testing, for ease of use.","","","","","","","","","","","","","","Traits and associated utilities for use in the FRAME …","Execute the annotated function in a new storage …","Exactly the same semantics as <code>Vec::truncate</code>.","Consume and truncate the vector <code>v</code> in order to create a new …","","Create an instance from the first elements of the given …","","Exactly the same semantics as <code>Vec::append</code>, but returns an …","","","","","Exactly the same semantics as <code>Vec::extend</code>, but returns an …","","","","","","","","","","","","","","","","","","","","","Exactly the same semantics as <code>BTreeMap::insert</code>, but …","Exactly the same semantics as <code>BTreeSet::insert</code>, but …","Exactly the same semantics as <code>Vec::insert</code>, but returns an …","Exactly the same semantics as <code>Vec::insert</code>, but returns an …","","","","","","","","","","","","","","","","Consume the map, applying <code>f</code> to each of it’s values as …","Consumes self and mutates self via the given <code>mutate</code> …","Consumes self and mutates self via the given <code>mutate</code> …","Consumes self and mutates self via the given <code>mutate</code> …","Consumes self and mutates self via the given <code>mutate</code> …","Exactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…","Exactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Re-exports <code>sp-weights</code> public API, and contains benchmarked …","Pre-allocate <code>capacity</code> items in self.","Allocate self with the maximum possible capacity.","Simple ECDSA secp256k1 API.","Extension trait for <code>Public</code> to be used from inside the …","Returns Ethereum address calculated from this ECDSA public …","Serializable version of pallet dispatchable.","","Means to checks if the dispatchable is feeless.","Means of classifying a dispatchable function.","A generalized group of dispatch types.","The error type contained in a <code>DispatchResultWithPostInfo</code>.","A bundle of static information collected from the …","Un-augmented version of <code>DispatchResultWithPostInfo</code> that …","The return type of a <code>Dispatchable</code> in frame. When returned …","Contains the error value","Contains the error value","A <code>Dispatchable</code> function (aka transaction) that can carry …","The iterator type.","A mandatory dispatch. These kinds of dispatch are always …","Transactor will NOT pay related fees.","It is signed by nobody, can be either:","A normal dispatch.","Contains the success value","Contains the success value","A trait that represents one or many values of given type.","An operational dispatch.","The Origin type of the runtime.","A type that can be used as a parameter in a dispatchable …","Explicit enum to denote if a transaction pays fee or not.","Indicates if dispatch function should pay fees or not.","A struct holding value for each <code>DispatchClass</code>.","Weight information that is only available post dispatch. …","Origin for the System pallet.","The system itself ordained this dispatch to happen: this …","","It is signed by some public key and we provide the …","Means of weighing some particular kind of data (<code>T</code>).","Allows easy conversion from <code>DispatchError</code> to …","Transactor will pay related fees.","","","","","","","Increase the weight of the given class. Saturates at the …","Actual weight consumed by a call or <code>None</code> which stands for …","Add some weight to the given class. Saturates at the …","Returns an array containing all dispatch classes.","Returns <code>Some</code> with a reference to the <code>AccountId</code> if <code>self</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate how much weight was actually spent by the …","Calculate how much (if any) weight was not used by the …","Try to increase the weight of the given class. Saturates …","Class of this transaction.","Classify the dispatch function based on input data <code>target</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual <code>DispatchResult</code> indicating whether the dispatch …","Extract the actual pays_fee from a dispatch result if any …","Extract the actual weight from a dispatch result if any or …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get current value for given class.","Return a <code>DispatchInfo</code>, containing relevant information of …","Get a mutable reference to current value of given class.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this item into an iterator.","","","","","","","","","","","","","","","","","","","Checks if the dispatchable satisfies the feeless condition …","Returns <code>true</code> if <code>self</code> is <code>None</code>, <code>None</code> otherwise.","Returns <code>true</code> if <code>self</code> is <code>Root</code>, <code>None</code> otherwise.","","","Create new <code>PerDispatchClass</code> with the same value for every …","Returns an array of all dispatch classes except <code>Mandatory</code>.","","Determine if user should actually pay fees at the end of …","Does this transaction pay fees.","Whether this transaction should pay fees when all is said …","Additional information about the <code>Dispatchable</code> which is …","","Reduce the weight of the given class. Saturates at the …","","Set the value of given class.","","","","","","","","","","","","","","","","","","","Returns the total weight consumed by all extrinsics in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Weigh the data <code>T</code> given by <code>target</code>. When implementing this …","Weight of this transaction.","Call this on your modules custom errors type in order to …","Abstraction over some optional value <code>T</code> that is stored in …","","","Clear the internal value.","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get the value as reference.","Get the value as mutable reference.","","Calls <code>U::from(self)</code>.","","","Returns a mutable reference to the value.","Run the given closure <code>run</code> in a dispatch context.","Set to the given value.","","","","","","","Runs the given <code>callback</code> in the dispatch context and gives …","Build <code>GenesisConfig</code> from a JSON blob not using any …","Get the default <code>GenesisConfig</code> as a JSON blob. For more …","The call type of the pallet.","The result of checking inherents.","The error returned by <code>check_inherent</code>.","The inherent identifier used by this inherent.","Inherent data to include in a block.","An identifier for an inherent.","Did we encounter a fatal error while checking an inherent?","Auxiliary to make any given error resolve to …","A pallet that provides or verifies an inherent extrinsic …","","","","","","","Check whether the given inherent is valid. Checking the …","","","Create an inherent out of the given <code>InherentData</code>.","","","","","","","","","","","Is this a fatal error?","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get an error out of the result.","","","Calls <code>U::from(self)</code>.","Convert into an iterator over all contained errors.","","","Is this a fatal error?","Return whether the call is an inherent call.","Determines whether this inherent is required in this block.","Create a new instance.","Is this result ok?","Put an error into the result.","","","","","","","","","","","","","","<code>Instance1</code> to be used for instantiable palllets defined …","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","The migration ran, inner vec contains pre_upgrade data.","This migration is a noop, do not run post_upgrade checks.","Trait used by …","<code>RemovePallet</code> is a utility struct used to remove all …","Can store the current pallet version in storage.","Handles storage migration pallet versioning.","A helper enum to wrap the pre_upgrade bytes like an Option …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Migrate from the <code>PalletVersion</code> struct to the new …","Executes the versioned runtime upgrade.","","","Write the current storage version to the storage.","","","","","","","","","","","","","","","","","","","","","","","Allows a pallet to declare a set of functions as a …","Enforce the index of a variant in the generated <code>enum Call</code>. …","Declares the arguments of a <code>call</code> function to be encoded …","The <code>#[pallet::composite_enum]</code> attribute allows you to …","The mandatory attribute <code>#[pallet::config]</code> defines the …","The <code>#[pallet::constant]</code> attribute can be used to add an …","To bypass the <code>frame_system::Config</code> supertrait check, use …","The <code>#[pallet::error]</code> attribute allows you to define an …","The <code>#[pallet::event]</code> attribute allows you to define pallet …","Allows you to define some extra constants to be added into …","Each dispatchable may be annotated with the …","The attribute …","To generate a <code>Store</code> trait associating all storages, …","Allows you to define how the state of your pallet at …","Allows you to define the genesis configuration for the …","The optional attribute …","The <code>#[pallet::hooks]</code> attribute allows you to specify a …","An attribute macro that can be attached to a module …","The <code>#[pallet::inherent]</code> attribute allows the pallet to …","The optional attribute <code>#[pallet::no_default]</code> can be …","The optional attribute <code>#[pallet::no_default_bounds]</code> can be …","The <code>#[pallet::origin]</code> attribute allows you to define some …","Can be attached to a module. Doing so will declare that …","Declares a type alias as a storage item. Storage items are …","The optional attribute …","Because the <code>pallet::pallet</code> macro implements …","The <code>#[pallet::type_value]</code> attribute lets you define a …","The optional attribute <code>#[pallet::unbounded]</code> declares the …","The <code>#[pallet::validate_unsigned]</code> attribute allows the …","Each dispatchable needs to define a weight with …","The optional attribute <code>#[pallet::whitelist_storage]</code> will …","The transaction birth block is ancient.","An arithmetic error.","An extrinsic with a Mandatory dispatch resulted in Error. …","A bad origin.","General error to do with the transaction’s proofs (e.g. …","The sending address is disabled or known to be invalid.","","","","A bounded map based on a B-Tree.","A bounded set based on a B-Tree.","A bounded vector.","","The call of the transaction is not expected.","The call to validate","Could not lookup some information that is required to …","Failed to lookup some data.","Derive <code>Clone</code> but do not bound any generic. Docs are at …","Const getter for a basic type.","At least one consumer is remaining so the account cannot …","The state is corrupt; this is generally not going to fix …","","","Any other custom invalid validity that is not covered by …","Any other custom unknown validity that is not covered by …","Derive <code>Debug</code> but do not bound any generics. Docs are at …","Trait that allows zero-copy read of value-references from …","Derive <code>parity_scale_codec::Decode</code> and for struct and enum.","","Reason why a dispatch call failed.","","","Trait that allows zero-copy write of value-references to …","Derive <code>parity_scale_codec::Encode</code> and …","","derive Eq but do no bound any generic. Docs are at …","Contains the error value","Resources exhausted, e.g. attempt to read/write data which …","The transaction would exhaust the resources of current …","Transaction has been received externally.","General error to do with the transaction not yet being …","A trait for querying a single value from a type.","Implement Get by returning Default for any type that …","","","","The type identifying for which type info is provided.","Transaction is already included in block.","Inherent data to include in a block.","An identifier for an inherent.","The transaction is invalid.","An invalid transaction validity.","","Transaction is coming from a local source.","The maximal weight in all dimensions.","The number of bytes of the module-specific <code>error</code> field …","Auxiliary to make any given error resolve to …","An extrinsic with a mandatory dispatch tried to be …","Items implementing <code>MaxEncodedLen</code> have a statically known …","Derive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …","A type that implements Serialize, DeserializeOwned and …","A type that can be used in runtime structures.","A custom error in a module.","","There are no providers so the account cannot be created.","No validator found for the given unsigned transaction.","Contains the success value","","Some error occurred.","","","Derive <code>PartialEq</code> but do not bound any generic. Docs are at …","General error to do with the inability to pay some fees …","","Zero-sized type used to mark things that “act like” …","","","Root origin is not allowed.","","Derive [<code>Debug</code>], if <code>std</code> is enabled it uses …","General error to do with the transaction being outdated …","","","","","","","","An error to do with tokens.","There are too many consumers so the account cannot be …","Minimum number of blocks a transaction will remain valid …","Priority for a transaction. Additive. Higher is better.","The source of the transaction.","Tag for a transaction. No two transactions with the same …","Information on a transaction’s validity and, if valid, …","Errors that can occur while checking the validity of a …","The number of transactional layers has been reached, or we …","","","","The type which is returned.","Implementors return their meta type information.","","A trait for querying a single value from a type defined in …","Some resource (e.g. a preimage) is unavailable right now. …","Transaction validity can’t be determined.","An unknown transaction validity.","Information concerning a valid transaction.","Provide validation for unsigned extrinsics.","","A weakly bounded vector.","","","","","","","","","","","","","","Constant version of Add for <code>proof_size</code> component with u64.","Constant version of Add for <code>ref_time</code> component with u64.","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to increase <code>self</code> by <code>amount</code> via checked addition.","Checked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …","","Checked <code>Weight</code> scalar division. Computes …","Calculates how many <code>other</code> fit into <code>self</code>.","Checked <code>Weight</code> scalar multiplication. Computes …","Try to reduce <code>self</code> by <code>amount</code> via checked subtraction.","","Checked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","Combine two instances into one, as a best effort. This …","Attempt to deserialise the value from input.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to deserialize the value from input into a …","","","","","","","","","","","","","","","Generic function to mark an execution path as ONLY …","Trigger a defensive failure if a condition is not met.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant version of Div with u64.","","","","","","","","","","","","","Convert self to an owned vector.","","","","Convert self to a slice and append it to the destination.","","","","","","","","","","","Returns the fixed encoded size of the type.","","Calculates the encoded size.","Evaluate <code>$x:expr</code> and if not true return <code>Err($y:expr)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the reason for the invalidity was block …","Returns <code>true</code> if the reason for the error was block …","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Construct <code>Weight</code> from the same weight for all parts.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Construct <code>Weight</code> from weight parts, namely reference time …","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Return the current value.","Return the current value.","","","","","Returns the data for the requested inherent.","","","","","","","","","","","","","","","","","","","","","","","","The optional attribute <code>#[inject_runtime_type]</code> can be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the number of inherents in this instance","Transaction longevity","Get the aggressive max of <code>self</code> and <code>other</code> weight.","Upper bound, in bytes, of the maximum encoded size of this …","","","","","","Get the conservative min of <code>self</code> and <code>other</code> weight.","","","Constant version of Mul with u64.","","Create a new instance.","","","Validate the call right before dispatch.","","","Priority of the transaction.","Return the storage size part of the weight.","Return a mutable reference to the storage size part of the …","A flag indicating if the transaction should be propagated …","Provided tags","Put data for an inherent into the internal storage.","Return the reference time part of the weight.","Return a mutable reference to the reference time part of …","Attach this attribute to an impl statement that you want …","Replace the data for an inherent.","Transaction dependencies","Increment <code>Weight</code> by <code>amount</code> via saturating addition.","Saturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …","Saturating <code>Weight</code> scalar division. Computes …","Saturating <code>Weight</code> scalar multiplication. Computes …","Saturating <code>Weight</code> scalar exponentiation. Computes …","Reduce <code>Weight</code> by <code>amount</code> via saturating subtraction.","Saturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …","","","","","","","Set the storage size part of the weight.","Set the reference time part of the weight.","If possible give a hint of expected size of the encoding.","","","","","","","","","","Attempt to skip the encoded value from input.","","","Return the same error but without the attached message.","","","Constant version of Sub for <code>proof_size</code> component with u64.","Constant version of Sub for <code>ref_time</code> component with u64.","","","","","","","","","","","","","","","","","","","","","","Try to add some <code>other</code> weight while upholding the <code>limit</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the static type identifier for <code>Self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert self to a slice and then invoke the given closure …","","","Return the validity of the call","","","","","","","","","","","","","","Returns if the reason for the invalidity was a mandatory …","Returns <code>true</code> if the reason for the error was it being a …","","Initiate <code>ValidTransaction</code> builder object with a particular …","","","Return a <code>Weight</code> where all fields are zero.","","Append iterator for fast append operations.","Iterate over a prefix of a child trie and decode raw_key …","Commit the transaction.","The type that iterates over all <code>(key1, key2)</code>.","A strongly-typed double map in storage whose secondary …","A strongly-typed map in storage whose keys and values can …","A strongly-typed map with arbitrary number of keys in …","Iterator for normal and draining iteration.","The type that iterates over all <code>(key, value)</code>.","The type that iterates over all <code>(key1, key2, value)</code>.","The type that iterates over all …","","The type that itereates over all <code>key</code>s.","The type that iterates over all …","Utility type for converting a storage map into a <code>Get&lt;u32&gt;</code> …","Iterate over a prefix and decode raw_key into <code>T</code>.","The type that iterates over all <code>key2</code>.","Iterate or drain over a prefix and decode raw_key and …","The type that iterates over all <code>(key2, value)</code>.","Trait for specialising on removal logic of <code>PrefixIterator</code>.","The type that get/take return.","The type that get/take return.","The type that get/take returns.","The type that get/take returns.","Rollback the transaction.","Marker trait that will be implemented for types that …","Append iterator to append values to a storage struct.","It is expected that the length is at the beginning of the …","It is expected that the length is at the beginning of the …","An implementation of a map with a two keys.","","A non-continuous container type.","A strongly-typed map in storage.","An implementation of a map with an arbitrary number of …","Trait for storage types that store all its value after a …","Trait for maps that store all its value after a unique …","An iterator that streams values directly from storage.","Marker trait that is implemented for types that support …","A trait for working with macro-generated storage values …","Describes on what should happen with a storage transaction.","Storage double map that is capable of <code>StorageTryAppend</code>.","Storage map that is capable of <code>StorageTryAppend</code>.","Storage value that is capable of <code>StorageTryAppend</code>.","Append the given item to the value in the storage.","Append a single item in constant time <code>O(1)</code>.","Append the given items to the value in the storage.","Append the given item to the value in the storage.","Append the given items to the value in the storage.","Append many elements.","Append many items in linear time <code>O(items.count())</code>.","Append a single element.","A fast append iterator.","","","","","","","","","","","","","","","Traits, types and structs to support a bounded BTreeMap.","Traits, types and structs to support a bounded <code>BTreeSet</code>.","Traits, types and structs to support putting a bounded …","Operation on runtime child storages.","","","","Attempt to remove all items from the map.","Remove all values under the first key <code>k1</code> in the overlay …","Attempt to remove items from the map matching a <code>partial_key</code>…","Does the value (explicitly) exist in storage?","Does the value (explicitly) exist in storage?","Does the value (explicitly) exist in storage?","Does any value under the first key <code>k1</code> (explicitly) exist …","Does any value under a <code>partial_key</code> prefix (explicitly) …","Converts to the same iterator but with the different ‘…","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Decode the length of the storage value at <code>key</code>.","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Decode the length of the storage value at <code>key</code>.","","","","","","","","","","","Drain the elements in append order.","Remove all elements from the map and iterate through them …","Remove all elements from the map and iterate through them …","Remove all elements from the map and iterate through them …","Mutate this iterator into a draining iterator; items …","Mutate this iterator into a draining iterator; items …","Mutate this iterator into a draining iterator; items …","Remove all elements from the map with first key <code>k1</code> and …","Remove all elements from the map with prefix key <code>kp</code> and …","","","","","","Does the value (explicitly) exist in storage?","Final full prefix that prefixes all keys.","Final full prefix that prefixes all keys.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Load the value from the provided storage instance.","Load the value associated with the given key from the map.","Load the value associated with the given key from the …","Load the value associated with the given key from the map.","","","Operation on runtime storage using hashed keys.","Get the storage key.","Get the storage key used to fetch a value corresponding to …","Get the storage key used to fetch a value corresponding to …","Get the storage key used to fetch a value corresponding to …","","","","","","","Store a value to be associated with the given key from the …","Store a value to be associated with the given keys from …","Store a value to be associated with the given key from the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert into the inner type.","","","","","","","","","","","","","","List the elements in append order.","Enumerate all elements in the map in lexicographical order …","Enumerate all elements in the map in lexicographical order …","Enumerate all elements in the map in lexicographical order …","Enumerate all elements in the map after a specified …","Enumerate all elements in the map after a specified …","Enumerate all elements in the map after a specified …","Enumerate all second keys <code>k2</code> in the map with the same …","Enumerate all suffix keys in the map with prefix key <code>kp</code> in …","Enumerate all second keys <code>k2</code> in the map with the same …","Enumerate all suffix keys in the map with prefix key <code>kp</code> …","Enumerate all keys in the map in lexicographical order of …","Enumerate all keys <code>k1</code> and <code>k2</code> in the map in lexicographical …","Enumerate all keys in the map in lexicographical order of …","Enumerate all keys in the map after a specified …","Enumerate all keys <code>k1</code> and <code>k2</code> in the map after a specified …","Enumerate all keys in the map after <code>starting_raw_key</code> in …","Enumerate all elements in the map with first key <code>k1</code> in …","Enumerate all elements in the map with prefix key <code>kp</code> in …","Enumerate all elements in the map with first key <code>k1</code> after …","Enumerate all elements in the map with prefix key <code>kp</code> after …","Iterate over values that share the first key.","Iterate over values that share the partial prefix key.","Iter over all value of the storage.","Clear the storage value.","Get the last key that has been iterated upon and return it.","Get the last key that has been iterated upon and return it.","Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code>…","Migrate an item with the given <code>key</code> from a <code>blake2_256</code> …","Migrate an item with the given <code>key1</code> and <code>key2</code> from defunct …","Migrate an item with the given <code>key</code> from defunct <code>hash_fns</code> …","Some utilities for helping access storage with arbitrary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutate the value","Mutate the value under a key.","Mutate the value under the given keys.","Mutate the value under a key.","Mutate the value. Deletes the item if mutated to a <code>None</code>.","Mutate the value under a key.","Mutate the value under the given keys. Deletes the item if …","Mutate the value under a key.","Mutate the value under a key if the value already exists. …","Mutate the value under a key if the value already exists. …","Creates a new <code>PrefixIterator</code>, iterating after <code>previous_key</code> …","Creates a new <code>KeyPrefixIterator</code>, iterating after …","","","","","","","","","","","","","","","","This function is called whenever a key/value is removed.","Pallet prefix. Used for generating final key.","Pallet prefix. Used for generating final key.","Get the prefix that is being iterated upon for this …","Get the prefix that is being iterated upon for this …","Store a value under this key into the provided storage …","Remove the value under a key.","Remove the value under the given keys.","Remove the value under a key.","Remove all values in the overlay and up to <code>limit</code> in the …","Remove all values under the first key <code>k1</code> in the overlay …","Remove all values starting with <code>partial_key</code> in the overlay …","Store a value under this key into the provided storage …","Store or remove the value to be associated with <code>key</code> so …","Store or remove the value to be associated with <code>key</code> so …","Store or remove the value to be associated with <code>key</code> so …","Set the key that the iterator should start iterating after.","Set the key that the iterator should start iterating after.","Contains the <code>crate::StorageNoopGuard</code> for conveniently …","Returns the storage prefix for a specific pallet name and …","Storage prefix. Used for generating final key.","Storage prefix. Used for generating final key.","Create the streaming iterator.","","","","Swap the values of two keys.","Swap the values of two key-pairs.","Swap the values of two keys.","Take a value from storage, removing it afterwards.","Take the value under a key.","Take a value from storage, removing it afterwards.","Take the value under a key.","Provides functionality around the transaction storage.","Translate a value from some previous type (<code>O</code>) to the …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the next entry following <code>previous_key</code> by a …","Translate the values of all elements by a function <code>f</code>, in …","Try and append the <code>item</code> into the storage item.","Try and append the <code>item</code> into the storage map at the given …","Try and append the <code>item</code> into the storage double map at the …","","","","","","Try to get the underlying value from the provided storage …","Try to get the value for the given key from the map.","Try to get the value for the given key from the double map.","Try to get the value for the given key from the map.","","","","","","Mutate the value if closure returns <code>Ok</code>","Mutate the item, only if an <code>Ok</code> value is returned.","Mutate the value under the given keys when the closure …","Mutate the item, only if an <code>Ok</code> value is returned.","Mutate the value if closure returns <code>Ok</code>. Deletes the item …","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","","","","","","Storage types to build abstraction on storage, they …","","","","","","Operation on unhashed runtime storage.","","","","","","","","","","","Traits, types and structs to support putting a bounded …","Construct iterator to iterate over child trie items in …","Construct iterator to iterate over child trie items in …","","","","A bounded map based on a B-Tree.","A bounded set based on a B-Tree.","A bounded slice.","A bounded vector.","All keys to remove were removed, return number of …","Information related to a child state.","Type of child. It does not strictly define different child …","The outcome of calling <code>storage_kill</code>. Returned value is the …","Results concerning an operation to remove many keys.","This is the one used by default.","If runtime module ensures that the child key is a unique …","Not all key to remove were removed, return number of …","Different possible state version.","Old state version, no value nodes.","New state version can use value nodes.","","","","The number of items removed from the backend database.","","","","","","","","","","","","","","","","","","","","","","","Returns the type for this child info.","","Partially clear the child storage of each key-value pair.","","","","","","","","","","","","","","","","","","","","","","","","Deconstruct into the internal components.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check to see if <code>key</code> has an explicit entry in storage.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Transform a prefixed key into a tuple of the child type …","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Return the value of the item in storage under <code>key</code>, or <code>None</code> …","","Return the value of the item in storage under <code>key</code>, or …","Return the value of the item in storage under <code>key</code>, or the …","Return the value of the item in storage under <code>key</code>, or …","Get a Vec of bytes from storage.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns a the full location in the direct parent of this …","","","","","","","Returns byte sequence (keyspace) that can be use by …","Ensure <code>key</code> has no explicit entry in storage.","Remove all <code>storage_key</code> key/values","Return the length in bytes of the value without reading …","The number of iterations (each requiring a storage …","A continuation cursor which, if <code>Some</code> must be provided to …","Try to get a child type from its <code>u32</code> representation.","Instantiates child information for a default child trie of …","Same as <code>new_default</code> but with <code>Vec&lt;u8&gt;</code> as input.","Returns the location reserved for this child trie in their …","","Return a the full location in the direct parent of this …","Put <code>value</code> in storage under <code>key</code>.","Put a raw byte slice into storage.","Calculate current child root value.","","","","","If defined, values in state of size bigger or equal to …","Returns a reference to the location in the direct parent of","Remove <code>key</code> from storage, returning its value if it had an …","Return the value of the item in storage under <code>key</code>, or …","Remove <code>key</code> from storage, returning its value, or, if there …","Return the value of the item in storage under <code>key</code>, or …","","","","","","","","","","","","","","","","","","","","Try to update with another instance, return false if both …","","","","","","","","","","","","","","","","","","","","","","","The number of unique keys removed, taking into account …","","","","","","","","","","","Check to see if <code>key</code> has an explicit entry in storage.","Return the value of the item in storage under <code>key</code>, or <code>None</code> …","Return the value of the item in storage under <code>key</code>, or …","Return the value of the item in storage under <code>key</code>, or the …","Return the value of the item in storage under <code>key</code>, or …","Get a Vec of bytes from storage.","Ensure <code>key</code> has no explicit entry in storage.","Put <code>value</code> in storage under <code>key</code>.","Put a raw byte slice into storage.","Remove <code>key</code> from storage, returning its value if it had an …","Return the value of the item in storage under <code>key</code>, or …","Remove <code>key</code> from storage, returning its value, or, if there …","Return the value of the item in storage under <code>key</code>, or …","Utility to iterate through raw items in storage.","Utility to iterate through raw items in storage.","","","","","Attempt to remove all values under a storage prefix by the …","","","","","Mutate this iterator into a draining iterator; items …","Mutate this iterator into a draining iterator; items …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a particular value in storage by the <code>module</code>, the map’…","Get a particular value in storage by the <code>module</code>, the map’…","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Move all storages from a pallet prefix to another pallet …","Move all <code>(key, value)</code> after some prefix to the another …","Move a storage from a pallet prefix to another pallet …","","","Construct iterator to iterate over map items in <code>module</code> for …","Construct iterator to iterate over map items in <code>module</code> for …","","","Put a particular value into storage by the <code>module</code>, the map…","Remove all items under a storage prefix by the <code>module</code>, the …","Construct iterator to iterate over map items in <code>module</code> for …","Construct iterator to iterate over map items in <code>module</code> for …","Construct iterator to iterate over map items in <code>module</code> for …","Construct iterator to iterate over map items in <code>module</code> for …","Take a particular item in storage by the <code>module</code>, the map’…","Take a particular value in storage by the <code>module</code>, the map…","","","","","","","","","","","","","Construct iterator to iterate over map items in <code>module</code> for …","Construct iterator to iterate over map items in <code>module</code> for …","Asserts that no storage changes took place between con- …","","","","","","","","Returns the argument unchanged.","Creates a new <code>StorageNoopGuard</code> with a custom error message.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","Alias to <code>default()</code>.","Sets a custom error message for a <code>StorageNoopGuard</code>.","","","","","","","The type that is being used to store the current number of …","The maximum number of nested layers.","The key that is holds the current number of active layers.","Execute the supplied function, ensuring we are at least in …","Check if the current call is within a transactional layer.","Execute the supplied function, adding a new storage layer.","Execute the supplied function in a new storage transaction.","Same as <code>with_transaction</code> but without a limit check on …","A wrapper around a <code>StorageMap</code> and a <code>StorageValue</code> (with the …","The requirement for an instance of <code>CountedStorageMap</code>.","A wrapper around a <code>StorageNMap</code> and a <code>StorageValue</code> (with …","The requirement for an instance of <code>CountedStorageNMap</code>.","The numeric counter type.","The prefix to use for the counter storage value.","The prefix to use for the counter storage value.","Marker trait to indicate that each element in the tuple …","","","Trait indicating whether a KeyGenerator has the prefix P.","Trait indicating whether a ReversibleKeyGenerator has the …","","","A type used exclusively by storage maps as their key type.","","A trait that contains the current key as an associated …","The maximum length used by the key in storage.","Metadata for the storage kind.","Implements <code>QueryKindTrait</code> with <code>Query</code> type being <code>Option&lt;_&gt;</code>.","Type returned on query","Trait implementing how the storage optional value is …","Implements <code>QueryKindTrait</code> with <code>Query</code> type being …","","A trait that indicates the hashers for the keys generated …","A type representing a <em>double map</em> in storage. This …","Build the metadata of a storage.","A type representing a <em>map</em> in storage. A <em>storage map</em> is a …","A type representing an <em>NMap</em> in storage. This structure …","A type representing a <em>value</em> in storage. A <em>storage value</em> is …","","Trait to indicate that a tuple can be converted into an …","Implements <code>QueryKindTrait</code> with <code>Query</code> type being <code>Value</code>.","Append the given items to the value in the storage.","Append the given item to the value in the storage.","Append the given item to the value in the storage.","","Append the given items to the value in the storage.","","Append the given item to the value in the storage.","","","Append the given item to the value in the storage.","","","","","","","","","","","","","","","","","","","","","Build into <code>entries</code> the storage metadata entries of a …","","","","","","","Attempt to remove all items from the map.","Attempt to remove all items from the map.","Attempt to remove all items from the map.","Attempt to remove all items from the map.","Attempt to remove all items from the map.","Attempt to remove items from the map matching a <code>partial_key</code>…","Attempt to remove items from the map matching a <code>first_key</code> …","","","Attempt to remove items from the map matching a <code>partial_key</code>…","Does the value (explicitly) exist in storage?","Does the value (explicitly) exist in storage?","Does the value (explicitly) exist in storage?","","Does the value (explicitly) exist in storage?","","","Does the value (explicitly) exist in storage?","","","Return the count.","Return the count.","The key used to store the counter of the map.","The key used to store the counter of the map.","","","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","","","","","","","","","","","","","","","","","","","","","","Remove all elements from the map and iterate through them …","Remove all elements from the map and iterate through them …","Remove all elements from the map and iterate through them …","Remove all elements from the map and iterate through them …","Remove all elements from the map and iterate through them …","","Remove all elements from the map with prefix key <code>kp</code> and …","Remove all elements from the map with first key <code>k1</code> and …","","Remove all elements from the map with prefix key <code>kp</code> and …","","","","","","","","","","","Does the value (explicitly) exist in storage?","","Given a <code>key</code> tuple, calculate the final key by encoding …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Convert an optional value (i.e. some if trie contains the …","","","","Convert a query to an optional value.","","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Load the value associated with the given key from the map.","Load the value associated with the given key from the map.","","Load the value associated with the given key from the …","","Load the value associated with the given key from the map.","Load the value associated with the given key from the map.","","Load the value from the provided storage instance.","","","Get the storage key.","Get the storage key used to fetch a value corresponding to …","Get the storage key used to fetch a value corresponding to …","","Get the storage key used to fetch a value corresponding to …","","Get the storage key used to fetch a value corresponding to …","","Get the storage key used to fetch a value corresponding to …","","","","","","","","","","","Initialize the counter with the actual number of items in …","Initialize the counter with the actual number of items in …","Store a value to be associated with the given key from the …","Store a value to be associated with the given keys from …","","Store a value to be associated with the given keys from …","Store a value to be associated with the given key from the …","","","Store a value to be associated with the given keys from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Enumerate all elements in the map in no particular order.","Enumerate all elements in the map in no particular order.","Enumerate all elements in the map in no particular order.","Enumerate all elements in the map in no particular order.","Enumerate all elements in the map in no particular order.","","Enumerate all elements in the counted map after a …","Enumerate all elements in the map after a specified …","Enumerate all elements in the map after a specified …","Enumerate all elements in the map after a specified …","Enumerate all elements in the map after a specified …","","Enumerate all elements in the map after a specified …","Enumerate all suffix keys in the map with prefix key <code>kp</code> in …","Enumerate all second keys <code>k2</code> in the map with the same …","","Enumerate all suffix keys in the map with prefix key <code>kp</code> in …","Enumerate all suffix keys in the map with prefix key <code>kp</code> …","Enumerate all second keys <code>k2</code> in the map with the same …","","Enumerate all suffix keys in the map with prefix key <code>kp</code> …","Enumerate all keys in the counted map.","Enumerate all keys in the map in no particular order.","Enumerate all keys <code>k1</code> and <code>k2</code> in the map in no particular …","Enumerate all keys in the map in no particular order.","Enumerate all keys in the map in no particular order.","","Enumerate all keys in the map after a specified …","Enumerate all keys <code>k1</code> and <code>k2</code> in the map after a specified …","Enumerate all keys in the map after a specified …","Enumerate all keys in the map after a specified …","","Enumerate all keys in the map after a specified …","Enumerate all elements in the map with prefix key <code>kp</code> in no …","Enumerate all elements in the map with first key <code>k1</code> in no …","Enumerate all elements in the map with prefix key <code>kp</code> in no …","","Enumerate all elements in the map with prefix key <code>kp</code> after …","Enumerate all elements in the map with first key <code>k1</code> after …","","Enumerate all elements in the map with prefix key <code>kp</code> after …","Iterate over values that share the first key.","","Iterate over values that share the first key.","Iterate over values that share the first key.","","Iter over all value of the storage.","Iter over all value of the storage.","Iter over all value of the storage.","Iter over all value of the storage.","Iter over all value of the storage.","","","","Clear the storage value.","The prefix used to generate the key of the map.","The prefix used to generate the key of the map.","Given a <code>key</code> tuple, migrate the keys from using the old …","Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code>…","","Migrate an item with the given <code>key</code> from a defunct <code>OldHasher</code>…","","Migrate an item with the given <code>key</code> from defunct <code>hash_fns</code> …","","Migrate an item with the given <code>key1</code> and <code>key2</code> from defunct …","Migrate an item with the given <code>key</code> from defunct <code>hash_fns</code> …","","Mutate the value under a key.","Mutate the value under the given keys.","","Mutate the value under the given keys.","Mutate the value under a key.","","Mutate the value under the given keys.","","Mutate the value","","Mutate the value under a key. Deletes the item if mutated …","Mutate the value under the given keys. Deletes the item if …","","Mutate the value under the given keys. Deletes the item if …","Mutate the value under a key. Deletes the item if mutated …","","Mutate the value under the given keys. Deletes the item if …","","Mutate the value. Deletes the item if mutated to a <code>None</code>.","","Mutate the value under a key iff it exists. Do nothing and …","Mutate the value under a key iff it exists. Do nothing and …","","","","","","","","","","","","Store a value under this key into the provided storage …","Remove the value under a key.","Remove the value under the given keys.","","Remove the value under the given keys.","","Remove the value under a key.","","Remove the value under the given keys.","Remove all values in the map.","Remove all values in the overlay and up to <code>limit</code> in the …","Remove all values of the storage in the overlay and up to …","Remove all values in the overlay and up to <code>limit</code> in the …","","Remove all values under <code>k1</code> in the overlay and up to <code>limit</code> …","Remove all values starting with <code>partial_key</code> in the overlay …","","Store or remove the value to be associated with <code>key</code> so …","Store or remove the value to be associated with <code>key</code> so …","","Store or remove the value to be associated with <code>key</code> so …","","Store or remove the value to be associated with <code>key</code> so …","","Store or remove the value to be associated with <code>key</code> so …","","Store a value under this key into the provided storage …","","","","","","","","","","","Swap the values of two keys.","Swap the values of two key-pairs.","Swap the values of two key-pairs.","","","Swap the values of two keys.","Swap the values of two key-pairs.","","Take the value under a key.","Take a value from storage, removing it afterwards.","","Take a value from storage, removing it afterwards.","","Take the value under a key.","","Take a value from storage, removing it afterwards.","Take a value from storage, removing it afterwards.","","","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","","Translate a value from some previous type (<code>O</code>) to the …","","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Translate the values of all elements by a function <code>f</code>, in …","Try and append the given item to the value in the storage.","","Try and append the given item to the value in the storage.","","Try and append the given item to the value in the storage.","","Try and append the given item to the value in the storage.","","","","","","","","","","","Try to get the value for the given key from the map.","Try to get the value for the given key from the map.","","Try to get the value for the given key from the double map.","","Try to get the value for the given key from the map.","Try to get the value for the given key from the map.","","","Try to get the underlying value from the provided storage …","","","","","","","","","","","Mutate the item, only if an <code>Ok</code> value is returned.","Mutate the value under the given keys when the closure …","Mutate the value under the given keys when the closure …","","Mutate the item, only if an <code>Ok</code> value is returned.","","Mutate the value under the given keys when the closure …","","Mutate the value if closure returns <code>Ok</code>","","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","","Mutate the item, only if an <code>Ok</code> value is returned. Deletes …","","Mutate the value if closure returns <code>Ok</code>. Deletes the item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Partially clear the storage of all keys under a common …","Returns <code>true</code> if the storage contains any key, which starts …","Check to see if <code>key</code> has an explicit entry in storage.","Return the value of the item in storage under <code>key</code>, or <code>None</code> …","Return the value of the item in storage under <code>key</code>, or …","Return the value of the item in storage under <code>key</code>, or the …","Return the value of the item in storage under <code>key</code>, or …","Get a Vec of bytes from storage.","Ensure <code>key</code> has no explicit entry in storage.","Ensure keys with the given <code>prefix</code> have no entries in …","Put <code>value</code> in storage under <code>key</code>.","Put a raw byte slice into storage.","Remove <code>key</code> from storage, returning its value if it had an …","Return the value of the item in storage under <code>key</code>, or …","Remove <code>key</code> from storage, returning its value, or, if there …","Return the value of the item in storage under <code>key</code>, or …","A weakly bounded vector.","A trait for querying a single value from a type.","Copied from <code>sp-runtime</code> and documented there.","Assert an expression returns an error specified.","Assert an expression returns an error specified.","Assert an expression returns error with the given weight.","Assert that the maximum encoding size does not exceed the …","Evaluate an expression, assert it returns an expected <code>Err</code> …","Panic if an expression doesn’t evaluate to <code>Ok</code>.","Evaluate any expression and assert that runtime storage …","Traits, types and structs to support a bounded BTreeMap.","Build a bounded btree-map from the given literals.","Traits, types and structs to support putting a bounded …","Build a bounded vec from the given literals.","Return the current value.","Create new implementations of the <code>Get</code> trait.","A bounded map based on a B-Tree.","A bounded slice.","A bounded vector.","Create an object through truncation.","Create an object through truncation.","","The AccountId used across the system.","Trait for creating an asset account with a deposit taken …","","","Safe mode is already entered.","Safe mode is already exited.","Call is already paused.","The message was already processed.","Call is already unpaused.","Adapter struct for turning an <code>OrderedMembership</code> impl into …","","Some amount of backing from a group. The precise …","The message data format is unknown (e.g. unrecognised …","The type for currency units of the deposit.","","Implemented by pallets, allows defining logic to run prior …","Block number type.","","","A trait to define the build function of a genesis config …","Runtime call type, as in <code>frame_system::Config::Call</code>","How to unambiguously identify a call.","The function and pallet name of the Call.","The trait implemented by the overarching enumeration of …","Trait for type that can handle incremental changes to a …","","","Guard type for clearing all pushed constraints from a …","","Some sort of cost taken from account temporarily in order …","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","A trait for querying whether a type can be said to “…","A trait for querying bound for the length of an …","A trait for querying whether a type can be said to “…","The message data is bad (e.g. decoding returns an error).","The version of a crate.","","This will be filled out by the <code>pallet</code> macro.","A trait to handle errors and options when you are really …","Defensively calculates the maximum of two values.","Defensively calculates the minimum of two values.","Subset of methods similar to <code>Defensive</code> that can only work …","Subset of methods similar to <code>Defensive</code> that can only work …","A variant of <code>Defensive</code> with the same rationale, for the …","Construct an object by defensively truncating an input if …","","Trait used to check whether a given validator is currently …","“OR gate” implementation of <code>EnsureOrigin</code>, <code>Success</code> type …","“OR gate” implementation of <code>EnsureOrigin</code> allowing for …","Can enqueue messages for multiple origins.","Adapter type to transform an <code>EnqueueMessage</code> with an origin …","A trait to ensure the inherent are before non-inherent in …","“OR gate” implementation of <code>EnsureOrigin</code> allowing for …","Some sort of check on the origin is performed by this …","<code>EnsureOrigin</code> implementation that checks that an origin has …","Some sort of check on the origin is performed by this …","Implementation of <code>PrivilegeCmp</code> that only checks for equal …","An implementation of <code>Contains</code> which contains only equal …","Contains the error value","The error type that gets returned when a collection can’…","Something that can estimate the fee of a (frame-based) …","Something that can estimate at which block scheduling of …","Something that can estimate at which block the next …","A <code>Contains</code> implementation that contains every value.","A <code>Contains</code> implementation that contains everything except …","Something that can execute a given block.","Errors that can happen when attempting to execute an …","","An extrinsic on which we can get access to call.","","","Trait to add a constraint onto the filter.","Guard type for pushing a constraint to a <code>FilterStack</code> and …","A trait for finding the author of a block header based on …","The resource footprint of a bunch of blobs. We assume only …","Converter <code>struct</code> to use a <code>ContainsPair</code> implementation for …","A trait to define the build function of a genesis config, …","A trait for querying a single value from a type.","Retrieve the backing from an object’s ref.","Gets the function index of the Call.","Gets the metadata for the Call - function name and pallet …","Gets the function name of the Call.","Implement Get by returning Default for any type that …","Provides information about the storage version of a pallet.","The hasher used in the runtime.","A simple, generic one-parameter event notifier/handler.","Handles incoming messages for a single origin.","The pallet hooks trait. This is merely an umbrella trait …","Unique numerical identifier for an instance.","Full identification of <code>ValidatorId</code>.","A type for converting <code>ValidatorId</code> to <code>Identification</code>.","The full identification of a key owner and the stash …","","A trait representing an incrementable type.","","Trait for type that can handle the initialization of …","A an bounded <code>Call</code>. Its encoding must be at most 128 bytes.","A <code>Contains</code> implementation which contains all members of …","An instance of a pallet in the storage.","Simple trait for providing a filter over a reference to …","The available weight was insufficient to execute the …","See <code>Hooks::integrity_test</code>.","Trivial utility for implementing <code>Contains</code>/<code>OrderedMembership</code>…","Something that can be checked to be a of sub type <code>T</code>.","Trait to be used when types are exactly same.","The key type expected.","Something which can compute and check proofs of a …","Trait to be used by block producing consensus engine …","A hash with no preimage length. We do not support creation …","Anything that can have a <code>::len()</code> method.","A storage price that increases linearly with the number of …","","","","A hash of the call together with an upper limit for its …","The maximum encoded size for the implementing type.","The maximum length of preimage we can store.","A derivative <code>EnsureOrigin</code> implementation. It mutates the …","The maximal length any enqueued message may have.","The maximal length any enqueued message may have.","Maximum size of a preimage.","","","","<code>EnsureOrigin</code> implementation that always fails.","Special marker struct if no storage version is set for a …","No item.","","Services queues by doing nothing.","The call could not be found in the runtime.","The referenced message was not found.","A <code>Contains</code> implementation that contains no value.","Off-chain computation trait.","Contains the success value","See <code>Hooks::on_finalize</code>.","A trait that will be called at genesis.","See <code>Hooks::on_idle</code>.","See <code>Hooks::on_initialize</code>.","The account with the given id was reaped.","Handler for when a new account has been created.","See <code>Hooks::on_runtime_upgrade</code>.","A trait which is called when the timestamp is set in the …","","A session handler for specific key type.","","The transport from where a message originates.","Methods available on <code>frame_system::Config::RuntimeOrigin</code>.","An item of the opposite type to the <code>Self</code> on which the …","An unspecified error.","Message processing was not attempted because it was not …","Addresses a specific overweight message.","Unique module prefix. E.g. “InstanceNMyModule” or “…","Trait indicating that the implementing type is going to be …","Provides information about the pallet itself and its setup …","Provides information about the pallet itself and its setup …","Information regarding an instance of a pallet.","Provide information about a bunch of pallets.","The caller origin, overarching type of all pallets origins.","Similar to <code>StorageInfoTrait</code>, a trait to give partial …","","","A interface for looking up preimages from their hash on …","A interface for managing preimages to hashes on chain.","Something that can compare privileges of two origins.","Can process messages from a specific origin.","Errors that can happen when attempting to process a …","The proof of membership itself.","A interface for looking up preimages from their hash on …","The resource footprint of a queue.","The queue is paused and no message can be executed from it.","Provides information on paused queues.","A trait that is able to provide randomness.","","Ranked membership data structure.","","The origin type of the runtime, (i.e. …","Prefix given to a storage to isolate from other storages …","The storage key postfix that is used to store the …","Can put the runtime into a safe mode.","The error type for <code>SafeMode</code>.","A trait to notify when the runtime enters or exits safe …","An item of the same type as the <code>Self</code> on which the return …","Return type used when we need to return one of two items, …","Can service queues and execute overweight messages.","","A trait for a set which can enumerate its members in order.","The type used to archive the stack.","Metadata about storage from the runtime.","A trait to give information about storage.","An instance of a storage in a pallet.","A shim for placing around a storage item in order to use …","The storage version of a pallet.","A interface for managing preimages to hashes on chain.","An abstraction of a value stored within storage, but …","A return type.","A return type.","A <code>Contains</code> implementation that contains all members of …","","","Storage key with read/write tracking information.","Can pause specific transactions from being processed.","The error type for <code>TransactionPause</code>.","Transform the origin of an <code>EnqueueMessage</code> via <code>C::convert</code>.","Try and collect into a collection <code>C</code>.","A type for which some values make sense to be able to drop …","A derivative <code>EnsureOrigin</code> implementation. It mutates the …","","The type which is returned.","A trait for querying a single value from a type defined in …","Type that can be dispatched with an origin but without …","Trait to deal with unix time.","Unknown error.","Unknown error.","Call cannot be paused.","The message format is unsupported (e.g. old XCM version).","Get the number of variants.","Type for representing validator id in a session.","A type for converting <code>AccountId</code> to <code>ValidatorId</code>.","Implementors of this trait provide information about …","A trait for online node inspection in a session.","<code>ValidatorSet</code> combined with an identification.","Trait to get the number of variants in any enum.","A trait for verifying the seal of a header and returning …","","","","Allows a pallet to specify storage keys to whitelist …","","A wrapper for any type <code>T</code> which implement encode/decode in …","A wrapper for any type <code>T</code> which implement encode/decode in …","The queue wants to give up its current processing slot.","","","","","","","","","","","","","","","","","","","","","","","","","Add a filter to the origin.","Add a storage read to this key.","Add a storage write to this key.","","The number of members of the group that back some motion.","<code>Some</code> if the referendum <code>index</code> can be voted on, along with …","Extract the signer from it if a system <code>Signed</code> origin, <code>None</code> …","Extract the signer from it if a system <code>Signed</code> origin, <code>None</code> …","Extract the signer from the message if it is a <code>Signed</code> …","Extract the signer from the message if it is a <code>Signed</code> …","Extract a reference to the system-level <code>RawOrigin</code> if it is …","Extract a reference to the sytsem origin, if that’s what …","Extract a reference to the sytsem origin, if that’s what …","Assimilate the storage for this module into pre-existing …","Assimilate the storage for this module into pre-existing …","Return the average length of a session.","Return the average length of a session.","","Something that should happen before runtime migrations are …","Something that should happen before runtime migrations are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert an otherwise unbounded or large value into a type …","Convert an otherwise unbounded or large value into a type …","The build function puts initial <code>GenesisConfig</code> keys/values …","The build function is called within an externalities …","Build the storage using <code>build</code> inside default storage.","Build the storage using <code>build</code> inside default storage.","Consume a ticket for some <code>old</code> footprint attributable to <code>who</code>…","Consume a ticket for some <code>old</code> footprint attributable to <code>who</code>…","Get the call of the extrinsic.","Get a reference to the caller (<code>CallerTrait</code> impl).","Whether this call can be paused.","A number of members <code>incoming</code> just joined the set and …","A number of members <code>incoming</code> just joined the set and …","A number of members <code>_incoming</code> just joined the set and …","Check a proof of membership on-chain. Return <code>Some</code> iff the …","Provides a vec of values that <code>T</code> may take.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare the <code>left</code> to the <code>right</code> origin.","","Compute diff between new and old members; they <strong>must </strong>…","Compute diff between new and old members; they <strong>must </strong>…","Return <code>true</code> if this “contains” the given value <code>t</code>.","Return <code>true</code> if this “contains” the pair-value <code>(a, b)</code>.","","","","","","","","","","","","","Return <code>true</code> if this “contains” the given value <code>t</code>.","Return <code>true</code> if this “contains” the given value <code>t</code>.","","","","Get the number of items in the set.","Get the number of items in the set.","The number of pallets’ information that this type …","The number of pallets’ information that this type …","The number of blobs.","Convert the given pallet <code>P</code> into its containing crate …","Version of the crate containing the pallet.","Version of the crate containing the pallet.","An account was created.","An account was created.","Returns the current storage version as supported by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does not alter the inner value at all, but it will log …","Exactly the same as <code>map</code>, but it prints the appropriate …","Exactly the same as <code>map</code>, but it prints the appropriate …","Defensively map the error into another return type, but …","Defensively map and unpack the value to something else (<code>U</code>…","Potentially map and unpack the value to something else (<code>U</code>…","Returns the maximum and defensively asserts that <code>other</code> is …","","","","","Returns the minimum and defensively checks that <code>self</code> is …","","","","","Defensively transform this result into an option, …","Defensively transform this option to a result, mapping <code>None</code>…","Defensively transform this option to a result, mapping <code>None</code>…","Prelude module for all defensive traits to be imported at …","Same as <code>Defensive::defensive</code>, but it takes a proof as …","Increase <code>self</code> by <code>other</code> defensively.","Return <code>self</code> plus <code>other</code> defensively.","Decrement <code>self</code> by one defensively.","Increment <code>self</code> by one defensively.","Return the product of <code>self</code> and <code>other</code> defensively.","Reduce <code>self</code> by <code>other</code> defensively.","Return <code>self</code> minus <code>other</code> defensively.","Returns the maximum and defensively asserts that <code>other</code> is …","","","","","Returns the minimum and defensively checks that <code>self</code> is …","","","","","Use <code>TryFrom</code> first and defensively fall back to truncating …","Exactly the same as <code>unwrap_or</code>, but it does the defensive …","Exactly the same as <code>unwrap_or_default</code>, but it does the …","Exactly the same as <code>unwrap_or_else</code>, but it does the …","Demote a member to the next lower rank; demoting beyond …","The deposit amount of a native currency required for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dispatch this call but do not check the filter in origin.","Consume a ticket for some <code>old</code> footprint attributable to <code>who</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No longer request that the data required for decoding the …","No longer request that the data required for decoding the …","","","","","","","","","","","","","","","","","","","The total count of group members.","","","","","","","","","","","","Returns the encoded data.","Returns the length of the encoded <code>T</code>.","Enqueue a single <code>message</code> from a specific <code>origin</code>.","","Enqueue multiple <code>messages</code> from a specific <code>origin</code>.","","Ensure the position of inherent is correct, i.e. they are …","","Perform the origin check.","Perform the origin check.","Perform the origin check.","Perform the origin check.","Perform the origin check.","The same as <code>ensure_origin</code> except that Root origin will …","The same as <code>ensure_origin</code> except that Root origin will …","Enter safe mode for <code>duration</code> blocks.","Called when the runtime enters safe mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Estimate the fee of this call.","Return an estimate of the current session progress.","Return the block number at which the next new session is …","Return the block number at which the next session rotation …","Execute the given <code>block</code>.","Executes a message that could not be executed by …","Executes a message that could not be executed by …","Returns if the storage version key for the given pallet …","Exit safe mode immediately.","Called when the runtime exits safe mode.","Extend safe mode for <code>duration</code> blocks.","Returns the preimage for a given hash. If given, <code>len</code> must …","","Determine if a given value should be allowed through the …","","","","","","","","","","Filter the call if caller is not root, if false is …","Find the author of a block based on the pre-runtime …","","","","","","","","","","","","","","","","","","","","","","","","","Return the state footprint of the given queue.","Return the state footprint of the queue.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create from the given encoded <code>data</code>.","","","","","","Constructs a <code>Legacy</code> bounded item.","Cast mutable reference.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Cast reference.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Name of the function.","","","Return the current value.","Return the current value.","Get the item, or its default if it doesn’t yet exist; we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the storage version of the given pallet from the …","Returns <code>Some</code> <code>Backing</code> if <code>self</code> represents a …","Return the index of this Call.","Return all call indices in the same order as <code>GetCallName</code>.","Return a <code>CallMetadata</code>, containing function and pallet name …","Return the function name of the Call.","Return all function names in the same order as <code>GetCallIndex</code>…","Return all function names for the given <code>module</code>.","","Return all module names.","Returns the preimage for a given hash.","Get the current prime.","Get the current prime.","Enqueue a single <code>message</code> with an implied origin.","","Enqueue multiple <code>messages</code> from an implied origin.","","Check if this key has been “read”, i.e. it exists in …","Check if this key has been “written”, i.e. a new value …","","Returns the hash of the preimage.","Check to see if all data required for the given <code>bounded</code> …","Check to see if all data required for the given <code>bounded</code> …","Returns whether a preimage exists for a given hash.","Request that the data required for decoding the given …","Request that the data required for decoding the given …","","","","","","","","","Increments the value.","Convert the given pallet <code>P</code> into its index as configured in …","Index of the pallet as configured in the runtime.","Index of the pallet as configured in the runtime.","Add a member to the group at the <code>min_rank()</code>.","All of the pallets’ information that this type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the initial value.","Initialize the members to the given <code>members</code>.","Set the item to something new.","Set the item to something new.","","See <code>Hooks::integrity_test</code>.","See <code>Hooks::integrity_test</code>.","Check the integrity of this pallet’s configuration.","Check the integrity of this pallet’s configuration.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume <code>self</code> and return the caller.","","Cast mutable reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract the signer from the message if it is a <code>Signed</code> …","Extract the signer from the message if it is a <code>Signed</code> …","Extract the signer from the message if it is a <code>Signed</code> …","","","","","","","","Returns true if the given validator is disabled.","Whether safe mode is entered.","Whether safe mode is entered.","Returns <code>true</code> if <code>self</code> is a system <code>None</code> origin, <code>None</code> …","Returns <code>true</code> if <code>self</code> is a system <code>None</code> origin, <code>None</code> …","Whether this queue is paused.","Whether this call is paused.","Returns true if the provided validator ID has been …","Returns whether a preimage request exists for a given hash.","Returns <code>true</code> if <code>self</code> is a system <code>Root</code> origin, <code>None</code> …","Returns <code>true</code> if <code>self</code> is a system <code>Root</code> origin, <code>None</code> …","Returns <code>Some(_)</code> if <code>self</code> is an instance of sub type <code>T</code>.","Determines whether <code>self</code> matches at least everything that <code>_o</code>…","Determines whether <code>self</code> matches at least everything that <code>_o</code>…","","An account was killed.","An account was killed.","Returns a generic measure of how late the current block is …","Return the length of data type.","Returns whether a preimage exists for a given hash and if …","Returns the length of the preimage or <code>None</code> if the length …","Returns the hash to lookup the preimage.","The maximum length of the lookup that is needed to peek …","Returns whether the image will require a lookup to be …","The major version of the crate.","","","","Maximum number of elements contained","The maximum size of key/values in the storage, or none if …","The maximum number of values in the storage, or none if no …","Minimum number of elements contained","The lowest rank possible in this membership organisation.","The minor version of the crate.","Convert the given pallet <code>P</code> into its Rust module name as …","Name of the Rust module containing the pallet.","Name of the Rust module containing the pallet.","Mutate the item.","Mutate the item.","","Mutate the item, removing or resetting to default value if …","Mutate the item, removing or resetting to default value if …","","Convert the given pallet <code>P</code> into its name as configured in …","Name of the pallet as configured in the runtime.","Name of the pallet as configured in the runtime.","The two128 hash of name.","Two128 hash of name.","Create a ticket for the <code>new</code> footprint attributable to <code>who</code>. …","","Create a default <code>TrackedStorageKey</code>","Create a new instance, adding a new <code>constraint</code> onto the …","Create a new instance, adding a new <code>constraint</code> onto the …","","Creates a new instance of <code>Self</code>.","Create with system none origin and …","","","","","Request and attempt to store the bytes of a preimage on …","Store the bytes of a preimage on chain infallible due to …","","Return duration since <code>SystemTime::UNIX_EPOCH</code>.","This function is being called after every block import …","This function is being called after every block import …","Implementing this function on a pallet allows you to …","Implementing this function on a pallet allows you to …","A notification for end of the session.","A notification for end of the session.","Returns the on-chain storage version of the pallet as …","A validator got disabled. Act accordingly until a new …","See <code>Hooks::on_finalize</code>.","See <code>Hooks::on_finalize</code>.","Block finalization hook. This is called at the very end of …","Block finalization hook. This is called at the very end of …","Something that should happen at genesis.","Something that should happen at genesis.","The given validator set will be used for the genesis …","See <code>Hooks::on_idle</code>.","See <code>Hooks::on_idle</code>.","Hook to consume a block’s idle time. This will run when …","Hook to consume a block’s idle time. This will run when …","See <code>Hooks::on_initialize</code>.","See <code>Hooks::on_initialize</code>.","Block initialization hook. This is called at the very …","Block initialization hook. This is called at the very …","The account with the given id was reaped.","A new account <code>who</code> has been registered.","Session set has changed; act appropriately. Note that this …","See <code>Hooks::on_runtime_upgrade</code>.","See <code>Hooks::on_runtime_upgrade</code>.","Hook executed when a code change (aka. a “runtime upgrade…","Hook executed when a code change (aka. a “runtime upgrade…","Called when the timestamp is set.","","The number of pages in the queue (including overweight …","Name of the pallet to which the function belongs.","Encoded string of pallet name.","Prefix of a pallet to isolate it from other pallets.","Return the prefix hash of pallet instance.","Return the prefix hash of pallet instance.","","","","","","","The patch version of the crate.","Pause this call immediately.","Convert the given <code>bounded</code> instance back into its original …","Convert the given <code>bounded</code> instance back into its original …","Create a <code>Bounded</code> instance based on the <code>hash</code> and <code>len</code> of the …","Create a <code>Bounded</code> instance based on the <code>hash</code> and <code>len</code> of the …","Removes the most recently pushed, and not-yet-popped, …","The prefix of the storage. All keys after the prefix are …","Return the prefix hash of instance.","Return the prefix hash of instance.","Returns whether a preimage request exists for a given hash.","Process the given message, using no more than the …","Promote a member to the next higher rank.","Prove membership of a key owner in the current block-state.","Add a new <code>constraint</code> onto the filter.","Put this storage version for the given pallet into the …","Get the most recently determined random seed, along with …","Get the basic random seed.","Get the basic random seed.","Return the rank of the given ID, or <code>None</code> if they are not a …","","Convert the given <code>bounded</code> value back into its original …","Convert the given <code>bounded</code> value back into its original …","How many more blocks safe mode will stay entered.","Remove the item or otherwise replace it with its default …","Remove the item or otherwise replace it with its default …","","Request that someone report a preimage. Providers use this …","Request that someone report a preimage. Providers use this …","Reset origin filters to default one, i.e …","Restore the filter from a previous <code>take</code> operation.","Create with system root origin and …","","Traits and associated utilities for scheduling …","","Service all message queues in some fair manner.","","Returns current session index.","Replace the caller with caller from the other origin","Set the new members; they <strong>must already be sorted</strong>. This …","Set the new members; they <strong>must already be sorted</strong>. This …","Set the prime member.","Set the prime member.","Create with system signed origin and …","The total size of the blobs in bytes.","","","","","","","","","","","Get a vector of all members in the set, ordered.","","The storage footprint of the queue (including overweight …","","Returns the storage key for a storage version.","Encoded string of storage name.","Return the prefix hash of storage instance.","Return the prefix hash of storage instance.","","","","Any remaining unprocessed messages should happen only …","Any remaining unprocessed messages should happen only …","","","Clear the filter, returning a value that may be used later …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits for working with tokens and their associated …","Create an account for <code>who</code> of the <code>asset</code> with a deposit …","Casts the wrapped type into something that encodes alike.","","Consume self and try to collect the results into <code>C</code>.","Try to decode the wrapped type from the inner <code>data</code>.","Drop an instance cleanly. Only works if its value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maybe mutate the item only if an <code>Ok</code> value is returned from …","","Returns <code>Ok</code> if <code>self</code> is <code>None</code>, otherwise returns <code>Err</code> with <code>self</code>…","Perform the origin check.","Perform the origin check, returning the origin value if …","","","","Perform the origin check, returning the origin value if …","","","","","","","","","","The same as <code>try_origin</code> except that Root origin will always …","The same as <code>try_origin</code> except that Root origin will always …","Returns <code>Ok</code> with the inner value of <code>Other</code> if <code>self</code> is that, …","Returns <code>Ok</code> with the inner value of <code>Same</code> if <code>self</code> is that, …","Do something with the caller, consuming self but returning …ttempt to clear a previously noted preimage. Exactly the …","Attempt to clear a previously noted preimage. Exactly the …","Clear a previously noted preimage. This is infallible and …","Unpause this call immediately.","Cancel a previous preimage request.","Cancel a previous preimage request.","Constructs a <code>Lookup</code> bounded item.","Optionally consume an old ticket and alter the footprint, …","","","","Returns the active set of validators.","Verify a header and return the author, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whitelist this key.","","Returns a <code>Vec&lt;TrackedStorageKey&gt;</code> indicating the storage …","","","","","","A trait to handle errors and options when you are really …","Subset of methods similar to <code>Defensive</code> that can only work …","Subset of methods similar to <code>Defensive</code> that can only work …","Does not alter the inner value at all, but it will log …","Exactly the same as <code>map</code>, but it prints the appropriate …","Exactly the same as <code>map</code>, but it prints the appropriate …","Defensively map the error into another return type, but …","Defensively map and unpack the value to something else (<code>U</code>…","Potentially map and unpack the value to something else (<code>U</code>…","Defensively transform this result into an option, …","Defensively transform this option to a result, mapping <code>None</code>…","Defensively transform this option to a result, mapping <code>None</code>…","Same as <code>Defensive::defensive</code>, but it takes a proof as …","Exactly the same as <code>unwrap_or</code>, but it does the defensive …","Exactly the same as <code>unwrap_or_default</code>, but it does the …","Exactly the same as <code>unwrap_or_else</code>, but it does the …","After specified number of blocks.","At specified block.","The preimage for this hash was known but could not be …","The dispatch time of a scheduled task.","Anything of this value or lower will definitely be …","The highest priority. We invert the value so that normal …","The hash of the encoded value which this value represents.","The lowest priority. Most stuff should be around here.","Error type for <code>MaybeHashed::lookup</code>.","Type representing an encodable value or the hash of the …","Information relating to the period of a scheduled task. …","Priority with which a call is scheduled. It’s just a …","A call of this hash was not known.","The value itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","A type that can be used as a scheduler.","A type that can be used as a scheduler.","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","A type that can be used as a scheduler.","A means of expressing a call by the hash of its encoded …","A means of expressing a call by the hash of its encoded …","A type that can be used as a scheduler.","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","An address which can be used for removing a scheduled task.","An address which can be used for removing a scheduled task.","A type that can be used as a scheduler.","The hasher used in the runtime.","The hasher used in the runtime.","A type that can be used as a scheduler.","","Cancel a scheduled task. If periodic, then it will cancel …","Cancel a scheduled, named task. If periodic, then it will …","Return the next dispatch time for a given task.","Return the next dispatch time for a given task.","Reschedule a task. For one-off tasks, this dispatch is …","Reschedule a task. For one-off tasks, this dispatch is …","Schedule a dispatch to happen at the beginning of some …","Schedule a dispatch to happen at the beginning of some …","Operation may result in account going out of existence.","Simple amalgamation trait to collect together properties …","Simple amalgamation trait to collect together properties …","Withdraw could not happen since the amount to be withdrawn …","Status of funds.","Deposit couldn’t happen due to the amount being too low. …","The operation may be considered successful even if less …","Account cannot receive the assets.","Deposit cannot happen since the account cannot be created …","Converts an asset balance value into balance.","Converts a balance value into an asset balance.","Adapter for a rank-to-salary <code>Convert</code> implementation into a …","One of a number of consequences of withdrawing a fungible …","","","The operation should must either proceed either exactly …","Simple boolean for whether an account needs to be kept in …","We don’t care if the account gets killed by this …","The funds already exist in the system, therefore will not …","In order to pay some other (higher-level) fees.","The operation should be forced to succeed if possible. …","The privilege with which a withdraw operation is conducted.","Funds are under the normal conditions.","Funds are free, as corresponding to <code>free</code> item in Balances.","Not enough of the funds in the account are unavailable for …","Retrieve the salary for a member of a particular rank.","","Operation must not result in the account going out of …","Trait to handle NFT locking mechanism to ensure …","The funds will be minted into the system, increasing total …","Funds are on hold.","There has been an overflow in the system. This is …","An overflow would occur. This is practically unexpected, …","","","","The operation should execute with regular privilege.","The precision required of an operation generally involving …","The mode by which we describe whether an operation should …","The account may not be killed and our provider reference …","The account may not be killed, but we don’t care if the …","The origin of funds to be used for a deposit operation.","In order to reserve some funds for a later return or …","Account balance would reduce to zero, potentially …","Funds are reserved, as corresponding to <code>reserved</code> item in …","The mode under which usage of funds may be restricted.","Account continued in existence.","Account continued in existence.","In order to tip a validator for transaction inclusion.","In order to pay for (system) transaction costs.","In order to transfer ownership.","There has been an underflow in the system. This is …","Implements <code>ConversionFromAssetBalance</code>, enabling a 1:1 …","The asset is unknown. Usually because an <code>AssetId</code> has been …","The asset is unknown. Usually because an <code>AssetId</code> has been …","One of a number of consequences of withdrawing a fungible …","Reasons for moving funds out of an account.","The withdraw would mean the account dying when it needs to …","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The Currency trait and associated types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Choose all variants except for <code>one</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","The traits for dealing with a single fungible token class …","The traits for sets of fungible tokens and any associated …","","Retrieve the salary for a given rank. The account ID is …","","","","","The imbalance trait type and its associates, which handles …","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Convert the type into a <code>Result</code> with <code>DispatchError</code> as the …","Convert the type into a <code>Result</code> with <code>TokenError</code> as the …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Check if the asset should be locked and prevent …","","","Traits for dealing with a single non-fungible collection …","Traits for dealing with a single non-fungible item.","Traits for dealing with multiple collections of …","Traits for dealing with multiple collections of …","Returns the complement of this set of flags.","","The Pay trait and associated types.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","A non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …","The balance of an account.","Abstraction over a fungible assets system.","The currency that this schedule applies to.","An identifier for a lock. Used for disambiguating …","A currency whose accounts can have liquidity restrictions.","The maximum number of locks a user should have on their …","The quantity used to denote time; usually just a …","The quantity used to denote time; usually just a …","","The opaque token type for an imbalance. This is returned …","The opaque token type for an imbalance. This is returned …","A currency where funds can be reserved from the user.","An identifier for a reserve. Used for disambiguating …","A non-const <code>Get</code> implementation parameterised by a <code>Currency</code> …","A vesting schedule over a currency. This allows a …","The total amount of issuance in the system excluding those …","Adds a vesting schedule to a given account.","","","","","Reduce the total issuance by <code>amount</code> and return the …","Checks if <code>add_vesting_schedule</code> would work against <code>who</code>.","Same result as <code>reserve(who, value)</code> (but without the …","Same result as <code>slash(who, value)</code> (but without the …","Reduce the active issuance by some amount.","Adds up to <code>value</code> to the free balance of <code>who</code>. If <code>who</code> doesn…","Mints <code>value</code> to the free balance of <code>who</code>.","","","","","","","Returns <code>Ok</code> iff the account is able to make a withdrawal of …","Ensure the reserved balance is equal to <code>value</code>.","Ensure the reserved balance is equal to <code>value</code>.","Changes a balance lock (selected by <code>id</code>) so that it becomes …","The ‘free’ balance of a given account.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Increase the total issuance by <code>amount</code> and return the …","Ensure an account’s free balance equals some value; this …","The minimum balance any single account may have. This is …","Produce a pair of imbalances that cancel each other out …","Increase the active issuance by some amount, up to the …","Remove an existing lock.","Remove a vesting schedule for a given account.","Move all the named reserved balance of one account into …","Move all the named reserved balance of one account into …","Moves up to <code>value</code> from reserved balance of account <code>slashed</code> …","Moves up to <code>value</code> from reserved balance of account <code>slashed</code> …","Moves <code>value</code> from balance to reserved balance.","Moves <code>value</code> from balance to reserved balance.","The amount of the balance of a given account that is …","The amount of the balance of a given account that is …","Similar to deposit_creating, only accepts a …","Similar to deposit_creating, only accepts a …","Create a new balance lock on account <code>who</code>.","Similar to withdraw, only accepts a <code>PositiveImbalance</code> and …","Deducts up to <code>value</code> from the combined balance of <code>who</code>, …","Slash all the reserved balance, returning the negative …","Slash all the reserved balance, returning the negative …","Deducts up to <code>value</code> from reserved balance of <code>who</code>. This …","Deducts up to <code>value</code> from reserved balance of <code>who</code>. This …","The combined balance of <code>who</code>.","The total amount of issuance in the system.","Transfer some liquid free balance to another staker.","","","","","","","","","","","Moves up to <code>value</code> from reserved balance to free balance. …","Unreserve all the named reserved balances, returning …","Unreserve all the named reserved balances, returning …","Moves up to <code>value</code> from reserved balance to free balance. …","Get the amount that is currently being vested and cannot …","","","Removes some free balance from <code>who</code> account for <code>reason</code> if …","Scalar type for representing balance of an account.","A fungible token class where any creation and deletion of …","","Imbalance implying that the total_issuance value is …","Imbalance implying that the total_issuance value is less …","Simple handler for an imbalance drop which decreases the …","Special dust type which can be type-safely converted into …","Consideration method using a <code>fungible</code> balance frozen as …","Handler for when an imbalance gets dropped. This could …","Consideration method using a <code>fungible</code> balance frozen as …","An imbalance in the system, representing a divergence of …","Simple handler for an imbalance drop which increases the …","Trait for providing balance-inspection access to a …","","","Convert a <code>fungibles</code> trait implementation into a <code>fungible</code> …","Basic consideration method using a <code>fungible</code> balance frozen …","Basic consideration method using a <code>fungible</code> balance placed …","Trait for providing a basic fungible asset.","","","The type for managing what happens when an instance of …","The type for managing what happens when an instance of <code>Debt</code>…","A fungible token class where the balance can be set …","","","","","","","The total amount of issuance in the system excluding those …","The total amount of issuance in the system excluding those …","Get the balance of <code>who</code> which does not include funds which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly …","Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly …","","Returns <code>true</code> if the balance of <code>who</code> may be increased by …","","","","Returns <code>Success</code> if the balance of <code>who</code> may be decreased by …","","","","","","","","","","","","Reduce the active issuance by some amount.","Reduce the active issuance by some amount.","","","","","","","","","","","","","","","","","","Reduce the balance of <code>who</code> by <code>amount</code>.","Reduce the balance of <code>who</code> by <code>amount</code>.","","","","Mints <code>value</code> into the account of <code>who</code>, creating it as needed.","Mints <code>value</code> into the account of <code>who</code>, creating it as needed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The traits for putting freezes within a single fungible …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Some something with the imbalance’s value which is being …","","","Do something with the dust which has been destroyed from …","","Create some dust and handle it with <code>Self::handle_dust</code>. …","Create some dust and handle it with <code>Self::handle_dust</code>. …","The traits for putting holds within a single fungible …","","","","","","","","Increase the balance of <code>who</code> by <code>amount</code>.","Increase the balance of <code>who</code> by <code>amount</code>.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>Dust</code> into an instance of <code>Credit</code>.","","","","","","","","","","","","","","","","","","","","","Increase the total issuance by <code>amount</code> and return the …","Increase the total issuance by <code>amount</code> and return the …","","","","","","The minimum balance any single account may have.","","","Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new …","Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new …","","","","","","","Produce a pair of imbalances that cancel each other out …","Produce a pair of imbalances that cancel each other out …","","Increase the active issuance by some amount, up to the …","Increase the active issuance by some amount, up to the …","Get the maximum amount that <code>who</code> can withdraw/transfer …","","","","","Reduce the total issuance by <code>amount</code> and return the …","Reduce the total issuance by <code>amount</code> and return the …","","The balance of <code>who</code> is increased in order to counter <code>credit</code>…","The balance of <code>who</code> is increased in order to counter <code>credit</code>…","","Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","","Simple infallible function to force an account to have a …","Simple infallible function to force an account to have a …","","","Set the total issuance to <code>amount</code>.","","","The balance of <code>who</code> is decreased in order to counter <code>debt</code>. …","The balance of <code>who</code> is decreased in order to counter <code>debt</code>. …","","Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","","","","","","","","","","","","","","","","","Get the total amount of funds whose ultimate beneficial …","","","The total amount of issuance in the system.","","","Transfer funds from one account into another.","Transfer funds from one account into another.","","","Drop an instance cleanly. Only works if its value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes <code>value</code> balance from <code>who</code> account if possible.","Removes <code>value</code> balance from <code>who</code> account if possible.","Forcefully set the balance of <code>who</code> to <code>amount</code>.","","","","Test the <code>burn_from</code> function for successfully burning …","Test the <code>burn_from</code> function for handling insufficient …","Test the <code>burn_from</code> function for successfully burning an …","Test the can_deposit function for returning a minimum …","Test the can_deposit function for returning an overflow …","Test the can_deposit function for returning a success …","Test the can_withdraw function for returning a low balance …","Test the can_withdraw function for withdrawal resulting in …","Test the can_withdraw function for returning a success …","Test the <code>mint_into</code> function for handling balances below …","Test the <code>mint_into</code> function for overflow prevention.","Test the <code>mint_into</code> function for successful token minting.","Test the reducible_balance function with …","Test the reducible_balance function with …","Test the <code>restore</code> function for handling restoration below …","Test the <code>restore</code> function for handling balance overflow.","Test the <code>restore</code> function for successful restoration.","Test the set_balance function for successful burning.","Test the set_balance function for successful minting.","Test the <code>shelve</code> function for handling insufficient funds.","Test the <code>shelve</code> function for successful shelving.","Test the <code>transfer</code> function with <code>Preservation::Expendable</code> …","Test the transfer function with Preservation::Expendable …","Test the <code>transfer</code> function with <code>Preservation::Protect</code> and …","Test the <code>transfer</code> function for a successful transfer.","An identifier for a freeze.","Trait for inspecting a fungible asset which can be frozen. …","Trait for introducing, altering and removing locks to …","The amount of the balance which can become frozen. …","Amount of funds held in reserve by <code>who</code> for the given <code>id</code>.","Returns <code>true</code> if it’s possible to introduce a freeze for …","Decrease the amount which is being frozen for a particular …","Attempt to set the amount frozen under the given <code>id</code> to …","Prevent the balance of the account of <code>who</code> from being …","Increase the amount which is being frozen for a particular …","Prevent actions which would reduce the balance of the …","Attempt to alter the amount frozen under the given <code>id</code> to …","Remove an existing lock.","Trait for slashing a fungible asset which can be place on …","Trait for inspecting a fungible asset whose accounts …","Trait for mutating a fungible asset which can be placed on …","An identifier for a hold. Used for disambiguating …","A fungible, holdable token class where the balance on hold …","Amount of funds on hold (for the given reason) of <code>who</code>.","Attempt to decrease the balance of <code>who</code> which is held for …","Attempt to decrease the balance of <code>who</code> which is held for …","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Reduce the balance on hold of <code>who</code> by <code>amount</code>.","","","","","","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Hold some funds in an account. If a hold for <code>reason</code> is …","Returns <code>true</code> if it’s possible to place (additional) …","Increase the balance on hold of <code>who</code> by <code>amount</code>.","Get the maximum amount that the <code>total_balance_on_hold</code> of …","Release up to <code>amount</code> held funds in an account.","Release all funds in the account of <code>who</code> on hold for <code>reason</code>.","Forcefully set the balance on hold of <code>who</code> to <code>amount</code>. This …","Hold or release funds in the account of <code>who</code> to bring the …","Reduce the balance of some funds on hold in an account.","Amount of funds on hold (for all hold reasons) of <code>who</code>.","Transfer some <code>amount</code> of free balance from <code>source</code> to become …","Transfer held funds into a destination account.","Means of identifying one asset class from another.","","Scalar type for representing balance of an account.","A fungible token class where any creation and deletion of …","","Trait for providing the ability to create new fungible …","Imbalance implying that the total_issuance value is …","Imbalance implying that the total_issuance value is less …","Simple handler for an imbalance drop which decreases the …","Trait for providing the ability to destroy existing …","Special dust type which can be type-safely converted into …","Handler for when an imbalance gets dropped. This could …","An imbalance in the system, representing a divergence of …","Simple handler for an imbalance drop which increases the …","Trait for providing balance-inspection access to a set of …","Interface for enumerating assets in existence or owned by …","","","Trait for providing a basic fungible asset.","","","The type for managing what happens when an instance of …","The type for managing what happens when an instance of <code>Debt</code>…","A fungible token class where the balance can be set …","","The total amount of issuance in the system excluding those …","The total amount of issuance in the system excluding those …","Inspect and Mutate traits for Asset approvals","","Returns <code>true</code> if an <code>asset</code> exists.","Returns an iterator of the collections in existence.","Get the balance of <code>who</code> which does not include funds which …","","","","","","","","","Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly …","Decrease the balance of <code>who</code> by at least <code>amount</code>, possibly …","Returns <code>true</code> if the <code>asset</code> balance of <code>who</code> may be increased …","Returns <code>Failed</code> if the <code>asset</code> balance of <code>who</code> may not be …","Create a new fungible asset.","Reduce the active issuance by some amount.","Reduce the active issuance by some amount.","Reduce the balance of <code>who</code> by <code>amount</code>.","Reduce the balance of <code>who</code> by <code>amount</code>.","Mints <code>value</code> into the account of <code>who</code>, creating it as needed.","Mints <code>value</code> into the account of <code>who</code>, creating it as needed.","","","","","","","","","Destroy all accounts associated with a given asset. …","Destroy all approvals associated with a given asset up to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutate <code>self</code> by extracting a new instance with at most …","Complete destroying asset and unreserve currency. …","","The traits for putting freezes within a single fungible …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Do something with the dust which has been destroyed from …","Create some dust and handle it with <code>Self::handle_dust</code>. …","Create some dust and handle it with <code>Self::handle_dust</code>. …","The traits for putting holds within a single fungible …","Increase the balance of <code>who</code> by <code>amount</code>.","Increase the balance of <code>who</code> by <code>amount</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>Dust</code> into an instance of <code>Credit</code>.","","","","","","","","","Increase the total issuance by <code>amount</code> and return the …","Increase the total issuance by <code>amount</code> and return the …","","Inspect and Mutate traits for Asset metadata","The minimum balance any single account may have.","Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new …","Increase the balance of <code>who</code> by exactly <code>amount</code>, minting new …","","Produce a pair of imbalances that cancel each other out …","Produce a pair of imbalances that cancel each other out …","","Increase the active issuance by some amount, up to the …","Increase the active issuance by some amount, up to the …","Get the maximum amount that <code>who</code> can withdraw/transfer …","Reduce the total issuance by <code>amount</code> and return the …","Reduce the total issuance by <code>amount</code> and return the …","The balance of <code>who</code> is increased in order to counter <code>credit</code>…","The balance of <code>who</code> is increased in order to counter <code>credit</code>…","Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Attempt to increase the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Inspect traits for Asset roles","Simple infallible function to force an account to have a …","Simple infallible function to force an account to have a …","Set the total issuance to <code>amount</code>.","The balance of <code>who</code> is decreased in order to counter <code>debt</code>. …","The balance of <code>who</code> is decreased in order to counter <code>debt</code>. …","Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","Attempt to decrease the <code>asset</code> balance of <code>who</code> by <code>amount</code>.","","Start the destruction an existing fungible asset.","","Get the total amount of funds whose ultimate beneficial …","The total amount of issuance in the system.","Transfer funds from one account into another.","Transfer funds from one account into another.","Drop an instance cleanly. Only works if its value …","","","","","","","","","","","","","","","","","","","","","","","","","Removes <code>value</code> balance from <code>who</code> account if possible.","Removes <code>value</code> balance from <code>who</code> account if possible.","Forcefully set the balance of <code>who</code> to <code>amount</code>.","","","","","","","An identifier for a freeze.","Trait for inspecting a fungible asset which can be frozen. …","Trait for introducing, altering and removing locks to …","The amount of the balance which can become frozen. …","Amount of funds held in reserve by <code>who</code> for the given <code>id</code>.","Returns <code>true</code> if it’s possible to introduce a freeze for …","Decrease the amount which is being frozen for a particular …","Attempt to set the amount frozen under the given <code>id</code> to …","Prevent the balance of the account of <code>who</code> from being …","Increase the amount which is being frozen for a particular …","Prevent actions which would reduce the balance of the …","Attempt to alter the amount frozen under the given <code>id</code> to …","Remove an existing lock.","Trait for slashing a fungible asset which can be place on …","Trait for inspecting a fungible asset whose accounts …","Trait for mutating a fungible asset which can be placed on …","An identifier for a hold. Used for disambiguating …","A fungible, holdable token class where the balance on hold …","Amount of funds on hold (for the given reason) of <code>who</code>.","Attempt to decrease the <code>asset</code> balance of <code>who</code> which is held …","Attempt to decrease the <code>asset</code> balance of <code>who</code> which is held …","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Reduce the balance on hold of <code>who</code> by <code>amount</code>.","","","","","","","Check to see if some <code>amount</code> of funds of <code>who</code> may be placed …","Hold some funds in an account. If a hold for <code>reason</code> is …","Returns <code>true</code> if it’s possible to place (additional) …","Increase the balance on hold of <code>who</code> by <code>amount</code>.","Get the maximum amount that the <code>total_balance_on_hold</code> of …","Release up to <code>amount</code> held funds in an account.","Forcefully set the balance on hold of <code>who</code> to <code>amount</code>. This …","Reduce the balance of some funds on hold in an account.","Amount of funds on hold (for all hold reasons) of <code>who</code>.","Transfer some <code>amount</code> of free balance from <code>source</code> to become …","Transfer held funds into a destination account.","","","","","","","","","","","","","","A trait for a not-quite Linear Type that tracks an …","A negative imbalance (funds have been destroyed but none …","Handler for when some currency “account” decreased in …","The oppositely imbalanced type. They come in pairs.","A positive imbalance (funds have been created but none …","Resolves received asset credit to account <code>A</code>, implementing …","Resolves received asset credit to account <code>A</code>, implementing …","Either a positive or a negative imbalance.","Split an unbalanced amount two ways between a common …","","","","","","","","","","","","","","","","","","","","","Drop an instance cleanly. Only works if its <code>self.value()</code> …","Drop <code>Self</code> if and only if it is equal to zero. Return <code>Err</code> …","Mutate <code>self</code> by extracting a new instance with at most …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Consume <code>self</code> and maybe an <code>other</code> to return a new instance …","Maybe consume an <code>other</code> to mutate <code>self</code> into a new instance …","Consume <code>self</code> and an <code>other</code> to return a new instance that …","Consume <code>self</code> and an <code>other</code> to return a new instance that …","Consume self to mutate <code>other</code> so that it combines both. …","Consume self and along with an opposite counterpart to …","Actually handle a non-zero imbalance. You probably want to …","Actually handle a non-zero imbalance. You probably want to …","","","","Handler for some imbalance. Infallible.","Handler for some imbalance. Infallible.","Handler for some imbalances. The different imbalances …","Handler for some imbalances. The different imbalances …","The raw value of self.","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Consume <code>self</code> and return two independent instances; the …","Consume self and add its two components, defined by the …","Consume self and add its two components, defined by the …","Consume an <code>other</code> to mutate <code>self</code> into a new instance that …","","","","","","","","","","","","","","","","","","","","","","","","","The zero imbalance. Can be destroyed with <code>drop_zero</code>.","Create a <code>Positive</code> instance of <code>Self</code> whose value is zero.","Trait for providing an interface to a read-only NFT-like …","Interface for enumerating items in existence or owned by a …","Type for identifying an item.","Convert a <code>fungibles</code> trait implementation into a <code>fungible</code> …","The iterator type for <code>Self::items</code>.","Trait for providing an interface for NFT-like items which …","The iterator type for <code>Self::owned</code>.","Trait for providing a non-fungible set of items which can …","Returns the attribute value of <code>item</code> corresponding to <code>key</code>.","","","","Burn some <code>item</code>.","","Returns <code>true</code> if the <code>item</code> may be transferred.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","Returns an iterator of the items within a <code>collection</code> in …","","Mint some <code>item</code> to be owned by <code>who</code>.","","Returns an iterator of the items of all collections owned …","","Returns the owner of <code>item</code>, or <code>None</code> if the item doesn’t …","","Set attribute <code>value</code> of <code>item</code>’s <code>key</code>.","","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code>…","","Transfer <code>item</code> into <code>destination</code> account.","","","","","Returns the strongly-typed attribute value of <code>item</code> …","","","","","Trait for providing an interface to a read-only NFT-like …","Interface for enumerating items in existence or owned by a …","Type for identifying an item.","Convert a <code>nonfungibles</code> trait implementation into a …","The iterator type for <code>Self::items</code>.","Trait for providing an interface for NFT-like items which …","The iterator type for <code>Self::owned</code>.","Trait for transferring and controlling the transfer of …","Returns the attribute value of <code>item</code> corresponding to <code>key</code>.","","","","Burn some <code>item</code>.","","Returns <code>true</code> if the <code>item</code> may be transferred.","","Clear attribute of <code>item</code>’s <code>key</code>.","","Clear the metadata of an <code>item</code>.","Attempt to clear the strongly-typed attribute of <code>item</code>’s …","","Returns the custom attribute value of <code>item</code> corresponding …","","","","Disable the <code>item</code> of <code>collection</code> transfer.","","","Re-enable the <code>item</code> of <code>collection</code> transfer.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","Returns an iterator of the items within a <code>collection</code> in …","","Mint some <code>item</code> to be owned by <code>who</code>.","","Returns an iterator of the items of all collections owned …","","Returns the owner of <code>item</code>, or <code>None</code> if the item doesn’t …","","Set attribute <code>value</code> of <code>item</code>’s <code>key</code>.","","Set the metadata <code>data</code> of an <code>item</code>.","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code>…","","Returns the system attribute value of <code>item</code> corresponding …","","Transfer <code>item</code> into <code>destination</code> account.","","","","","Returns the strongly-typed attribute value of <code>item</code> …","","Returns the strongly-typed custom attribute value of <code>item</code> …","","Returns the strongly-typed system attribute value of <code>item</code> …","","","","","Type for identifying a collection (an identifier for an …","The iterator type for <code>Self::collections</code>.","Trait for providing the ability to create collections of …","Trait for providing the ability to destroy collections of …","The witness data needed to destroy an item.","Trait for providing an interface to many read-only …","Interface for enumerating items in existence or owned by a …","Type for identifying an item.","The iterator type for <code>Self::items</code>.","Trait for providing an interface for multiple collections …","The iterator type for <code>Self::owned_in_collection</code>.","The iterator type for <code>Self::owned</code>.","Trait for providing a non-fungible sets of items which can …","Returns the attribute value of <code>item</code> of <code>collection</code> …","Burn some <code>item</code> of <code>collection</code>.","Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.","Returns the attribute value of <code>collection</code> corresponding to …","Returns the owner of the <code>collection</code>, if there is one. For …","Returns an iterator of the collections in existence.","Create a <code>collection</code> of nonfungible items to be owned by <code>who</code>…","Destroy an existing fungible item.","Provide the appropriate witness data needed to destroy an …","Returns an iterator of the items of a <code>collection</code> in …","Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>.","Returns an iterator of the items of all collections owned …","Returns an iterator of the items of <code>collection</code> owned by <code>who</code>…","Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the …","Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>.","Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>.","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> …","Attempt to set the strongly-typed attribute <code>value</code> of …","Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.","Returns the strongly-typed attribute value of <code>item</code> of …","Returns the strongly-typed attribute value of <code>collection</code> …","Type for identifying a collection (an identifier for an …","The iterator type for <code>Self::collections</code>.","Trait for providing the ability to create collections of …","Trait for providing the ability to destroy collections of …","The witness data needed to destroy an item.","Trait for providing an interface to many read-only …","Interface for enumerating items in existence or owned by a …","Trait for providing an interface to check the account’s …","Type for identifying an item.","The iterator type for <code>Self::items</code>.","Trait for providing an interface for multiple collections …","The iterator type for <code>Self::owned_in_collection</code>.","The iterator type for <code>Self::owned</code>.","Trait for trading non-fungible items.","Trait for transferring non-fungible sets of items.","Returns the attribute value of <code>item</code> of <code>collection</code> …","Burn some <code>item</code> of <code>collection</code>.","Allows <code>buyer</code> to buy an <code>item</code> of <code>collection</code> if it’s up for …","Returns <code>true</code> if the <code>item</code> of <code>collection</code> may be transferred.","Clear attribute of <code>item</code> of <code>collection</code>’s <code>key</code>.","Clear attribute of <code>collection</code>’s <code>key</code>.","Clear the metadata of a <code>collection</code>.","Clear the metadata of an <code>item</code> of <code>collection</code>.","Attempt to clear the strongly-typed attribute of <code>item</code> of …","Attempt to clear the strongly-typed attribute of <code>collection</code>…","Returns the attribute value of <code>collection</code> corresponding to …","Returns the owner of the <code>collection</code>, if there is one. For …","Returns an iterator of the collections in existence.","Create a <code>collection</code> of nonfungible items to be owned by <code>who</code>…","","Returns the custom attribute value of <code>item</code> of <code>collection</code> …","Destroy an existing fungible item.","Disable the <code>item</code> of <code>collection</code> transfer.","Re-enable the <code>item</code> of <code>collection</code> transfer.","Provide the appropriate witness data needed to destroy an …","Returns <code>true</code> if <code>who</code> is the admin of the <code>collection</code>.","Returns <code>true</code> if <code>who</code> is the freezer of the <code>collection</code>.","Returns <code>true</code> if <code>who</code> is the issuer of the <code>collection</code>.","Returns the item price of <code>item</code> or <code>None</code> if the item is not …","Returns an iterator of the items of a <code>collection</code> in …","Mint some <code>item</code> of <code>collection</code> to be owned by <code>who</code>.","Returns an iterator of the items of all collections owned …","Returns an iterator of the items of <code>collection</code> owned by <code>who</code>…","Returns the owner of <code>item</code> of <code>collection</code>, or <code>None</code> if the …","Set attribute <code>value</code> of <code>item</code> of <code>collection</code>’s <code>key</code>.","Set attribute <code>value</code> of <code>collection</code>’s <code>key</code>.","Set the metadata <code>data</code> of a <code>collection</code>.","Set the metadata <code>data</code> of an <code>item</code> of <code>collection</code>.","Sets the item price for <code>item</code> to make it available for sale.","Attempt to set the strongly-typed attribute <code>value</code> of <code>item</code> …","Attempt to set the strongly-typed attribute <code>value</code> of …","Returns the system attribute value of <code>item</code> of <code>collection</code> …","Transfer <code>item</code> of <code>collection</code> into <code>destination</code> account.","Returns the strongly-typed attribute value of <code>item</code> of …","Returns the strongly-typed attribute value of <code>collection</code> …","Returns the strongly-typed custom attribute value of <code>item</code> …","Returns the strongly-typed system attribute value of <code>item</code> …","The type for the kinds of asset that are going to be paid.","The type by which we measure units of the currency in …","The type by which we identify the beneficiaries to whom a …","An error which could be returned by the Pay type","Payment failed. It may safely be retried.","An identifier given to an individual payment.","Payment is in progress. Nothing to report yet.","Can be implemented by <code>PayFromAccount</code> using a <code>fungible</code> …","Simple implementation of <code>Pay</code> for assets which makes a …","Simple implementation of <code>Pay</code> which makes a payment from a …","Status for making a payment via the <code>Pay::pay</code> trait …","Payment happened successfully.","Payment status is unknowable. It may already have reported …","","","","","","","","","","","Check how a payment has proceeded. <code>id</code> must have been …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Make a payment and return an identifier for later …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type that is returned as result from calculation.","The type that is returned as result from polynomial …","Implementor of <code>WeightToFee</code> that uses a constant multiplier.","A list of coefficients that represent a polynomial.","Implementor of <code>WeightToFee</code> such that it maps any unit of …","Implementor of <code>WeightToFee</code> that maps one unit of weight to …","An implementation of <code>WeightToFee</code> that collects no fee.","The old weight type.","The weight of database operations that the runtime can …","","Meters consumed weight and a hard limit for the maximal …","A trait that describes the weight to fee calculation.","One coefficient and its position in the <code>WeightToFee</code>.","A list of coefficients that represent a polynomial.","A trait that describes the weight to fee calculation as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the given weight can be consumed.","Check if the given weight can be consumed.","Consume the given weight after checking that it can be …","","","","","","","","","","","The fractional part of the coefficient.","The integral part of the coefficient.","These constants are specific to FRAME, and the current …","Consume some weight and defensively fail if it is over the …","The already consumed weight.","The ratio of consumed weight to the limit.","","","","","","","","","","","","","","","","Consume some weight and defensively fail if it is over the …","Degree/exponent of the term.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Evaluate the polynomial at a specific <code>x</code>.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The limit can ever be accrued.","","True iff the coefficient should be interpreted as negative.","Creates <code>Self</code> with the maximal possible limit for the …","Returns a polynomial that describes the weight to fee …","","","","The remaining weight that can still be consumed.","Evaluate the term at <code>x</code> and saturatingly amalgamate into …","","","","","","","","","","","","Consume the given weight after checking that it can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the fee from the passed <code>weight</code>.","","","","Creates <code>Self</code> from a limit for the maximal consumable …","","","Time to execute an empty block. Calculated by multiplying …","Time to execute a NO-OP extrinsic, for example …","ParityDB can be enabled with a feature flag, but is still …","By default, Substrate uses RocksDB, so this will be the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the value of this parameter type.","","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,264,0,264,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,17,5,6,9,25,26,0,5,9,5,5,9,5,9,5,9,5,9,5,9,13,17,5,5,9,9,5,9,0,0,0,0,0,0,0,17,5,9,265,13,17,5,9,25,26,265,13,17,5,9,25,26,265,13,17,5,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,13,17,5,5,9,9,5,13,13,17,17,5,5,9,13,17,5,6,9,25,26,13,17,5,6,9,25,26,13,17,5,6,9,0,0,0,0,13,17,5,9,25,26,13,17,5,9,25,26,13,17,5,9,25,26,13,5,9,13,17,5,9,25,26,13,17,5,9,0,0,13,17,5,6,9,13,17,5,6,9,13,17,5,6,9,13,17,5,6,9,5,6,266,267,268,269,270,271,272,13,13,17,17,5,5,6,6,9,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,0,5,9,0,0,5,266,267,268,269,270,271,272,13,17,5,6,9,25,26,26,5,9,5,9,13,17,5,6,9,26,0,13,13,17,17,5,5,5,5,6,6,6,6,9,9,9,9,25,26,13,13,13,17,17,17,5,5,5,6,6,6,9,9,9,25,25,25,26,26,26,0,0,13,17,5,6,9,25,9,5,5,5,266,267,268,269,270,271,272,13,17,5,6,9,25,26,266,266,267,267,268,268,269,269,270,270,271,271,272,272,13,13,17,17,5,5,6,6,9,9,25,25,26,26,266,266,267,267,268,268,269,269,270,270,271,271,272,272,13,13,17,17,5,5,6,6,9,9,25,25,26,26,0,13,17,5,6,13,5,9,264,266,267,268,269,270,271,272,13,17,5,6,0,0,265,13,17,5,9,25,26,0,0,5,9,5,9,0,266,267,268,269,270,271,272,13,17,5,6,9,25,26,0,266,267,268,269,270,271,272,13,17,5,6,9,25,26,13,17,5,9,13,13,13,17,17,5,5,5,6,9,9,9,266,267,268,269,270,271,272,13,17,5,6,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,26,13,17,5,9,5,13,5,5,13,17,5,9,13,0,0,0,13,17,5,9,264,266,267,268,269,270,271,272,0,0,13,17,5,0,0,0,0,0,0,13,17,5,5,5,6,6,6,9,9,9,5,0,56,0,13,17,5,9,13,0,13,5,9,138,266,267,268,0,5,9,13,17,5,6,9,26,13,17,5,9,5,5,5,5,0,0,0,5,9,17,0,13,17,5,9,25,26,13,17,5,6,9,25,26,0,0,5,5,5,6,6,5,5,9,5,9,5,266,267,268,269,270,271,272,13,13,17,17,5,5,6,6,9,9,25,26,26,13,17,5,9,266,267,268,269,270,271,272,13,17,5,6,9,25,26,26,13,13,17,5,9,5,9,265,13,17,5,9,25,26,265,13,17,5,9,25,26,265,13,17,5,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,13,17,5,6,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,26,266,267,268,269,270,271,272,13,17,5,6,9,25,26,0,5,5,0,0,273,0,0,0,0,0,0,0,0,0,75,206,0,77,68,72,69,68,75,206,0,68,274,0,0,0,0,0,0,69,275,69,0,0,72,69,72,68,71,70,67,67,70,67,68,69,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,70,70,67,71,276,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,68,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,69,69,72,72,72,68,68,68,71,71,71,70,70,70,67,67,67,78,0,0,69,72,68,71,70,67,69,69,72,72,68,71,70,70,70,70,70,67,69,69,72,72,68,68,71,71,70,70,67,67,69,69,72,72,68,68,71,71,70,70,67,67,67,277,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,77,68,69,72,68,71,70,67,69,72,68,71,70,67,72,68,71,70,67,274,69,69,69,67,67,68,278,70,71,70,78,70,67,68,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,69,72,68,71,70,67,279,71,280,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,0,0,0,281,0,281,281,0,0,0,0,0,82,82,82,82,82,82,281,82,82,281,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,85,281,281,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,0,0,0,0,0,87,87,87,282,283,87,282,283,87,87,87,87,87,282,283,87,282,283,87,282,283,87,87,282,283,87,282,282,283,283,87,87,282,282,283,283,87,87,87,282,283,87,282,283,87,282,283,87,282,283,87,284,0,282,283,87,285,87,282,283,87,282,283,87,87,87,87,282,283,87,282,283,87,282,283,87,282,283,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,96,91,96,91,91,0,0,0,0,0,0,0,91,286,92,96,0,0,96,96,0,0,91,92,0,0,0,0,0,0,0,0,0,0,0,287,96,91,94,91,0,0,0,0,0,288,94,0,0,93,0,0,94,66,0,0,91,0,0,0,0,96,0,96,92,287,0,96,0,0,0,91,0,0,0,0,96,0,0,91,0,0,0,0,0,0,0,96,96,0,0,0,0,0,0,96,0,0,0,289,0,0,0,96,93,0,0,0,0,0,0,66,81,89,90,91,92,93,94,95,96,66,66,66,66,66,66,66,66,66,66,66,66,66,66,81,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,66,66,66,66,66,66,66,66,66,66,90,95,66,81,89,90,91,92,93,94,95,96,66,81,89,90,91,92,93,94,95,96,90,95,31,66,81,90,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,31,66,81,90,91,92,93,94,95,96,66,81,89,90,95,0,0,90,90,90,90,90,66,290,81,102,89,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,90,90,91,92,93,96,66,66,66,290,81,102,89,90,91,92,93,94,95,96,41,81,102,90,41,66,81,102,90,91,92,93,94,95,96,31,90,41,0,66,90,91,92,93,94,95,96,66,66,66,90,90,90,91,91,91,92,92,92,93,93,93,94,94,94,95,95,95,96,96,96,89,91,93,66,66,89,90,91,92,93,93,94,95,96,66,66,66,290,81,102,102,89,90,91,92,93,93,93,93,94,95,95,96,96,96,96,96,96,96,66,66,66,290,290,81,81,102,102,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,66,66,66,290,290,81,81,102,102,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,289,24,290,89,89,89,81,90,90,66,81,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,0,66,290,81,102,89,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,90,95,102,66,81,95,66,179,66,90,96,66,66,66,66,66,66,66,81,90,66,286,66,96,95,66,66,95,95,81,66,66,0,81,95,66,66,66,66,66,66,66,66,90,91,92,93,96,66,66,41,66,81,102,91,92,93,94,95,96,31,93,0,96,66,66,66,66,66,81,90,91,92,93,94,95,96,66,81,89,90,91,92,93,94,95,96,66,93,66,66,290,81,102,89,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,66,81,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,288,66,81,90,91,92,93,94,95,96,66,290,81,102,89,90,91,92,93,94,95,96,66,66,290,81,102,89,90,91,92,93,94,95,96,41,81,102,286,90,66,290,81,102,89,90,91,92,93,94,95,96,91,93,66,95,96,66,66,90,291,0,124,292,0,0,0,291,293,292,294,0,293,294,0,0,292,0,292,0,295,296,297,298,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,295,299,296,297,298,291,299,291,291,121,122,123,124,300,121,122,123,124,300,121,122,123,301,0,0,0,0,121,122,123,302,297,298,296,297,298,297,298,121,295,296,297,298,303,295,296,297,304,124,300,121,122,123,124,300,121,122,123,291,293,292,294,121,122,123,292,294,124,300,121,122,123,295,305,302,124,300,121,122,123,124,124,300,300,121,121,122,122,123,123,124,124,300,300,121,121,122,122,123,123,295,296,297,298,300,300,0,295,296,297,298,0,124,300,121,122,123,296,297,298,124,300,121,122,123,124,121,122,123,124,300,121,122,123,124,300,121,122,123,291,293,292,294,293,292,294,292,294,292,294,293,292,294,293,292,294,292,294,292,294,297,298,302,295,121,122,296,296,297,298,0,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,123,123,295,296,297,298,295,296,297,298,295,296,121,122,121,122,123,121,122,123,121,122,123,121,122,123,121,122,123,125,305,302,121,122,295,296,297,298,302,297,298,295,296,297,298,121,122,0,0,305,302,306,121,122,123,296,297,298,295,296,297,298,0,295,293,292,294,293,302,307,308,309,124,300,121,122,123,295,296,297,298,124,300,121,122,123,295,296,297,298,295,296,297,298,124,300,121,122,123,0,124,300,121,122,123,0,124,300,121,122,123,124,300,121,122,123,0,123,123,0,0,0,0,0,0,0,128,0,0,0,0,130,131,128,0,132,132,130,131,132,120,128,120,130,132,128,120,130,132,128,120,130,132,128,120,130,131,132,128,120,130,131,132,130,132,0,130,131,132,130,131,132,130,128,120,130,132,128,120,130,132,128,120,130,132,128,120,130,132,120,132,130,130,130,130,128,120,130,131,132,128,120,130,131,132,128,120,130,131,132,128,120,130,132,130,131,132,130,130,130,132,132,132,0,130,131,132,132,128,128,120,130,131,132,128,120,132,128,128,120,120,130,130,131,131,132,132,131,128,128,120,120,130,130,131,131,132,132,0,130,0,0,0,0,130,128,120,130,132,128,120,130,131,132,128,120,130,131,132,128,120,132,128,120,130,131,132,130,128,120,130,131,132,132,130,0,0,0,120,120,131,130,130,131,130,130,0,0,0,128,120,130,132,132,130,0,0,0,0,128,120,130,132,130,131,132,132,128,120,130,131,132,132,128,120,130,131,132,130,128,120,130,132,128,120,130,132,128,120,130,132,128,120,130,131,132,128,120,130,131,132,120,128,120,130,131,132,128,120,130,131,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,137,136,137,0,136,137,136,137,136,137,136,137,136,137,136,136,137,137,136,136,137,137,0,0,136,137,136,137,136,137,136,137,136,137,0,0,0,136,137,136,137,136,137,0,0,0,0,0,0,0,0,136,137,136,137,136,137,136,137,136,137,136,137,136,137,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,0,0,0,0,0,0,0,0,0,0,0,0,143,144,0,310,310,0,0,310,310,0,310,0,0,311,0,311,0,0,312,0,0,0,0,0,0,313,0,0,314,315,316,316,317,317,318,318,319,319,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,324,314,315,316,317,318,319,314,315,316,317,318,315,316,316,318,318,314,315,316,316,317,317,318,318,316,318,314,315,314,315,312,320,314,315,316,317,318,319,316,317,319,325,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,314,315,316,317,318,318,315,316,318,318,314,315,316,320,317,318,319,321,322,323,319,319,310,320,314,315,316,320,317,318,319,321,322,323,314,314,315,315,316,316,320,320,317,317,318,318,319,319,321,321,322,322,323,323,311,321,322,323,311,321,322,323,314,314,315,315,316,316,320,320,317,317,318,318,319,319,321,321,322,322,323,323,314,315,316,316,317,317,318,318,319,319,319,319,314,315,316,316,317,317,318,318,314,315,316,320,317,318,319,321,322,323,314,315,314,315,316,316,317,317,318,318,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,314,315,316,317,318,318,314,315,316,317,318,318,317,315,316,318,318,315,316,318,318,314,315,316,317,318,318,315,316,317,318,318,317,315,316,318,318,315,316,318,318,315,316,316,318,318,314,315,316,317,318,326,320,319,319,314,315,310,314,320,317,317,315,316,316,318,318,314,315,316,316,317,317,318,318,319,319,314,315,316,316,317,317,318,318,319,319,317,319,316,317,318,313,314,315,316,317,318,319,319,319,314,315,316,316,317,317,318,318,314,316,317,318,316,316,318,318,314,315,316,316,317,317,318,318,319,319,314,315,316,317,318,319,316,317,318,319,314,315,316,316,317,317,318,318,314,315,316,316,317,317,318,318,319,319,118,314,315,316,317,318,318,319,319,314,315,316,317,318,314,316,316,317,317,319,319,314,315,316,320,317,318,319,321,322,323,314,315,316,316,317,317,318,318,319,319,314,315,316,320,317,318,319,321,322,323,314,315,316,316,317,317,318,318,319,319,314,315,316,316,317,317,318,318,319,319,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,314,315,316,320,317,318,319,321,322,323,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,327,328,182,0,0,0,183,183,202,184,202,0,0,0,170,329,0,0,330,0,0,0,182,331,0,0,0,332,0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,0,0,333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,186,334,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,335,0,0,0,336,337,337,338,0,0,332,0,152,0,0,0,184,0,0,0,0,339,0,0,152,0,0,0,0,0,152,340,341,0,342,343,344,345,332,0,0,0,201,181,0,202,184,0,0,186,0,0,0,0,0,0,0,0,0,0,181,346,0,201,184,170,347,336,0,0,0,0,0,182,0,0,0,0,0,0,0,0,338,0,0,184,0,0,328,0,0,348,349,0,0,0,0,201,0,0,0,0,177,0,0,0,0,0,0,0,350,351,0,0,0,0,0,0,0,0,0,0,0,289,0,0,0,183,202,202,170,352,353,353,0,0,0,0,0,0,0,332,0,0,0,0,170,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,147,145,168,152,170,171,332,147,182,149,149,354,198,332,355,355,182,182,355,182,182,356,356,357,358,354,359,359,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,341,341,384,356,356,356,385,385,386,182,331,387,387,387,338,332,163,164,166,167,147,168,171,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,147,145,168,152,170,171,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,147,145,168,152,170,171,149,165,167,147,388,369,387,387,389,390,360,361,361,362,362,363,363,364,364,365,365,366,391,391,367,368,371,391,391,392,392,168,393,394,165,395,395,333,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,153,154,155,156,157,158,159,160,161,162,163,164,166,167,147,174,168,171,396,397,398,397,397,398,399,149,165,167,147,400,149,165,167,147,397,398,398,0,396,401,401,401,401,401,401,401,399,149,165,167,147,400,149,165,167,147,402,396,396,396,328,329,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,163,348,385,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,176,178,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,335,335,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,198,163,164,147,149,163,164,167,147,145,152,170,164,164,342,382,342,382,403,181,350,350,351,351,374,350,350,330,404,149,163,164,165,166,167,147,147,145,168,152,170,184,171,149,149,149,163,163,163,164,164,164,165,165,165,166,166,166,167,167,167,147,147,147,145,145,145,168,168,168,152,152,152,170,170,170,184,184,184,171,171,171,405,357,358,357,406,347,347,147,330,404,330,335,407,408,360,361,362,363,364,365,366,367,368,182,409,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,147,174,145,168,152,170,184,171,342,343,382,383,149,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,163,163,164,165,166,167,147,174,145,168,152,170,184,171,168,164,163,149,163,163,163,152,410,149,149,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,176,176,178,178,201,201,369,369,198,198,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,181,181,380,380,381,381,382,382,383,383,183,183,202,202,163,163,164,164,165,165,166,166,167,167,147,147,174,174,145,145,168,168,152,152,170,170,184,184,171,171,168,410,149,149,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,176,176,178,178,201,201,369,369,198,198,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,181,181,380,380,381,381,382,382,383,383,183,183,202,202,163,163,164,164,165,165,166,166,167,167,147,147,174,174,145,145,168,168,152,152,170,170,184,184,171,171,163,166,0,0,289,24,411,153,153,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,160,160,160,161,161,161,162,162,162,370,380,147,412,413,413,414,415,415,414,149,414,416,387,387,343,383,343,383,149,149,149,152,335,335,416,335,335,149,163,164,167,147,145,152,170,417,393,394,165,328,392,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,417,418,411,411,370,419,419,420,420,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,182,149,410,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,410,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,182,182,355,163,164,166,167,147,168,171,421,330,330,355,355,422,331,423,335,355,355,424,408,408,149,395,395,425,426,335,152,152,152,152,167,163,164,152,427,145,145,427,328,167,393,394,165,411,411,370,411,411,370,393,394,165,393,394,385,354,149,176,178,167,147,182,0,0,0,0,341,344,345,428,429,429,420,420,339,339,333,339,430,430,420,420,431,431,339,432,432,420,420,433,433,420,420,434,435,339,436,436,420,420,437,201,171,166,145,349,349,349,149,165,167,147,147,438,167,331,335,335,335,335,177,145,349,349,416,346,328,338,177,147,439,439,439,328,149,335,335,330,411,411,370,335,416,182,177,182,201,0,163,347,381,353,182,387,387,387,387,182,168,149,163,164,167,147,145,152,170,163,164,391,368,171,440,147,145,349,349,147,174,354,342,343,382,383,177,149,163,164,167,147,145,152,170,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,147,145,168,152,170,171,0,329,152,332,334,164,441,201,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,411,370,201,350,351,372,373,373,374,375,375,376,376,377,378,378,379,379,350,350,201,201,182,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,149,163,164,167,147,145,152,170,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,163,164,145,152,170,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,341,341,344,331,335,416,152,385,163,164,147,353,442,149,153,154,155,156,157,158,159,160,161,162,360,361,362,363,364,365,366,367,368,176,178,201,369,198,370,371,372,373,374,375,376,377,378,379,181,380,381,382,383,183,202,163,164,165,166,167,147,174,145,168,152,170,184,171,149,149,443,149,444,444,445,445,0,0,0,396,397,398,397,397,398,397,398,398,396,396,396,396,208,208,209,0,0,0,207,0,0,0,0,0,209,207,208,207,209,207,207,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,207,207,208,207,209,208,208,208,207,207,207,209,209,209,208,208,207,209,208,207,207,207,209,207,207,207,207,208,208,207,207,209,209,208,208,207,207,209,209,207,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,207,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,208,207,209,0,0,0,208,207,209,446,447,0,0,446,447,446,447,446,447,446,447,448,449,0,448,449,0,448,449,448,449,448,449,448,449,450,451,0,450,451,0,0,450,451,450,451,450,451,450,451,221,0,0,219,0,220,218,220,220,0,0,0,0,452,453,218,0,216,214,213,217,0,215,222,219,0,0,221,0,214,215,219,220,0,0,0,217,0,0,216,216,0,213,219,222,0,219,220,213,213,213,219,0,219,220,0,0,219,214,215,216,217,218,219,220,221,222,213,213,213,213,213,213,213,213,213,222,213,222,213,222,213,454,455,214,215,216,217,218,219,220,221,222,213,454,455,214,215,216,217,218,219,220,221,222,213,214,215,216,217,218,219,220,221,222,213,214,215,216,217,218,219,220,221,222,213,213,213,213,0,222,213,222,213,222,213,222,213,213,213,213,213,454,455,214,215,216,217,218,219,220,221,222,213,454,455,214,215,216,217,218,219,220,221,222,213,213,454,455,214,215,216,217,218,219,220,221,222,213,213,213,222,213,214,215,216,217,218,219,220,221,222,213,214,214,214,215,215,215,216,216,216,217,217,217,218,218,218,219,219,219,220,220,220,221,221,221,222,222,222,213,213,213,213,213,214,215,216,217,218,219,220,221,222,213,213,213,213,213,454,455,214,215,216,217,218,219,220,221,222,213,453,454,213,213,213,213,454,454,455,455,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,213,213,454,454,455,455,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,213,213,0,0,213,456,455,213,222,213,0,454,455,214,215,216,217,218,219,220,221,222,213,213,213,213,454,455,214,215,216,217,218,219,220,221,222,213,454,455,214,215,216,217,218,219,220,221,222,213,454,455,214,215,216,217,218,219,220,221,222,213,219,220,213,213,457,222,213,0,0,0,0,213,213,0,213,213,222,213,213,213,213,452,222,213,214,215,216,217,218,219,220,221,222,213,213,454,455,214,215,216,217,218,219,220,221,222,213,454,455,214,215,216,217,218,219,220,221,222,213,222,213,222,213,222,213,454,455,214,215,216,217,218,219,220,221,222,213,222,454,455,214,215,216,217,218,219,220,221,222,213,213,454,455,214,215,216,217,218,219,220,221,222,213,213,454,455,214,215,216,217,218,219,220,221,222,213,0,458,0,459,0,0,460,460,459,0,458,458,0,461,0,0,458,459,462,463,462,463,458,459,464,458,458,458,458,462,463,462,463,462,463,458,461,461,460,458,462,463,462,462,463,463,462,462,463,463,462,463,462,463,462,463,462,463,462,463,458,458,458,458,458,460,459,461,461,464,461,464,461,464,461,458,458,460,458,458,461,461,464,461,458,458,458,462,463,462,463,462,463,462,463,462,463,464,461,461,461,459,462,463,458,465,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,243,0,0,230,226,232,229,236,465,465,465,236,236,236,236,230,226,232,229,230,226,232,229,230,226,232,229,236,241,466,467,233,230,226,232,229,236,241,466,467,233,230,226,232,229,226,229,236,468,468,236,465,236,236,236,465,236,233,230,226,232,229,230,226,232,229,0,469,469,230,226,232,229,230,226,232,229,230,226,232,229,230,226,232,229,236,469,469,236,233,236,243,243,236,241,466,467,233,230,226,232,229,236,241,466,467,233,230,226,232,229,468,468,243,243,243,243,468,468,243,243,468,468,468,468,468,468,243,243,236,241,466,467,233,233,230,230,226,226,232,232,229,229,233,232,229,230,226,232,229,233,230,226,232,229,233,233,233,230,230,230,226,226,226,232,232,232,229,229,229,236,233,233,230,226,232,229,0,236,241,466,467,233,230,226,232,229,236,236,241,241,466,466,467,467,233,233,230,230,226,226,232,232,229,229,236,236,241,241,466,466,467,467,233,233,230,230,226,226,232,232,229,229,235,466,467,469,236,469,469,0,236,236,230,226,232,229,236,469,469,236,236,241,466,467,233,230,226,232,229,236,241,466,467,233,230,226,232,229,241,236,241,466,467,233,230,226,232,229,236,241,466,467,233,230,226,232,229,233,236,243,243,230,226,232,229,233,465,236,236,468,468,230,226,232,229,233,236,243,243,233,469,469,465,236,236,236,236,243,243,236,243,243,236,468,468,236,468,468,236,236,469,236,236,243,243,236,468,468,230,226,232,229,236,233,233,236,230,226,232,229,230,226,232,229,465,236,236,465,236,236,468,468,236,236,233,236,241,466,467,233,230,226,232,229,236,241,466,467,233,230,226,232,229,230,226,232,229,230,226,232,229,230,226,232,229,236,241,466,467,233,230,226,232,229,230,226,232,229,236,241,466,467,233,230,226,232,229,236,241,466,467,233,230,226,232,229,230,226,232,229,232,229,236,241,466,467,233,230,226,232,229,236,243,243,469,236,233,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,470,0,0,470,470,470,231,231,231,231,231,231,231,0,0,0,471,0,471,227,227,471,472,227,227,227,473,227,227,471,227,471,472,471,227,227,472,227,473,471,227,227,238,474,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,240,0,0,238,238,0,246,238,474,238,250,475,476,246,250,475,476,246,477,477,238,238,478,239,239,239,239,240,240,250,475,476,246,250,475,476,246,479,479,477,477,240,240,240,240,477,477,240,240,477,477,477,477,477,477,240,240,250,475,476,246,246,246,246,246,246,246,246,479,246,0,250,475,476,246,250,250,475,475,476,476,246,246,250,250,475,475,476,476,246,246,248,475,476,239,239,239,0,239,239,250,475,476,246,250,475,476,246,250,250,475,476,246,250,475,476,246,240,240,246,0,238,477,477,246,240,240,246,239,239,238,240,240,240,240,477,477,0,477,477,239,240,240,477,477,246,479,246,238,238,477,477,246,250,475,476,246,250,475,476,246,250,475,476,246,250,475,476,246,250,475,476,246,250,475,476,246,240,240,239,246,0,0,480,481,481,482,0,0,482,482,482,483,483,483,483,483,483,483,0,0,0,484,0,484,485,485,484,486,485,485,485,244,485,485,484,485,484,486,484,485,486,244,484,485,485,0,0,0,487,488,488,489,488,0,490,490,490,490,0,225,0,254,225,0,0,0,0,491,492,225,493,491,492,225,493,491,492,225,493,491,492,225,493,491,492,225,493,254,225,254,491,492,225,493,491,491,492,492,225,225,493,493,491,491,492,492,225,225,493,493,491,492,225,493,491,492,225,493,491,492,225,493,491,492,225,493,254,254,254,225,254,254,494,494,491,492,493,494,494,494,494,254,254,254,254,254,254,254,254,491,492,225,493,491,492,225,493,491,492,225,493,491,492,225,493,491,492,225,493,491,492,225,493,254,225,0,0,495,0,496,0,496,0,495,497,497,497,498,497,495,497,497,497,497,497,497,497,497,497,497,497,497,497,496,497,498,497,496,497,495,497,498,497,498,497,499,497,497,497,497,495,497,497,497,497,0,0,500,0,501,0,501,0,500,502,502,502,503,502,500,502,503,502,503,503,502,500,502,502,502,504,502,502,504,502,502,502,502,502,502,502,502,502,502,501,502,503,502,501,502,500,502,503,502,503,503,502,500,502,504,502,502,502,502,500,502,500,502,500,502,502,502,502,505,506,0,0,507,0,0,505,506,0,506,506,0,505,508,505,505,505,506,509,507,507,506,508,506,506,505,508,508,508,508,510,505,505,511,512,0,0,513,0,0,0,511,512,0,512,512,0,0,511,514,515,511,514,514,514,514,514,514,511,511,512,516,516,511,513,517,517,513,518,518,518,515,512,514,512,512,511,514,514,514,514,515,514,514,511,517,511,511,511,511,519,519,519,519,256,519,256,0,0,0,0,256,256,256,256,256,256,520,521,256,520,521,256,519,520,521,256,256,256,256,256,256,520,521,256,520,521,256,520,521,256,256,256,256,256,256,256,520,521,256,520,520,521,521,256,256,520,520,521,521,256,256,256,520,521,256,520,521,256,520,521,256,520,521,256,256,519,520,521,256,256,256,520,521,256,520,521,256,256,256,256,520,521,256,256,520,521,256,520,521,256,520,521,256,522,523,0,0,0,0,0,0,0,0,0,0,0,0,0,203,257,88,258,257,88,258,257,88,258,257,88,258,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,203,203,203,257,88,203,257,88,258,203,257,88,258,258,258,0,203,203,203,257,88,258,257,88,258,257,88,258,257,257,88,258,257,88,203,258,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,257,259,524,525,526,203,257,88,258,257,257,257,88,258,257,88,257,257,257,88,88,88,259,203,257,88,259,259,524,525,526,203,257,257,88,258,259,259,524,524,525,525,526,526,203,203,257,257,88,88,258,258,259,259,524,524,525,525,526,526,203,203,257,257,88,88,258,258,257,88,258,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,257,88,203,257,258,203,523,88,88,88,203,258,257,257,88,258,257,88,258,203,257,88,258,203,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,257,88,258,257,88,258,257,88,258,259,524,525,526,203,257,88,258,257,88,258,259,524,525,526,203,257,88,258,259,524,525,526,203,257,88,258,257,259,524,525,526,203,257,88,258,522,524,525,526,203,88,88,0,0,0,0,0,0,0,0,0,0,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,527,528,528,529,529,530,530,527,527,528,528,529,529,530,530,527,527,527,528,528,528,529,529,529,530,530,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530,527,528,529,530],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,[[3,[-2,-3]]],[],[],4],[-1,[[3,[-2,-3]]],[],[],4],[[[5,[-1,-2]]],[[6,[-1,-2]]],[],[]],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[[[5,[-1,-2]]],[[8,[-1]]],[],[]],[[[9,[-1,-2]]],[[8,[-1]]],[],[]],[-1,[[3,[-2,-3]]],[],[],4],[-1,[[3,[-2,-3]]],[],[],4],[-1,[[8,[7]]],[]],[-1,[[8,[7]]],[]],[-1,[[11,[[8,[-2]],10]]],[],12],[-1,[[11,[[8,[-2]],10]]],[],12],[[[13,[-1,-2,-3]]],[[15,[-1,-2,14]]],16,[],[]],[[[17,[-1,-2]]],[[18,[-1,14]]],16,[]],[[[5,[-1,-2]]],[[19,[-1,14]]],[],[]],[[[5,[-1,-2]]],[[8,[-1]]],[],[]],[[[9,[-1,-2]]],[[8,[-1]]],[],[]],[[[9,[-1,-2]]],[[19,[-1,14]]],[],[]],[-1,[[11,[[8,[-2]],10]]],[],12],[-1,[[11,[[8,[-2]],10]]],[],12],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[[5,[-1,-2]],21,-1],2,22,[[24,[23]]]],[[[13,[-1,-2,-3]]],2,16,[],[[24,[23]]]],[[],-1,[]],[[],-1,[]],[[[17,[-1,-2]]],2,16,[[24,[23]]]],[[[5,[-1,-2]]],2,[],[]],[[],-1,[]],[[],-1,[]],[[[13,[-1,-2,-3]]],[[13,[-1,-2,-3]]],[],[],[]],[[[17,[-1,-2]]],[[17,[-1,-2]]],[],[]],[[[5,[-1,-2]]],[[5,[-1,-2]]],22,[]],[[[6,[-1,-2]]],[[6,[-1,-2]]],[],[]],[[[9,[-1,-2]]],[[9,[-1,-2]]],22,[]],[25,25],[26,26],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[13,[-1,-2,-3]],[13,[-1,-2,-3]]],27,[],[],[[24,[23]]]],[[[17,[-1,-2]],[17,[-1,-2]]],27,[],[[24,[23]]]],[[[5,[-1,-2]],[5,[-1,-2]]],27,16,[[24,[23]]]],[[[6,[-1,-2]],[6,[-1,-2]]],27,16,[[24,[23]]]],[[[9,[-1,-2]],[9,[-1,-2]]],27,16,[[24,[23]]]],0,0,0,[-1,2,28],[-1,[[11,[[13,[-2,-3,-4]],29]]],30,[31,16],31,[[24,[23]]]],[-1,[[11,[[17,[-2,-3]],29]]],30,[31,16],[[24,[23]]]],[-1,[[11,[[5,[-2,-3]],29]]],30,31,[[24,[23]]]],[-1,[[11,[[9,[-2,-3]],29]]],30,31,[[24,[23]]]],[-1,[[11,[25,29]]],30],[-1,[[11,[26,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[32,[21]]]],[[[8,[7]]],[[32,[21]]]],[[[8,[7]]],[[32,[21]]]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[],[[13,[-1,-2,-3]]],16,[],[[24,[23]]]],[[],[[17,[-1,-2]]],16,[[24,[23]]]],[[],[[5,[-1,-2]]],[],[]],[[],[[9,[-1,-2]]],[],[]],0,0,[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[13,[-1,-2,-3]]],[],16,[],[]],[21,-1,[]],[[[17,[-1,-2]]],[],16,[]],[21,-1,[]],[[[5,[-1,-2]]],[],[],[]],[21,-1,[]],[21,-1,[]],[[[6,[-1,-2]]],[],[],[]],[[[9,[-1,-2]]],[],[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],0,[-1,[[11,[[5,[-2,-3]]]]],33,34,[[24,[23]]]],[-1,[[11,[[9,[-2,-3]]]]],33,34,[[24,[23]]]],0,0,[[[5,[-1,-2]],-3],[[35,[-1,14]]],[],[],[[36,[21]]]],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[26,[[19,[7]]]],[-1,-2,[],[[38,[37]]]],[-1,-2,[],[[38,[37]]]],[-1,-2,[],[[38,[37]]]],[-1,-2,[],[[38,[37]]]],[[[13,[-1,-2,-3]],-4],2,[],[],[],[39,40]],[[[17,[-1,-2]],-3],2,[],[],[39,40]],[[[5,[-1,-2]],-3],2,[],[],[39,40]],[[[6,[-1,-2]],-3],2,41,[],[39,40]],[[[9,[-1,-2]],-3],2,[],[],[39,40]],[[26,-1],2,[39,40]],0,[[[13,[-1,-2,-3]],[15,[-1,-2,14]]],42,[],[],[]],[[[13,[-1,-2,-3]],[13,[-1,-2,-4]]],42,[],[],[[24,[23]]],[[24,[23]]]],[[[17,[-1,-2]],[18,[-1,14]]],42,[],[[24,[23]]]],[[[17,[-1,-2]],[17,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[5,[-1,-2]],[5,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[5,[-1,-2]],[9,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[5,[-1,-2]],[19,[-1,14]]],42,[],[[24,[23]]]],[[[5,[-1,-2]],[6,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[6,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[9,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[5,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[8,[-1]]],42,[],[[24,[23]]]],[[[9,[-1,-2]],[19,[-1,14]]],42,[],[[24,[23]]]],[[[9,[-1,-2]],[6,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[9,[-1,-2]],[5,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[[9,[-1,-2]],[9,[-1,-3]]],42,[],[[24,[23]]],[[24,[23]]]],[[25,25],42],[[26,26],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],0,0,[[[13,[-1,-2,-3]],43],[[11,[2,44]]],[],[],[[24,[23]]]],[[[17,[-1,-2]],43],[[11,[2,44]]],[],[[24,[23]]]],[[[5,[-1,-2]],43],[[11,[2,44]]],[],[[24,[23]]]],[[[6,[-1,-2]],43],[[11,[2,44]]],[],[[24,[23]]]],[[[9,[-1,-2]],43],[[11,[2,44]]],[],[[24,[23]]]],[[25,43],45],[[[19,[-1,14]],[32,[46]]],[[9,[-1,-2]]],[],[[24,[23]]]],[[[5,[-1,-2]],21,-1],[[11,[[32,[-1]],-1]]],[],[[24,[23]]]],[[[5,[-1,-2]],21,-1],[[11,[[32,[-1]],-1]]],[],[[24,[23]]]],[[[5,[-1,-2]],-1],2,[],[[24,[23]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[-1,-2],47,[48,40],49],[[-1,-2],47,[48,40],49],[[-1,-2],47,[48,40],49],[[-1,-2],47,[48,40],49],[[[13,[-2,-3,-4]],-1],[[32,[-3]]],[16,40],[[50,[-1]],16],[],[[24,[23]]]],[[[5,[-1,-2]],-3],32,[],[],[[51,[[8,[-1]]]]]],[[[9,[-1,-2]],-3],32,[],[],[[51,[[8,[-1]]]]]],[[[8,[7]]]],[[[8,[7]]],[[19,[7]]]],[[[8,[7]]],[[19,[7]]]],[[[8,[7]]],[[19,[7]]]],[[[8,[7]]],[[20,[7]]]],[[[8,[7]]],[[20,[7]]]],[[[8,[7]]],[[20,[7]]]],[[[8,[7]]],[[20,[7]]]],[[[13,[-1,-2,-3]],-4],2,48,48,[],52],[[[17,[-1,-2]],-3],2,48,[],52],[[[5,[-1,-2]],-3],2,48,[],52],[[[6,[-1,-2]],-3],2,48,[],52],0,0,[-1,[[19,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],0,0,[[[5,[-1,-2]],-3],[],[],[],[[51,[[8,[-1]]]]]],[[[9,[-1,-2]],-3],[],[],[],[[51,[[8,[-1]]]]]],[[[5,[-1,-2]],-3],[],[],[],[[51,[[8,[-1]]]]]],[[[9,[-1,-2]],-3],[],[],[],[[51,[[8,[-1]]]]]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2,-3]]],[[15,[-1,-2,14]]],16,[],[[24,[23]]]],[[[17,[-1,-2]]],[[18,[-1,14]]],16,[[24,[23]]]],[[[5,[-1,-2]]],[[19,[-1,14]]],[],[]],[[[9,[-1,-2]]],[[19,[-1,14]]],[],[]],[[[13,[-1,-2,-3]]],[],[],[],[]],[[[13,[-1,-2,-3]]],[],[],[],[]],[[[13,[-1,-2,-3]]],[],[],[],[]],[[[17,[-1,-2]]],[],[],[]],[[[17,[-1,-2]]],[],[],[]],[[[5,[-1,-2]]],[],[],[]],[[[5,[-1,-2]]],[],[],[]],[[[5,[-1,-2]]],[],[],[]],[[[6,[-1,-2]]],[],[],[]],[[[9,[-1,-2]]],[],[],[]],[[[9,[-1,-2]]],[],[],[]],[[[9,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],-3,[],41,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[[5,[-1,-2]]],42,[],[[24,[23]]]],[[[13,[-1,-2,-3]]],[[53,[-1,-2]]],16,[],[[24,[23]]]],[[[5,[-1,-2]]],[[54,[-1]]],[],[]],[[[5,[-1,-2]]],[[32,[-1]]],[],[]],[[[8,[7]]],[[11,[21,29]]]],[[[8,[7]]],[[11,[21,29]]]],[[[8,[7]]],[[11,[21,29]]]],[[[8,[7]]],[[11,[21,29]]]],[[[13,[-1,-2,-3]],-4],[[13,[-1,-5,-3]]],16,[],[[24,[23]]],55,[]],0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[],[[13,[-1,-2,-3]]],16,[],[[24,[23]]]],[[],[[17,[-1,-2]]],16,[[24,[23]]]],[[],[[5,[-1,-2]]],[],[]],0,0,0,0,0,0,[[[13,[-1,-2,-3]],[13,[-1,-2,-3]]],[[32,[27]]],[],[],[[24,[23]]]],[[[17,[-1,-2]],[17,[-1,-2]]],[[32,[27]]],[],[[24,[23]]]],[[[5,[-1,-2]],[9,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[5,[-1,-2]],[5,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[5,[-1,-2]],[6,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[5,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[9,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[6,[-1,-2]],[6,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[9,[-1,-2]],[6,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[9,[-1,-2]],[5,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[9,[-1,-2]],[9,[-1,-3]]],[[32,[27]]],[],[[24,[23]]],[[24,[23]]]],[[[5,[-1,-2]]],[[32,[-1]]],[],[]],[-1,2,56],[-1,2,[]],0,[[[13,[-2,-3,-4]],-1],[[32,[-3]]],[16,40],[[50,[-1]],16],[],[[24,[23]]]],[[[17,[-2,-3]],-1],42,[16,40],[[50,[-1]],16],[[24,[23]]]],[[[5,[-1,-2]],21],-1,[],[]],[[[9,[-1,-2]],21],-1,[],[]],[[[13,[-2,-3,-4]],-1],[[32,[[2,[-2,-3]]]]],[16,40],[[50,[-1]],16],[],[[24,[23]]]],0,[[[13,[-1,-2,-3]],-4],2,16,[],[[24,[23]]],55],[[[5,[-1,-2]],-3],2,[],[],55],[[[9,[-1,-2]],-3],2,[],[],55],[[[8,[7]]],[[8,[7]]]],[[[8,[7]]],[[8,[7]]]],[[[8,[7]]],[[8,[7]]]],[[[8,[7]]],[[8,[7]]]],0,[[[5,[-1,-2]],-3],11,57,[],58],[[[9,[-1,-2]],-3],11,57,[],58],[[[13,[-1,-2,-3]]],21,[],[],[]],[[[17,[-1,-2]]],21,[],[]],[[[5,[-1,-2]]],21,[],[]],[[[6,[-1,-2]]],21,41,[]],[[[9,[-1,-2]]],21,[],[]],[26,21],[-1,[[11,[2,29]]],30],[-1,[[11,[2,29]]],30],[-1,[[11,[2,29]]],30],[-1,[[11,[2,29]]],30],[[[5,[-1,-2]],21,21],42,[],[[24,[23]]]],[[[5,[-1,-2]]],2,16,[]],[[[5,[-1,-2]],-3],2,[],[],55],[[[5,[-1,-2]],-3],2,[],[],55],0,0,0,[[[5,[-1,-2]],21],-1,[],[]],[[[9,[-1,-2]],21],-1,[],[]],[[[17,[-2,-3]],-1],[[32,[-2]]],[16,40],[[50,[-1]],16,16],[[24,[23]]]],0,[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[5,[-1,-2]],21],2,[],[]],[[[19,[-1,14]]],[[5,[-1,-2]]],[],[[24,[23]]]],[[[19,[-1,14]]],[[5,[-1,-2]]],[],[[24,[23]]]],[[[8,[-1]]],[[6,[-1,-2]]],[],[[24,[23]]]],[[[8,[-1]]],[[6,[-1,-2]]],[],[[24,[23]]]],[[[5,[-1,-2]],[19,[-1,14]]],[[11,[2,2]]],[],[[24,[23]]]],[-1,[[11,[[3,[-2,-3]],[59,[-2]]]]],[],[],4],[-1,[[11,[[3,[-2,-3]],[59,[-2]]]]],[],[],4],[-1,[[11,[[3,[-2,-3]],[59,[-2]]]]],[],[],4],[-1,[[11,[[3,[-2,-3]],[59,[-2]]]]],[],[],4],[[[5,[-1,-2]],-3],[[11,[2,2]]],[],[[24,[23]]],[60,61]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[15,[-1,-2,14]]],[[11,[[13,[-1,-2,-3]]]]],16,[],[[24,[23]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[18,[-1,14]]],[[11,[[17,[-1,-2]]]]],16,[[24,[23]]]],[[[19,[-1,14]]],[[11,[[5,[-1,-2]]]]],[],[[24,[23]]]],[-1,[[11,[-2]]],[],[]],[[[8,[-1]]],[[11,[[6,[-1,-2]]]]],[],[[24,[23]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[19,[-1,14]]],[[11,[[9,[-1,-2]]]]],[],[[24,[23]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[32,[[2,[-2,-3]]]]],[],[],31],[[[13,[-1,-2,-3]],-1,-2],[[11,[[32,[-2]],[2,[-1,-2]]]]],16,[],[[24,[23]]]],[[[17,[-1,-2]],-1],[[11,[42,-1]]],16,[[24,[23]]]],[[[5,[-1,-2]],21,-1],[[11,[2,-1]]],[],[[24,[23]]]],[[[9,[-1,-2]],21,-1],[[11,[2,2]]],[],[[24,[23]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[-1,-2],[[32,[-3]]],[],41,[]],[[[13,[-1,-2,-3]],-4],[[11,[[13,[-1,-5,-3]],-6]]],16,[],[[24,[23]]],55,[],[]],[[[13,[-1,-2,-3]],-4],[[32,[[13,[-1,-2,-3]]]]],16,[],[[24,[23]]],55],[[[17,[-1,-2]],-3],[[32,[[17,[-1,-2]]]]],16,[[24,[23]]],55],[[[5,[-1,-2]],-3],[[32,[[5,[-1,-2]]]]],[],[[24,[23]]],55],[[[9,[-1,-2]],-3],[[32,[[9,[-1,-2]]]]],[],[[24,[23]]],55],[[[5,[-1,-2]],-1],[[11,[2,-1]]],[],[[24,[23]]]],[[[9,[-1,-2]],-1],[[11,[2,2]]],[],[[24,[23]]]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],64],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,-1],-2,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[21,[[5,[-1,-2]]],[],[[24,[23]]]],[[],[[5,[-1,-2]]],[],[[24,[23]]]],0,0,[-1,[[11,[[20,[7]],2]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[[67,[66]],66,68],2],0,[[[67,[66]],66,68],[[67,[66]]]],[[],[[8,[68]]]],[[[69,[-1]]],[[32,[-1]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[70,71],66],[[70,71],66],[[[67,[66]],66,68],[[11,[2,2]]]],0,[[-1,-2],68,[],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[69,[-1]]],[[69,[-1]]],22],[72,72],[68,68],[71,71],[70,70],[[[67,[-1]]],[[67,[-1]]],22],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[11,[[69,[-2]],29]]],30,31],[-1,[[11,[72,29]]],30],[-1,[[11,[68,29]]],30],[-1,[[11,[71,29]]],30],[-1,[[11,[70,29]]],30],[-1,[[11,[[67,[-2]],29]]],30,31],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[],72],[[],68],[[],71],[[],70],[[],[[67,[-1]]],73],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[11,[68]]],33],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[[[69,[-1]],-2],2,41,[39,40]],[[72,-1],2,[39,40]],[[68,-1],2,[39,40]],[[71,-1],2,[39,40]],[[70,-1],2,[39,40]],[[[67,[-1]],-2],2,41,[39,40]],[[[69,[-1]],[69,[-1]]],42,74],[[72,72],42],[[68,68],42],[[71,71],42],[[70,70],42],[[[67,[-1]],[67,[-1]]],42,74],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],0,[[75,71],72],[[75,71],66],[[[69,[-1]],43],45,28],[[72,43],45],[[68,43],45],[[71,43],45],[[70,43],45],[[[67,[-1]],43],45,28],[[[32,[-1]]],[[69,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[42,72],[-1,-1,[]],[-1,-1,[]],[2,70],[[[2,[[32,[66]],72]]],70],[[[32,[66]]],70],[-1,-1,[]],[72,70],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[67,[-1]],68],-1,[]],[-1,71,[]],[[[67,[-1]],68],-1,[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[[69,[-1]]],42,[]],[[[69,[-1]]],42,[]],[[],21],[[],21],[-1,[[67,[-2]]],76,[]],[[],[[8,[68]]]],[[-1,-2],72,[],[]],[[70,71],72],0,0,0,[70,2],[[[67,[66]],66,68],2],[[68,-1],11,58],[[[67,[-1]],-1,-2],2,22,[[77,[68]]]],[[[69,[-1]]],21,41],[72,21],[68,21],[71,21],[70,21],[[[67,[-1]]],21,41],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[66]]],66],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],66,[],[]],0,[[-1,66],78,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[79,[-1]]],2,[]],[21,-1,[]],[21,-1,[]],[21,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[79,[-1]]],[[32,[-1]]],[]],[[[79,[-1]]],[[32,[-1]]],[]],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[79,[-1]]],-1,73],[-1,-2,65,[]],[[[79,[-1]],-1],2,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[32,[-2]]],65,[]],[[[19,[7]]],80],[[],[[19,[7]]]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,[[11,[2]]]],[82,82],[[-1,-2],2,[],[]],[81,32],[-1,[[11,[82,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[],82],[21,-1,[]],[21,-1,[]],[21,2],[[82,-1],2,[39,40]],[[82,82],42],[82,42],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[82,[20,[7]]],[[11,[[32,[-1]],83]]],31],[-1,[[19,[7,14]]],[]],[[],21],[-1,-2,[],[]],[82,[[84,[[20,[7]],[19,[7,14]],14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[[],42],[81,[[11,[32]]]],[[],82],[82,42],[[82,[20,[7]],-1],[[11,[2,83]]],[41,85]],[82,21],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[[],[[64,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,86],[[-1,-2],2,[],[]],[21,-1,[]],[21,-1,[]],[21,2],[[86,86],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[86,43],45],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[87,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[[87,-1],2,[39,40]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[88,66],[88,66],[[],66],[[],66],[87,21],[[],2],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[66,66],66],[[66,66],2],[[66,47],66],[[66,47],66],[[66,66],42],[[66,66],42],[[66,66],42],[[66,66],42],[[66,66],42],[[66,66],42],[[66,66],42],[[66,66],42],[[66,66],42],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[66,66],[[32,[2]]]],[[66,66],[[32,[66]]]],[[66,66],[[32,[66]]]],[[66,47],[[32,[66]]]],[[66,66],[[32,[47]]]],[[66,47],[[32,[66]]]],[[66,66],[[32,[2]]]],[[66,66],[[32,[66]]]],[[66,66],[[32,[66]]]],[[66,-1],68,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[66,66],[81,81],[89,89],[[[90,[-1]]],[[90,[-1]]],40],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[90,[-1]],[90,[-1]]],27,40],[[95,95],95],[-1,[[11,[-2,29]]],30,[]],[-1,[[11,[66,29]]],30],[-1,[[11,[81,29]]],30],[-1,[[11,[[90,[-2]],97]]],98,40],[-1,[[11,[[90,[-2]],29]]],30,[]],[-1,[[11,[91,29]]],30],[-1,[[11,[92,29]]],30],[-1,[[11,[93,29]]],30],[-1,[[11,[94,29]]],30],[-1,[[11,[95,29]]],30],[-1,[[11,[96,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[-1,[99,[-2]]],[[11,[100,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[],66],[[],81],[[],89],[[],[[90,[-1]]],40],[[],95],0,0,[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[[90,[-1]],[90,[-1]]],[[11,[27,97]]],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[11,[66]]],33],[-1,[[11,[[90,[-2]]]]],33,40],[[[90,[-1]],-2],[[11,[-1]]],34,33],[-1,[[11,[91]]],33],[-1,[[11,[92]]],33],[-1,[[11,[93]]],33],[-1,[[11,[96]]],33],[[66,-1],66,101],[[66,47],66],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[-1,[[19,[7,14]]],[]],[81,[[19,[7,14]]]],[[[102,[-1]]],[[19,[7,14]]],41],[[[90,[-1]],-2],[[11,[2,97]]],40,103],[[-1,-2],2,[],[39,40]],[[66,-1],2,[39,40]],[[81,-1],2,[39,40]],[[[102,[-1]],-2],2,41,[39,40]],[[[90,[-1]],-2],2,[],[39,40]],[[91,-1],2,[39,40]],[[92,-1],2,[39,40]],[[93,-1],2,[39,40]],[[94,-1],2,[39,40]],[[95,-1],2,[39,40]],[[96,-1],2,[39,40]],[[],[[32,[21]]]],[[[90,[-1]]],[[11,[104,97]]],40],[-1,21,[]],0,[[66,66],42],[[[90,[-1]],[90,[-1]]],42,40],[[91,91],42],[[92,92],42],[[93,93],42],[[94,94],42],[[95,95],42],[[96,96],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,70],-2,[],[[105,[23]]]],[91,42],[93,42],[[66,43],[[11,[2,44]]]],[[66,43],[[11,[2,44]]]],[[89,43],[[11,[2,44]]]],[[[90,[-1]],43],[[11,[2,44]]],40],[[91,43],[[11,[2,44]]]],[[92,43],[[11,[2,44]]]],[[93,43],[[11,[2,44]]]],[[93,43],[[11,[2,44]]]],[[94,43],[[11,[2,44]]]],[[95,43],[[11,[2,44]]]],[[96,43],[[11,[2,44]]]],[-1,-1,[]],[[[2,[47,47]]],66],[47,66],[-1,-1,[]],[-1,-1,[]],[-1,[[102,[-1]]],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[91,93],[92,93],[106,93],[-1,-1,[]],[-1,-1,[]],[107,95],[108,96],[109,96],[110,96],[46,96],[111,96],[106,96],[-1,-1,[]],[47,66],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[47,47],66],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[]],[[],-1,[]],[[],-1,73],[[],23],[[],[[32,[23]]]],[[],23],[[81,[20,[7]]],[[11,[[32,[-1]],83]]],31],[[-1,-2],47,[48,40],49],[[[90,[-1]],-2],2,40,52],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[[102,[-1]]],42,41],[66,42],[81,21],0,[[66,66],66],[[],21],[[],21],[[],21],[[],21],[[],66],[[],-1,[]],[[66,66],66],[[],-1,[]],[[],66],[[66,47],66],[[66,-1],66,[[112,[47]],101]],[[],81],[[[90,[-1]],[90,[-1]]],[[32,[27]]],40],[[66,-1],72,[]],[[],[[11,[2,93]]]],[66,2],[96,2],0,[66,47],[66,47],0,0,[[81,[20,[7]],-1],[[11,[2,83]]],41],[66,47],[66,47],0,[[81,[20,[7]],-1],2,41],0,[[66,66],2],[[66,66],66],[[66,47],66],[[66,47],66],[[66,23],66],[[66,66],2],[[66,66],66],[[66,-1],11,58],[[[90,[-1]],-2],11,40,58],[[91,-1],11,58],[[92,-1],11,58],[[93,-1],11,58],[[96,-1],11,58],[[66,47],66],[[66,47],66],[-1,21,[]],[66,21],[81,21],[[[102,[-1]]],21,41],[91,21],[92,21],[93,21],[94,21],[95,21],[96,21],[-1,[[11,[2,29]]],30],[93,[[32,[113]]]],0,[96,96],[[66,66],66],[[66,66],2],[[66,47],66],[[66,47],66],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,114,[]],[-1,114,[]],[[66,66,66],[[32,[66]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],-3,[],65,[]],[[81,-1],-2,65,[]],[[[102,[-1]],-2],-3,41,65,[]],[94,[[11,[95,93]]]],[[[90,[-1]],[90,[-1]]],[[11,[27,97]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[91,42],[93,42],[[66,-1],66,[]],[46,107],[[-1,66],[[115,[70]]],[]],[[],66],[[],66],[[[90,[-1]]],2,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-2,2,41,[[116,[-1]]]],[[-1,-3],2,[],[],[[116,[-2]]]],[[-2,-4],2,[],[[116,[-1]]],41,[[116,[-3]]]],[[-2,-4,-6],2,[],[[116,[-1]]],[],[[116,[-3]]],41,[[116,[-5]]]],[[-1,-3],2,[117,118],41,[[116,[-2]]]],[-1,2,60],[[-1,-2],2,[],60],[-2,2,[],[[116,[-1]]]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],21],0,0,0,0,[-1,[[119,[-2]]],[],[]],[-1,[[119,[-2]]],[],[]],[-1,[[119,[-2]]],[],[]],[[23,[32,[[8,[7]]]]],120],[[-2,23,[32,[[8,[7]]]]],120,[],[40,[116,[-1]]]],[[-1,23,[32,[[8,[7]]]]],120,[]],[-2,42,[],[[116,[-1]]]],[[-2,-4],42,[],[[116,[-1]]],[],[[116,[-3]]]],[-1,42,[117,118]],[-2,42,[],[[116,[-1]]]],[-1,42,[]],[[[121,[-1,-2]]],[[121,[-1,-3]]],[],[],[]],[[],[[32,[21]]]],[-2,[[32,[21]]],[],[[116,[-1]]]],[[-2,-4],[[32,[21]]],[],[[116,[-1]]],[],[[116,[-3]]]],[-1,[[32,[21]]],[117,118]],[[[8,[7]]],[[32,[21]]]],[[],[[32,[21]]]],[-2,[[32,[21]]],[],[[116,[-1]]]],[[-2,-4],[[32,[21]]],[],[[116,[-1]]],[],[[116,[-3]]]],[[[8,[7]]],[[32,[21]]]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[]],[[]],[[]],[[]],[[[121,[-1,-2]]],[[121,[-1,-2]]],[],[]],[[[122,[-1]]],[[122,[-1]]],[]],[[[123,[-1]]],[[123,[-1]]],[]],[-2,[],[],[[116,[-1]]]],[-1,[[121,[[2,[-2]]]]],[],[]],[21,2],[21,2],[21,2],[21,2],[21,2],[[],42],[[],[[20,[7]]]],[[],[[20,[7]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[]],[-2,[],[],[[116,[-1]]]],[[-2,-4],[],[],[[116,[-1]]],[],[[116,[-3]]]],[-1,[],[117,118]],[[],23],[[],23],0,[[],[[20,[7]]]],[-2,[[19,[7]]],[],[[116,[-1]]]],[[-2,-4],[[19,[7]]],[],[[116,[-1]]],[],[[116,[-3]]]],[-1,[[19,[7]]],[117,118]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[-2,-4],2,[],[[116,[-1]]],[],[[116,[-3]]]],[[-2,-4,-6],2,[],[[116,[-1]]],[],[[116,[-3]]],[],[[116,[-5]]]],[[-1,-3],2,[117,118],[],[[116,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[124,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[[]],[[]],[[[19,[7]]]],[[[19,[7]]]],[[[19,[7]]]],[-2,[],[],[[116,[-1]]]],[-1,122,[]],[[-2,[19,[7]]],[],[],[[116,[-1]]]],[[-1,[19,[7]]],122,[]],[[]],[[]],[[]],[[[19,[7]]]],[[[19,[7]]]],[[[19,[7]]]],[-2,[],[],[[116,[-1]]]],[-1,[[121,[[2,[-2]]]]],[],[]],[[-2,[19,[7]]],[],[],[[116,[-1]]]],[[-1,[19,[7]]],[[121,[[2,[-2]]]]],[],[]],[-2,[[121,[-3]]],[],[40,[116,[-1]]],[]],[-1,[[121,[-2]]],[],[]],[[],[[121,[-1]]],[]],[[],2],[[[121,[-1,-2]]],[[8,[7]]],[],[]],[[[122,[-1]]],[[8,[7]]],[]],[-2,[[32,[-3]]],[],[[116,[-1]]],[]],[-2,[[32,[-3]]],[],[[116,[-1]]],[]],[[-2,-4],[[32,[-5]]],[],[[116,[-1]]],[],[[116,[-3]]],[]],[-1,[[32,[-2]]],[117,118],[]],0,[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,2,[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3]]],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,2,[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3]]],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,2,[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3]]],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[2,[-2]]],[],[]],[-1,-2,65,[]],[[-2,-3],-4,[],[[116,[-1]]],65,[]],[[-2,-4,-5],-6,[],[[116,[-1]]],[],[[116,[-3]]],65,[]],[[-1,-2],-3,[117,118],65,[]],[-1,-2,65,[]],[[-2,-3],-4,[],[[116,[-1]]],65,[]],[[-2,-4,-5],-6,[],[[116,[-1]]],[],[[116,[-3]]],65,[]],[[-1,-2],-3,[117,118],65,[]],[-1,-2,65,73],[[-2,-3],-4,[],[[116,[-1]]],65,73],[[[19,[7]],[19,[7]]],[[121,[-1,-2]]],[],[]],[[[19,[7]],[19,[7]]],[[122,[-1]]],[]],[[[121,[-1,-2]]],32,[],125],[[[122,[-1]]],32,[]],[[[123,[-1]]],32,[]],[-1,[[126,[-2]]],[],[]],[-1,[[126,[-2]]],[],[]],[-1,[[126,[-2]]],[],[]],[-1,[[127,[-2]]],[],[]],[-1,[[127,[-2]]],[],[]],[-1,[[127,[-2]]],[],[]],[-1,[[126,[-2]]],[],[]],[-1,[[126,[-2]]],[],[]],[-1,[[126,[-2]]],[],[]],[-1,[[127,[-2]]],[],[]],[-1,[[127,[-2]]],[],[]],[-1,[[127,[-2]]],[],[]],[[[8,[7]],[8,[7]]],2],[[],[[8,[7]]]],[[],[[8,[7]]]],[[[121,[-1,-2]]],[[8,[7]]],[],[]],[[[122,[-1]]],[[8,[7]]],[]],[-2,2,[],[[116,[-1]]]],[-2,2,[],[[116,[-1]]]],[[-2,-4],2,[],[[116,[-1]]],[],[[116,[-3]]]],[-1,2,[117,118]],[[[32,[23]]],128],[[-2,[32,[23]]],128,[],[40,[116,[-1]]]],[[-1,[32,[23]]],128,[]],[[],2],[-2,2,[],[[116,[-1]]]],[[-2,-4],2,[],[[116,[-1]]],[],[[116,[-3]]]],[-1,2,[117,118]],[[[121,[-1,-2]],[19,[7]]],2,[],[]],[[[122,[-1]],[19,[7]]],2,[]],0,[[[8,[7]],[8,[7]]],[[20,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[]],[-1,[[129,[-2]]],[],[]],[-1,[[129,[-2]]],[],[]],[-1,[[129,[-2]]],[],[]],[[-2,-3],2,[],[[116,[-1]]],[[116,[-1]]]],[[-2,-4,-5,-6],2,[],[[116,[-1]]],[],[[116,[-3]]],[[116,[-1]]],[[116,[-3]]]],[[-1,-2],2,[117,118],[117,118]],[[]],[-2,[],[],[[116,[-1]]]],[[-2,-4],[],[],[[116,[-1]]],[],[[116,[-3]]]],[-1,[],[117,118]],0,[-1,[[11,[[32,[-2]],2]]],65,[]],[-1,2,55],[-1,2,55],[-1,2,55],[[[32,[[19,[7]]]],-1],[[32,[[19,[7]]]]],55],[-1,2,55],[-2,[[11,[2,2]]],[],[[116,[-1]]]],[[-2,-4],[[11,[2,2]]],[],[[116,[-1]],22],[],[[116,[-3]]]],[[-2,-4,-6],[[11,[2,2]]],[],[[116,[-1]],22],[],[[116,[-3]],22],[],[[116,[-5]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[],[[11,[-1,2]]],[]],[-2,[[11,[-3,2]]],[],[[116,[-1]]],[]],[[-2,-4],[[11,[-5,2]]],[],[[116,[-1]]],[],[[116,[-3]]],[]],[-1,[[11,[-2,2]]],[117,118],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2,-3]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],[],[[116,[-1]]],65,[],[]],[[-2,-4,-5],[[11,[-6,-7]]],[],[[116,[-1]]],[],[[116,[-3]]],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[-1,[[11,[-2,-3]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],[],[[116,[-1]]],65,[],[]],[[-2,-4,-5],[[11,[-6,-7]]],[],[[116,[-1]]],[],[[116,[-3]]],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[130,[8,[7]]],[[123,[[2,[[19,[7]],-1]]]]],[31,40]],[[130,[8,[7]]],[[123,[[2,[-1,-2]]]]],[31,40],[31,40]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,131],[[],-1,[]],[[130,[32,[23]],[32,[[8,[7]]]]],120],[130,130],[131,131],[132,132],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[130,130],27],[-1,[[11,[128,29]]],30],[-1,[[11,[120,29]]],30],[-1,[[11,[130,29]]],30],[-1,[[11,[132,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[120,[[2,[[32,[[19,[7,14]]]],23,23,23]]]],[[],132],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[21,2],[21,2],[[128,-1],2,[39,40]],[[120,-1],2,[39,40]],[[130,-1],2,[39,40]],[[132,-1],2,[39,40]],[[130,130],42],[[131,131],42],[[132,132],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[130,[8,[7]]],42],[[130,43],[[11,[2,44]]]],[[131,43],[[11,[2,44]]]],[[132,43],[[11,[2,44]]]],[[132,43],[[11,[2,44]]]],[-1,-1,[]],[120,128],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[133,[[11,[-1,114]]],[]],[133,[[11,[-1,114]]],[]],[133,[[11,[-1,114]]],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[134,[[32,[[2,[131,[8,[7]]]]]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[130,[8,[7]]],[[32,[-1]]],[31,40]],[[-1,-2],47,[48,40],49],[[130,[8,[7]],-1],-1,[31,40]],[[130,[8,[7]]],-1,[31,40,73]],[[130,[8,[7]],-1],-2,65,[31,40]],[[130,[8,[7]]],[[32,[[19,[7]]]]]],[[130,-1],2,52],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,133],[[11,[114]]],[]],[[-1,133],[[11,[114]]],[]],[[-1,133],[[11,[114]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,134],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[130,[[8,[7]]]],[[130,[8,[7]]],2],[[130,[32,[23]]],128],[[130,[8,[7]]],[[32,[23]]]],0,0,[23,[[32,[131]]]],[[[8,[7]]],130],[[[19,[7,14]]],130],[131,[[8,[7]]]],[[130,130],[[32,[27]]]],[130,134],[[130,[8,[7]],-1],2,41],[[130,[8,[7]],[8,[7]]],2],[[130,132],[[19,[7]]]],[128,21],[120,21],[130,21],[132,21],[132,[[32,[23]]]],[130,[[8,[7]]]],[[130,[8,[7]]],[[32,[-1]]],[31,40]],[[130,[8,[7]],-1],-1,[135,40]],[[130,[8,[7]]],-1,[135,40,73]],[[130,[8,[7]],-1],-2,65,[135,40]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,114,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[7,[[11,[132,2]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[130,130],42],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[8,[7]]],42,76],[[-1,[8,[7]]],[[32,[-2]]],76,[31,40]],[[-1,[8,[7]],-2],-2,76,[31,40]],[[-1,[8,[7]]],-2,76,[31,40,73]],[[-1,[8,[7]],-2],-3,76,65,[31,40]],[[-1,[8,[7]]],[[32,[[19,[7]]]]],76],[[-1,[8,[7]]],2,76],[[-1,[8,[7]],-2],2,76,41],[[-1,[8,[7]],[8,[7]]],2,76],[[-1,[8,[7]]],[[32,[-2]]],76,[31,40]],[[-1,[8,[7]],-2],-2,76,[31,40]],[[-1,[8,[7]]],-2,76,[31,40,73]],[[-1,[8,[7]],-2],-3,76,65,[31,40]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[7]],[8,[7]],[8,[7]],[32,[23]],[32,[[8,[7]]]]],120],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[136,[-1]]],[[136,[-1]]],[]],[[[137,[-1,-2,-3]]],[[137,[-1,-2,-3]]],[],[],138],[21,2],[21,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[8,[7]],[8,[7]],[8,[7]]],[[32,[-1]]],[31,40]],[[[8,[7]],[8,[7]],[8,[7]]],42],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[7]],[8,[7]]],2],[[[8,[7]],[8,[7]]],2],[[[8,[7]],[8,[7]],[8,[7]]],2],[-1,[[2,[-2,-3]]],[],[],[]],[-1,[[2,[-2,-3]]],[],[],[]],[[[8,[7]],[8,[7]]],[[136,[-1]]],[]],[[[8,[7]],[8,[7]]],[[137,[-1,-2,-3]]],[],[],138],[[[136,[-1]]],[[32,[[2,[[19,[7]],-1]]]]],[31,40]],[[[137,[-1,-2,-3]]],[[32,[[2,[-1,-2]]]]],[31,40],[31,40],138],[[[8,[7]],[8,[7]],[8,[7]],-1],2,41],[[[8,[7]],[8,[7]],[8,[7]]],2],[[[8,[7]],[8,[7]]],[[121,[[2,[[19,[7]],-1]]]]],[31,40]],[[[8,[7]],[8,[7]],[8,[7]]],[[121,[[2,[[19,[7]],-1]]]]],[31,40]],[[[8,[7]],[8,[7]]],[[121,[[2,[-1,-2]]]]],[31,40],[31,40]],[[[8,[7]],[8,[7]],[8,[7]]],[[121,[[2,[-1,-2]]]]],[31,40],[31,40]],[[[8,[7]],[8,[7]],-1],[[32,[-2]]],[41,40],[31,40]],[[[8,[7]],[8,[7]],[8,[7]]],[[32,[-1]]],[31,40]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[7]],[8,[7]],[8,[7]]],[[136,[-1]]],[]],[[[8,[7]],[8,[7]],[8,[7]]],[[137,[-1,-2,-3]]],[],[],138],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],139],[21,-1,[]],[21,-1,[]],[139,2],[21,2],[-1,-1,[]],[46,139],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],139],[[139,46],2],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[11,[-2,-3]]],65,[],[[105,[96]]]],[[],42],[-1,[[11,[-2,-3]]],65,[],[[105,[96]]]],[-1,[[11,[-2,-3]]],65,[],[[105,[96]]]],[-1,-2,65,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-2,-4],2,140,[[116,[-1]]],41,[[116,[-3]]]],[[-1,-3],2,[117,116,118],41,[[116,[-2]]]],[[-2,-4,-6],2,140,[[116,[-1]]],140,[[116,[-3]]],41,[[116,[-5]]]],[[-2,-4,-6],2,[],[[116,[-1]]],[],[[116,[-3]]],41,[[116,[-5]]]],[[-2,-4],2,140,[[116,[-1]]],41,[[116,[-3]]]],[[-2,-4],2,[],[[116,[-1]]],41,[[116,[-3]]]],[[-1,-3],2,[117,118],41,[[116,[-2]]]],[[-1,-3],2,[117,118],41,[[116,[-2]]]],[-2,2,41,[[116,[-1]]]],[-2,2,41,[[116,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[46]],[19,[141]]],2],[[[19,[46]],[19,[141]]],2],[[[19,[46]],[19,[141]]],2],[[[19,[46]],[19,[141]]],2],[[[19,[46]],[19,[141]]],2],[[[19,[46]],[19,[141]]],2],[[[19,[46]],[19,[141]]],2],[[23,[32,[[8,[7]]]]],120],[[23,[32,[[8,[7]]]]],120],[[23,[32,[[8,[7]]]]],120],[[23,[32,[[8,[7]]]]],120],[[23,[32,[[8,[7]]]]],120],[[-1,23,[32,[[8,[7]]]]],120,[]],[[-2,23,[32,[[8,[7]]]]],120,140,[40,[116,[-1]]]],[[-2,23,[32,[[8,[7]]]]],120,[],[[116,[-1]]]],[[-1,23,[32,[[8,[7]]]]],120,[]],[[-1,23,[32,[[8,[7]]]]],120,[]],[-2,42,140,[[116,[-1]]]],[-1,42,[117,118]],[[-2,-4],42,140,[[116,[-1]]],140,[[116,[-3]]]],[[-2,-4],42,[],[[116,[-1]]],[],[[116,[-3]]]],[-2,42,140,[[116,[-1]]]],[-2,42,[],[[116,[-1]]]],[-1,42,[117,118]],[-1,42,[117,118]],[-2,42,[],[[116,[-1]]]],[-1,42,[]],[[],142],[[],142],[[],[[20,[7]]]],[[],[[20,[7]]]],[[[8,[7]]],[[11,[[2,[[8,[7]]]],29]]]],[[[8,[7]]],[[11,[[2,[[8,[7]]]],29]]]],[-2,[[32,[21]]],140,[[116,[-1]]]],[-1,[[32,[21]]],[117,118]],[[-2,-4],[[32,[21]]],140,[[116,[-1]]],140,[[116,[-3]]]],[-2,[[32,[21]]],140,[[116,[-1]]]],[-1,[[32,[21]]],[117,118]],[[],[[32,[21]]]],[[-2,-4],[[32,[21]]],140,[[116,[-1]]],140,[[116,[-3]]]],[-2,[[32,[21]]],140,[[116,[-1]]]],[[],[[32,[21]]]],[[[8,[7]]],[[11,[29]]]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[],[[121,[[2,[-1,-2]],[0,[-3]]]]],140,140,143],[[],[[121,[[2,[-1]],[0,[-2]]]]],140,144],[[],[[121,[[2,[-1,-2,-3]]]]],140,140,140],[[],[[121,[[2,[-1,-2]]]]],140,140],[[],[[121,[[2,[-1]]]]],140],[[]],[-1,[[121,[[2,[-2]],[0,[-3]]]]],[],140,144],[-2,[[121,[[2,[-3,-4]]]]],140,[[116,[-1]]],140,140],[-1,[[121,[[2,[-2]],2]]],[],[]],[-1,[[121,[[2,[-2]]]]],[],140],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[[],42],[[],42],[-1,[[19,[7]]],[117,118]],[-1,[[19,[7]]],[117,118]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[32,[-1]]],[],[]],[[[32,[-1]]],[],140],[[[32,[-1]]],[],140],[[[32,[-1]]],[],140],[[],[[32,[-1]]],[]],[[],[[32,[-1]]],140],[[],[[32,[-1]]],140],[[],[[32,[-1]]],140],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-2,[],140,[[116,[-1]]]],[-1,[],[117,118]],[[-2,-4],[],[],[[116,[-1]]],[],[[116,[-3]]]],[[-2,-4],[],140,[[116,[-1]]],140,[[116,[-3]]]],[-2,[],[],[[116,[-1]]]],[-2,[],140,[[116,[-1]]]],[-1,[],[117,118]],[-1,[],[117,118]],[[]],[[]],[[],[[20,[7]]]],[[],[[20,[7]]]],[-2,[[19,[7]]],140,[[116,[-1]]]],[-1,[[19,[7]]],[117,118]],[[-2,-4],[[19,[7,14]]],[],[[116,[-1]]],[],[[116,[-3]]]],[[-2,-4],[[19,[7]]],140,[[116,[-1]]],140,[[116,[-3]]]],[-2,[[19,[7,14]]],[],[[116,[-1]]]],[-2,[[19,[7]]],140,[[116,[-1]]]],[-1,[[19,[7,14]]],[117,118]],[-1,[[19,[7]]],[117,118]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],142],[[],23],[[-2,-4],2,140,[[116,[-1]]],140,[[116,[-3]]]],[[-1,-3],2,[117,116,118],140,[[116,[-2]]]],[[-2,-4,-6],2,[],[[116,[-1]]],[],[[116,[-3]]],[],[[116,[-5]]]],[[-2,-4,-6],2,140,[[116,[-1]]],140,[[116,[-3]]],140,[[116,[-5]]]],[[-2,-4],2,140,[[116,[-1]]],140,[[116,[-3]]]],[[-2,-4],2,[],[[116,[-1]]],[],[[116,[-3]]]],[[-1,-3],2,[117,118],[],[[116,[-2]]]],[[-1,-3],2,[117,118],140,[[116,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[121,[[2,[-1,-2]],[0,[-3]]]]],140,140,143],[[],[[121,[[2,[-1]],[0,[-2]]]]],140,144],[[],[[121,[[2,[-1,-2,-3]]]]],140,140,140],[[],[[121,[[2,[-1,-2]]]]],140,140],[[],[[121,[[2,[-1]]]]],140],[[]],[[[19,[7]]],[[121,[[2,[-1,-2]],[0,[-3]]]]],140,140,143],[[[19,[7]]],[[121,[[2,[-1]],[0,[-2]]]]],140,144],[[[19,[7]]],[[121,[[2,[-1,-2,-3]]]]],140,140,140],[[[19,[7]]],[[121,[[2,[-1,-2]]]]],140,140],[[[19,[7]]],[[121,[[2,[-1]]]]],140],[[[19,[7,14]]]],[-2,[[121,[[2,[-1,-3]]]]],140,[[116,[-1]]],140],[-1,122,[]],[-2,[[122,[-3]]],140,[[116,[-1]]],140],[-1,122,[]],[-1,122,[]],[[-1,[19,[7]]],122,[]],[[-2,[19,[7]]],[[122,[-3]]],140,[[116,[-1]]],140],[[-1,[19,[7,14]]],122,[]],[[-1,[19,[7]]],122,[]],[[],[[122,[-1]]],140],[[],122],[[],[[122,[[2,[-1,-2]]]]],140,140],[[],[[122,[-1]]],140],[[],122],[[]],[[[19,[7]]],122],[[[19,[7]]],[[122,[[2,[-1,-2]]]]],140,140],[[[19,[7]]],[[122,[-1]]],140],[[[19,[7]]],122],[[[19,[7,14]]]],[-2,[[122,[-1]]],140,[[116,[-1]]]],[-1,[[121,[[2,[-2]]]]],[],140],[-2,[[121,[[2,[-3,-4]]]]],140,[[116,[-1]]],140,140],[-1,[[121,[[2,[-2]]]]],[],140],[-1,[[121,[[2,[-2]],2]]],[],[]],[[-1,[19,[7]]],[[121,[[2,[-2]],[0,[-3]]]]],[],140,144],[[-2,[19,[7]]],[[121,[[2,[-3,-4]]]]],140,[[116,[-1]]],140,140],[[-1,[19,[7,14]]],[[121,[[2,[-2]],2]]],[],[]],[[-1,[19,[7]]],[[121,[[2,[-2]]]]],[],140],[-1,[[121,[-2]]],[],140],[-2,[[121,[-3,2]]],[],[[116,[-1]],40],[]],[-2,[[121,[-3]]],140,[40,[116,[-1]]],140],[-1,[[121,[-2]]],[],140],[-1,[[121,[-2,2]]],[],[]],[[],[[121,[-1,[0,[-2]]]]],140,143],[[],[[121,[-1]]],140],[[],[[121,[-1]]],140],[[],[[121,[-1]]],140],[[],[[121,[-1]]],140],[[],21],[[],21],[[],2],[[],2],[[],[[19,[7]]]],[[],[[19,[7]]]],[-1,[[19,[7]]],[117,118]],[-2,[[32,[-3]]],140,[[116,[-1]]],140],[-1,[[19,[7]]],[117,118]],[-2,[[32,[-3]]],140,[[116,[-1]]],140],[-2,[[32,[-3]]],[],[[116,[-1]]],[]],[-1,[[32,[-2]]],[117,118],140],[[-2,-4],[[32,[-5]]],[],[[116,[-1]]],[],[[116,[-3]]],[]],[[-2,-4],[[32,[-5]]],140,[[116,[-1]]],140,[[116,[-3]]],140],[-1,[[32,[-2]]],[117,118],140],[-1,[[32,[-2]]],[117,118],[]],[[-2,-3],-4,140,[[116,[-1]]],65,[]],[[-1,-2],-3,[117,118],65,[]],[[-2,-4,-5],-6,[],[[116,[-1]]],[],[[116,[-3]]],65,[]],[[-2,-4,-5],-6,140,[[116,[-1]]],140,[[116,[-3]]],65,[]],[[-2,-3],-4,140,[[116,[-1]]],65,[]],[[-2,-3],-4,[],[[116,[-1]]],65,[]],[[-1,-2],-3,[117,118],65,[]],[[-1,-2],-3,[117,118],65,[]],[-1,-2,65,[]],[-1,-2,65,[]],[[-2,-3],-4,140,[[116,[-1]]],65,[]],[[-1,-2],-3,[117,118],65,[]],[[-2,-4,-5],-6,[],[[116,[-1]]],[],[[116,[-3]]],65,[]],[[-2,-4,-5],-6,140,[[116,[-1]]],140,[[116,[-3]]],65,[]],[[-2,-3],-4,140,[[116,[-1]]],65,[]],[[-2,-3],-4,[],[[116,[-1]]],65,[]],[[-1,-2],-3,[117,118],65,[]],[[-1,-2],-3,[117,118],65,[]],[-1,-2,65,[]],[-1,-2,65,[]],[[-2,-3],-4,140,[[116,[-1]]],65,73],[-1,-2,65,73],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[-1,[[19,[7]]],[]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[-2,2,[],[[116,[-1]]]],[-2,2,140,[[116,[-1]]]],[-2,2,140,[[116,[-1]]]],[-1,2,[117,116,118]],[[-2,-4],2,[],[[116,[-1]]],[],[[116,[-3]]]],[[-2,-4],2,140,[[116,[-1]]],140,[[116,[-3]]]],[-2,2,[],[[116,[-1]]]],[-2,2,140,[[116,[-1]]]],[-1,2,[117,118]],[-1,2,[117,118]],[[],2],[[[32,[23]]],128],[[[32,[23]]],128],[[[32,[23]]],128],[[-2,[32,[23]]],128,[],[[116,[-1]]]],[[-2,[32,[23]]],128,140,[40,[116,[-1]]]],[[-1,[32,[23]]],128,[]],[[-1,[32,[23]]],128,[]],[-2,2,140,[[116,[-1]]]],[-1,2,[117,118]],[[-2,-4],2,[],[[116,[-1]]],[],[[116,[-3]]]],[[-2,-4],2,140,[[116,[-1]]],140,[[116,[-3]]]],[-2,2,[],[[116,[-1]]]],[-2,2,140,[[116,[-1]]]],[-1,2,[117,118]],[-1,2,[117,118]],[[],2],[[],2],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[19,[145]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[]],[[-2,-3],2,140,[[116,[-1]]],[[116,[-1]]]],[[-1,-2],2,[117,118],[117,118]],[[-2,-4,-5,-6],2,140,[[116,[-1]]],140,[[116,[-3]]],[[116,[-1]]],[[116,[-3]]]],[[-2,-4,-5,-6],2,[],[[116,[-1]]],[],[[116,[-3]]],[[116,[-1]]],[[116,[-3]]]],[[-2,-3],2,[],[[116,[-1]]],[[116,[-1]]]],[[-2,-3],2,140,[[116,[-1]]],[[116,[-1]]]],[[-1,-2],2,[117,118],[117,118]],[[-1,-2],2,[117,118],[117,118]],[-2,[],140,[[116,[-1]]]],[-1,[],[117,118]],[[-2,-4],[],[],[[116,[-1]]],[],[[116,[-3]]]],[[-2,-4],[],140,[[116,[-1]]],140,[[116,[-3]]]],[-2,[],[],[[116,[-1]]]],[-2,[],140,[[116,[-1]]]],[-1,[],[117,118]],[-1,[],[117,118]],[[]],[[]],[-1,[[146,[[19,[7]]]]],[]],[-1,2,55],[-1,2,55],[-1,2,55],[-1,2,55],[-1,2,55],[-1,2,55],[-1,[[11,[[32,[-2]],2]]],65,140],[-1,[[11,[[32,[-2]],2]]],65,[]],[-1,2,55],[-1,2,55],[-1,2,55],[-1,2,55],[-1,2,55],[[-2,-4],[[11,[2,2]]],140,[[116,[-1]]],41,[[116,[-3]]]],[[-2,-4,-6],[[11,[2,2]]],[],[[116,[-1]],22],[],[[116,[-3]],22],[],[[116,[-5]]]],[[-2,-4,-6],[[11,[2,2]]],140,[[116,[-1]],22],140,[[116,[-3]],22],41,[[116,[-5]]]],[[-2,-4],[[11,[2,2]]],[],[[116,[-1]],22],[],[[116,[-3]]]],[[-2,-4],[[11,[2,2]]],140,[[116,[-1]],22],41,[[116,[-3]]]],[-2,[[11,[2,2]]],[],[[116,[-1]]]],[-2,[[11,[2,2]]],41,[[116,[-1]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-2,[[11,[-3,2]]],140,[[116,[-1]]],140],[-1,[[11,[-2,2]]],[117,118],140],[[-2,-4],[[11,[-5,2]]],[],[[116,[-1]]],[],[[116,[-3]]],[]],[[-2,-4],[[11,[-5,2]]],140,[[116,[-1]]],140,[[116,[-3]]],140],[-2,[[11,[-3,2]]],[],[[116,[-1]]],[]],[-2,[[11,[-3,2]]],140,[[116,[-1]]],140],[-1,[[11,[-2,2]]],[117,118],140],[-1,[[11,[-2,2]]],[117,118],[]],[[],[[11,[-1,2]]],[]],[[],[[11,[-1,2]]],140],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[-2,-3],[[11,[-4,-5]]],140,[[116,[-1]]],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[[-2,-4,-5],[[11,[-6,-7]]],140,[[116,[-1]]],140,[[116,[-3]]],65,[],[]],[[-2,-4,-5],[[11,[-6,-7]]],[],[[116,[-1]]],[],[[116,[-3]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],140,[[116,[-1]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],[],[[116,[-1]]],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[-1,[[11,[-2,-3]]],65,[],[]],[-1,[[11,[-2,-3]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],140,[[116,[-1]]],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[[-2,-4,-5],[[11,[-6,-7]]],140,[[116,[-1]]],140,[[116,[-3]]],65,[],[]],[[-2,-4,-5],[[11,[-6,-7]]],[],[[116,[-1]]],[],[[116,[-3]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],140,[[116,[-1]]],65,[],[]],[[-2,-3],[[11,[-4,-5]]],[],[[116,[-1]]],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[[-1,-2],[[11,[-3,-4]]],[117,118],65,[],[]],[-1,[[11,[-2,-3]]],65,[],[]],[-1,[[11,[-2,-3]]],65,[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[7]],[32,[23]],[32,[[8,[7]]]]],120],[[[8,[7]]],42],[[[8,[7]]],42],[[[8,[7]]],[[32,[-1]]],[31,40]],[[[8,[7]],-1],-1,[31,40]],[[[8,[7]]],-1,[31,40,73]],[[[8,[7]],-1],-2,65,[31,40]],[[[8,[7]]],[[32,[[19,[7]]]]]],[[[8,[7]]],2],[[[8,[7]],[32,[23]]],128],[[[8,[7]],-1],2,[41,40]],[[[8,[7]],[8,[7]]],2],[[[8,[7]]],[[32,[-1]]],[31,40]],[[[8,[7]],-1],-1,[31,40]],[[[8,[7]]],-1,[31,40,73]],[[[8,[7]],-1],-2,65,[31,40]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],0,0,0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,65,[]],[[147,148]],[[-1,-2],2,[],76],[149,2],[149,2],[[-1,-2],150,[],[]],0,[[],[[32,[[2,[-1]]]]],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,[[32,[[69,[-2]]]]],[],[]],[-1,[[32,[69]]],[]],[-1,[[32,[69]]],[]],[[-1,151],[[11,[2,114]]],[]],[[-1,151],[[11,[2,114]]],[]],[[],-1,[]],[[],-1,[]],[[-1,-2],-3,[],[],[]],[[],66],[[],66],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[[152,[-1]],96]]],41],[-1,[[11,[[152,[-1]],96]]],41],[-1,2,[]],[-1,2,[]],[-1,[[11,[151,114]]],[]],[-1,[[11,[151,114]]],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[],[]],[-1,[],[]],[[],42],[[[8,[-1]],[8,[-1]],[19,[-1]]],2,[]],[[[8,[-1]],[8,[-1]],[19,[-1]]],2,[]],[[[8,[-1]],[8,[-1]],[8,[-1]]],2,[]],[-1,32,[]],[[],19],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[149,149],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[[[163,[-1]]],[[163,[-1]]],22],[[[164,[-1]]],[[164,[-1]]],22],[165,165],[166,166],[167,167],[147,147],[145,145],[168,168],[[[152,[-1,-2]]],[[152,[-1,-2]]],22,[22,169]],[170,170],[171,171],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[149,149],27],[[165,165],27],[[167,167],27],[[147,147],27],[[-1,-1],[[32,[27]]],[]],[[-1,-1],[[32,[27]]],74],[[[8,[-1]],[8,[-1]]],[[2,[[19,[-1]],[19,[-1]]]]],[]],[[[8,[-1]],[8,[-1]]],[[2,[[19,[-1]],[19,[-1]]]]],[]],[-1,42,[]],[[-1,-2],42,[],[]],[[[2,[-1,-2]]],42,[],[]],[-1,42,[]],[[-1,-2],42,[],[]],[-1,42,[]],[[-1,-2],42,[],[]],[-1,42,[]],[[-1,-2],42,[],[]],[-1,42,[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[-1,42,[]],[-1,42,74],[-1,42,[]],[-1,42,[]],[-1,42,[16,172]],[-1,42,172],[168,-1,[[105,[47]],173]],[[],21],[[],21],[[],21],[[],21],0,[[],[[32,[167]]]],[[],167],0,[-1,[[11,[2,96]]],[]],[-1,[[11,[2,96]]],[]],[[]],[-1,[[11,[149,29]]],30],[-1,[[11,[[163,[-2]],29]]],30,31],[-1,[[11,[[164,[-2]],29]]],30,31],[-1,[[11,[167,29]]],30],[-1,[[11,[147,29]]],30],[-1,[[11,[145,29]]],30],[-1,[[11,[[152,[-2,-3]],29]]],30,[],169],[-1,[[11,[170,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[],153],[[],154],[[],155],[[],156],[[],157],[[],158],[[],159],[[],160],[[],161],[[],162],[[],[[163,[-1]]],73],[[],[[164,[-1]]],73],[[],166],[[],167],[[],147],[[],174],[[],168],[[],171],[-1,-1,[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],[]],[[-1,-2],[[32,[-3]]],[],65,[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],[]],[[-1,-2,-3],-4,[],65,65,[]],[[-1,-2,-3],-4,[],65,65,[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[-1,[[32,[-2]]],[],[]],[[-1,-2],[[11,[-3,-2]]],[],28,[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],28],0,[[-1,46],-1,[]],[[-1,-1],2,[]],[[-1,-1],-1,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],-1,[]],[[-1,-1],2,[]],[[-1,-1],-1,[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-1,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[-1,-2,[],[]],[[-1,-2],-2,[],[]],[-1,-2,[],73],[[-1,-2],-3,[],65,[]],[[],175],[-1,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[11,[[163,[-2]]]]],33,34],[-1,75,[]],[[-1,-2],[[11,[2,96]]],[],[]],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[[[176,[-2,-1]]],2,[],[[177,[-1]]]],[[[178,[-2,-1]]],2,[],[[177,[-1]]]],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[[[152,[-1]]],2,[]],[[[152,[-1]]],2,[]],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],0,[[[163,[-1]]],[[19,[7]]],41],[[[164,[-1]]],[[19,[7]]],41],[147,[[19,[7]]]],[[149,-1],2,[39,40]],[[[163,[-1]],-2],2,41,[39,40]],[[[164,[-1]],-2],2,41,[39,40]],[[167,-1],2,[39,40]],[[147,-1],2,[39,40]],[[145,-1],2,[39,40]],[[[152,[-1,-2]],-3],2,[],169,[39,40]],[[170,-1],2,[39,40]],[[[164,[-1]]],[[8,[7]]],31],[[[164,[-1]]],21,31],[[[6,[7]],-1],2,[]],[[[6,[7]],-1],2,179],[[-1,-2],2,180,[]],[[-1,-2],2,180,179],[-1,[[11,[2,23]]],[]],[[[181,[-1,-2,-3]]],[[32,[[2,[-1,-3]]]]],[],[],[]],[-1,[[11,[109]]],[]],[-1,[[11,[109]]],[]],[[-1,-2],[[11,[109]]],[],[]],[[-1,-2],[[11,[109]]],[],[]],[[-1,-2],[[11,[109]]],[],[]],[-1,[[11,[32,109]]],182],[-1,[[11,[32,109]]],182],[[],[[11,[2,183]]]],[[],2],[[149,149],42],[[[163,[-1]],[163,[-1]]],42,74],[[[164,[-1]],[164,[-1]]],42,74],[[165,165],42],[[166,166],42],[[167,167],42],[[147,147],42],[[147,148],42],[[145,145],42],[[168,168],42],[[[152,[-1,-2]],[152,[-1,-2]]],42,74,[74,169]],[[170,170],42],[[184,184],42],[[171,171],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,70],-2,[],[]],[-1,[[2,[[32,[185]],66]]],[]],[-1,[[2,[[32,[-1]],66]]],[]],[-1,[[2,[[32,[-1]],66]]],[]],[-1,2,[]],[66,[[11,[66,184]]]],[66,[[11,[66,184]]]],[[],42],[[],[[11,[2,183]]]],[[],2],[[],[[11,[2,183]]]],[[[32,[23]]],186],[-1,42,[]],[[-1,-2],42,[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,[[32,[-2]]],60,[]],[[149,43],[[11,[2,44]]]],[[153,43],[[11,[2,44]]]],[[154,43],[[11,[2,44]]]],[[155,43],[[11,[2,44]]]],[[156,43],[[11,[2,44]]]],[[157,43],[[11,[2,44]]]],[[158,43],[[11,[2,44]]]],[[159,43],[[11,[2,44]]]],[[160,43],[[11,[2,44]]]],[[161,43],[[11,[2,44]]]],[[162,43],[[11,[2,44]]]],[[[163,[-1]],43],45,28],[[[164,[-1]],43],45,28],[[165,43],45],[[166,43],45],[[167,43],45],[[147,43],45],[[174,43],45],[[145,43],45],[[168,43],45],[[[152,[-1,-2]],43],45,28,[28,169]],[[170,43],45],[[184,43],45],[[171,43],45],[-1,171,[]],[[],171],[-1,171,179],[[],171],[[[19,[7,14]]],149],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[163,[-1]]],[]],[-1,-1,[]],[187,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,168,41],[[[19,[7]]],[[164,[-1]]],31],[188,-1,[]],[133,[[11,[-1,114]]],[]],[188,-1,[]],[-1,-2,189,[]],[-1,-2,190,[]],[-1,[[152,[-2,-3]]],191,[],169],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[21,21],168],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[188,-1,[]],0,0,0,[[]],[[],-1,[]],[-1,-2,[],[]],[[],[[32,[42]]]],[[],42],[[],42],[[],7],[[],7],[[],[[32,[7]]]],[[],148],[[],[[32,[148]]]],[[],148],[[],[[32,[47]]]],[[],47],[[],47],[[],[[32,[192]]]],[[],192],[[],192],[[],193],[[],[[32,[193]]]],[[],193],[[],194],[[],[[32,[194]]]],[[],194],[[],195],[[],195],[[],[[32,[195]]]],[[],196],[[],[[32,[196]]]],[[],196],[[],197],[[],[[32,[197]]]],[[],197],[-1,-2,140,[140,73]],[[],23],[[],147],[-1,[[32,[198]]],[]],[-1,7,[]],[[],[[8,[7]]]],[-1,166,[]],[-1,46,[]],[[],[[8,[46]]]],[46,[[8,[46]]]],[[-1,-2],47,[48,40],49],[[],[[8,[46]]]],[-1,[[32,[[19,[7]]]]],[]],[[],[[32,[-1]]],[]],[[],[[32,[-1]]],[]],[[[6,[7]]],2],[[[6,[7]]],2],[-1,2,180],[-1,2,180],[149,42],[149,42],[[149,-1],2,52],[[[152,[-1,-2]]],[],[],169],[[[152,[-1]]],42,[]],[[[152,[-1]]],42,[]],[-1,42,[]],[[[152,[-1]]],2,[]],[[[152,[-1]]],2,[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[32,[-1]]],[]],[[],[[32,[21]]]],[[],21],0,[[],175],[[],[[19,[165]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],[[32,[-1]]],[]],[[[8,[-1]]],2,[]],[[-1,-2],[[11,[2,96]]],[],[]],[[-1,-2],[[11,[2,96]]],[],[]],[[-1,-2],[[11,[2,96]]],140,[140,73]],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[-1,133],[[11,[114]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[32,[[69,[-2]]]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[23,42],[[],42],[[],42],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[],42],[-1,42,[]],[[],42],[-1,42,[]],[-1,42,[]],[-1,[[32,[-2]]],[],[]],[[-1,-1],42,[]],[[-1,-1],42,[]],0,[-1,[[11,[2,96]]],[]],[-1,[[11,[2,96]]],[]],[-1,-2,[],[]],[-1,21,[]],[[],[[32,[23]]]],[[[152,[-1,-2]]],[[32,[23]]],[],169],[[[152,[-1,-2]]],32,[],169],[[[152,[-1,-2]]],[[32,[23]]],[],169],[[[152,[-1,-2]]],42,[],169],0,[[],21],[[],21],[[],21],[[],21],0,0,[[],21],[[]],0,[[],[[32,[46]]]],[[],46],0,[[-1,-2],[[11,[-3,96]]],[],65,[]],[[-1,-2],[[11,[-3,96]]],[],65,[]],[[-1,-2],[[11,[-3,96]]],140,65,[]],[[-1,-2],[[11,[-3,96]]],[],65,[]],[[-1,-2],[[11,[-3,96]]],[],65,[]],[[-1,-2],[[11,[-3,96]]],140,65,[]],[[],[[32,[46]]]],[[],46],0,[[],[[32,[[20,[7]]]]]],[[],[[20,[7]]]],[[-1,168],[[11,[-2,96]]],[],[]],[-1,-2,[],[]],[[[19,[7,14]]],149],[-1,[[176,[-3,-2]]],76,[],[[177,[-2]]]],[[],[[178,[-2,-1]]],[],[[177,[-1]]]],[[148,7,7],167],[148,147],[[],-1,[]],0,0,0,0,[[[199,[[8,[7]]]]],[[11,[96]]]],[[[5,[7]]],2],[[]],[[],200],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[],2],[[],2],[[],147],[23,2],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[],2],[[],2],[-1,2,180],[[-1,66],66,[]],[[-1,66],66,[]],[[-1,66],66,[]],[[-1,66],66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,2,[]],[-1,2,[]],[[42,-1,-1],2,180],[[],66],[[],66],[[],66],[[],66],[-1,2,[]],[[[201,[-1,-2]]],[[11,[-2,-1]]],[],73],0,0,0,[[],46],[[],[[20,[7]]]],[[],[[20,[7]]]],[[149,149],[[32,[27]]]],[[165,165],[[32,[27]]]],[[167,167],[[32,[27]]]],[[147,147],[[32,[27]]]],[[147,148],[[32,[27]]]],[[],[[19,[145]]]],0,[[],[[11,[2,202]]]],[[[152,[-1]]],[[11,[[2,[-1,[32,[23]]]],96]]],31],[[[152,[-1]]],[[11,[[2,[-1,[32,[23]]]],96]]],31],[23,[[152,[-1]]],[]],[23,[[152,[-1]]],[]],[[],2],0,[[],[[20,[7]]]],[[],[[20,[7]]]],[-1,42,[]],[[[8,[7]],203,[20,[7]]],[[11,[42,170]]]],[[],175],[-1,32,[]],[-1,2,76],[147,2],[[[8,[7]]],[[2,[-1,-2]]],[],[]],[[],[[2,[-1,-2]]],[],[]],[[],[[2,[-1,-2]]],[],[]],[[],32],0,[[[152,[-1]]],[[11,[[2,[-1,[32,[23]]]],96]]],31],[[[152,[-1]]],[[11,[[2,[-1,[32,[23]]]],96]]],31],[[],32],[-1,[[11,[2,96]]],[]],[-1,[[11,[2,96]]],[]],[-1,[[11,[2,96]]],140],[[],2],[-1,2,[]],[-1,2,[]],[[],2],[[],-1,[]],[[[201,[-1,-2]]],[[11,[-1,-2]]],73,[]],0,[[[163,[-1]],-2],11,57,58],[66,66],[66,66],[[],204],[[-1,-2],2,[],[[191,[-1]]]],[[[8,[-1]],[8,[-1]]],2,[]],[[[8,[-1]],[8,[-1]]],2,[]],[[[32,[-1]]],2,[]],[[[32,[-1]]],2,[]],[[],-1,[]],0,[149,21],[[[163,[-1]]],21,41],[[[164,[-1]]],21,41],[167,21],[147,21],[145,21],[[[152,[-1,-2]]],21,[],169],[170,21],[-1,[[11,[2,29]]],30],[-1,[[11,[2,29]]],30],[[],[[19,[-1]]],[]],[[],[[19,[-1]]],[16,205]],0,[[],[[19,[145]]]],[[],[[20,[7]]]],0,[[],[[20,[7]]]],[[],[[20,[7]]]],[[],2],[[],2],[[-1,-2],150,[],[]],[-1,2,[]],[[],2],[-1,2,179],[[],2],[[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-2,-2],206,[],[]],[[[152,[-2,-3]]],[[152,[-1,-3]]],41,[41,[116,[-1]]],169],[-1,[[11,[-2,96]]],65,[]],[-1,[[11,[-2]]],[],[]],[[[164,[-1]]],[[32,[-1]]],31],[-1,[[11,[2,-1]]],[]],[[[201,[-1,-2]]],[[11,[2,[201,[-1,-2]]]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],[[105,[96]]]],[[-1,-2],[[11,[-3,-4]]],140,65,[],[[105,[96]]]],[[[201,[-1,-2]]],[[11,[2,[201,[-1,-2]]]]],[],[]],[-1,[[11,[-1]]],[]],[[-1,-2],[[11,[-1]]],[],[]],[-1,[[11,[-1]]],172],[-1,[[11,[-2,-1]]],[],[]],[[-1,-2],[[11,[-1]]],[],[]],[[-1,-2],[[11,[-1]]],[],[]],[-1,[[11,[-1]]],[]],[[-1,-2],[[11,[-1]]],[],[]],[-1,[[11,[-1]]],22],[[-1,-2],[[11,[-1]]],22,[]],[[-1,-2],[[11,[-3,-1]]],[],[],[]],[-1,[[11,[-1]]],[]],[[-1,-2],[[11,[-1]]],[],[]],[[-1,-2],[[11,[-1]]],[],[]],[-1,[[11,[-1]]],[]],[-1,[[11,[32,-1]]],182],[-1,[[11,[32,-1]]],182],[[[201,[-1,-2]]],[[11,[-2,[201,[-1,-2]]]]],[],[]],[[[201,[-1,-2]]],[[11,[-1,[201,[-1,-2]]]]],[],[]],[[-1,-2],[[11,[-3,-1]]],[],65,[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],64],[[],64],[[],64],[[],64],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[-1,2,[]],[[],[[11,[2,202]]]],[[],2],[-1,2,[]],[23,[[152,[-1,-2]]],[],169],[[-1,-2,168],[[11,[-1,96]]],[],[]],[[[163,[-1]],-2],-3,41,65,[]],[[[164,[-1]],-2],-3,41,65,[]],[[147,-1],-2,65,[]],[[],19],[-1,[[11,[[32,[-2]],46]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[149,2],0,[[],[[19,[149]]]],0,0,0,0,0,0,0,0,[-1,-1,[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],[]],[[-1,-2],[[32,[-3]]],[],65,[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],[]],[[-1,-2,-3],-4,[],65,65,[]],[[-1,-2,-3],-4,[],65,65,[]],[-1,[[32,[-2]]],[],[]],[[-1,-2],[[11,[-3,-2]]],[],28,[]],[[-1,-2],[[11,[-3,-4]]],[],65,[],28],[[-1,46],-1,[]],[[-1,-2],-2,[],[]],[-1,-2,[],73],[[-1,-2],-3,[],65,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[[207,[-1,-2]]],[[32,[-2]]],31,[]],[[[207,[-1,-2]]],[[32,[-1]]],31,[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[208,[-1]]],[[208,[-1]]],22],[[[207,[-1,-2]]],[[207,[-1,-2]]],22,22],[209,209],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[11,[[208,[-2]],29]]],30,31],[-1,[[11,[[207,[-2,-3]],29]]],30,31,31],[-1,[[11,[209,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[[[208,[-1]],-2],2,41,[39,40]],[[[207,[-1,-2]],-3],2,41,41,[39,40]],[[209,-1],2,[39,40]],[[[207,[-1,-2]]],2,31,[]],[[[207,[-1,-2]]],2,31,[]],[[[208,[-1]],[208,[-1]]],42,74],[[[207,[-1,-2]],[207,[-1,-2]]],42,74,74],[[209,209],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[[208,[-1]],-1],-1,[173,101]],[[[208,[-1]],43],45,28],[[[207,[-1,-2]],43],45,28,28],[[209,43],45],[-1,-1,[]],[187,-1,[]],[-1,-1,[]],[-1,[[207,[-1,-2]]],[],[]],[-1,-1,[]],[188,-1,[]],[188,-1,[]],[-1,-2,189,[]],[-1,-2,190,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[188,-1,[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[[],21],[[],21],[[[207,[-1,-2]]],[[2,[[207,[-1,-2]],[32,[-2]]]]],31,[]],[[[208,[-1]]],21,41],[[[207,[-1,-2]]],21,41,41],[209,21],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],64],[[],64],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],[[11,[2,2]]]],[[[19,[7]]],[[11,[2,2]]]],[[],[[11,[-1,2]]],[]],[[[19,[7]]],[[11,[-1,2]]],[]],[[[208,[-1]]],[[11,[96]]],[]],[[[19,[7]],[208,[-1]]],[[11,[96]]],[]],[[[208,[-1]],[32,[[210,[-1]]]],211,-2,-3],[[11,[96]]],[],[],[]],[[[19,[7]],[208,[-1]],[32,[[210,[-1]]]],211,-2,-3],[[11,[2]]],[],[],[]],0,0,0,0,0,0,[[],[[11,[2,2]]]],[[[19,[7]]],[[11,[2,2]]]],[[],[[11,[-1,2]]],[]],[[[19,[7]]],[[11,[-1,2]]],[]],[[[208,[-1]]],[[11,[96]]],[]],[[[19,[7]],[208,[-1]]],[[11,[96]]],[]],[[[208,[-1]],[32,[[210,[-1]]]],211,-2,[207,[-3]]],[[11,[96]]],[],[],[]],[[[19,[7]],[208,[-1]],[32,[[210,[-1]]]],211,-2,[207,[-3]]],[[11,[2]]],[],[],[]],0,0,0,0,0,0,0,[[],[[11,[2,96]]]],[212,[[11,[2,96]]]],[[],[[11,[-1,96]]],[]],[212,[[11,[-1,96]]],[]],[[[208,[-1]]],[[11,[96]]],[]],[[212,[208,[-1]]],[[11,[96]]],[]],[[[208,[-1]],[32,[[210,[-1]]]],211,-2,[152,[-3]]],[[11,[96]]],[],[],[]],[[212,[208,[-1]],[32,[[210,[-1]]]],211,-2,[152,[-3]]],[[11,[96]]],[],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[],213],[[213,213],213],[[213,213],2],[[213,213],213],[[213,213],2],[213,7],[[213,213],213],[[213,213],2],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[214,214],[215,215],[216,216],[217,217],[218,218],[[[219,[-1]]],[[219,[-1]]],22],[220,220],[221,221],[222,222],[213,213],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[213,213],27],[213,213],[[213,213],42],0,[-1,[[11,[222,29]]],30],[-1,[[11,[213,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[213,213],213],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[[],213],[213,[[19,[7]]]],[[222,-1],2,[39,40]],[[213,-1],2,[39,40]],[[214,214],42],[[215,215],42],[[216,216],42],[[217,217],42],[[218,218],42],[[[219,[-1]],[219,[-1]]],42,74],[[220,220],42],[[221,221],42],[[222,222],42],[[213,213],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[213,213],[[213,-1],2,60],[[214,43],45],[[215,43],45],[[216,43],45],[[217,43],45],[[218,43],45],[[[219,[-1]],43],45,28],[[220,43],45],[[221,43],45],[[222,43],45],[[213,43],45],[[213,43],45],[[213,43],45],[[213,43],45],[[213,43],45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[11,[-3]]],[],[],[]],[[-2,-3],[[11,[-1]]],[],[[191,[-1]]],[]],[7,[[32,[213]]]],[7,213],[7,213],[-1,213,60],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,0,[[-1,-2],47,[48,40],49],[[-1,-2],-3,[],[],[]],[[-1,-2],-3,[],[],[]],[[213,-1],2,52],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[213,213],2],[[213,213],213],[[213,213],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[219,[-1]],42],[[11,[-1,96]]],223],[220,[[11,[2,96]]]],[213,42],[213,42],[[-1,-2],42,[],[]],[[],21],[[],21],0,0,0,0,[213,213],[[213,213],[[32,[27]]]],0,[[213,213],2],[[213,213,42],2],[222,21],[213,21],[[213,213],213],[[213,213],2],[[213,213],213],[[-1,-2],[[11,[-3]]],[],[],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[213,213],2],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[213,213],213],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[213,-1],-2,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[-1,206,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[-1,206,[]],[-1,42,[]],[-1,42,[]],[[],2],[-1,[],[]],[-1,[[11,[96]]],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[[-1,213],206,[]],[-1,206,[]],[-1,206,[]],[[224,-1,213],2,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[]],[[]],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[-1,225,[]],[[]],[[],2],[[],2],[[224,-1],2,[]],[[-1,23],206,[]],[[-1,-1,222],206,[]],[[-1,-1,222],206,[]],[[-1,-1,222],[[11,[96]]],[]],[[-1,-1,222],[[11,[96]]],[]],[-1,206,[]],[-1,206,[]],[-1,[],[]],[-1,[],[]],[-1,2,[]],[-1,[[11,[2]]],[]],[[224,-1,213],2,[]],[[-1,213,221],[[11,[2]]],[]],[-1,2,[]],[-1,[],[]],[-1,[],[]],[-1,2,[]],[-1,2,[]],[-1,[],[]],[[]],[[-1,-1,221],206,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,213,221],[[11,[96]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[]],[[]],[[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[226,[-1,-2,-3,-4]],-1],2,[],[[227,[-1]]],24,[[228,[168]]]],[[[229,[-1,-2,-3,-4]],-1],2,[],[[227,[-1]]],24,[[228,[168]]]],[[-1,218,217],[[11,[96]]],172],[[-1,218,217],[[11,[96]]],[]],[[-1,218,217],[[11,[96]]],[]],[[-1,218,217],[[11,[96]]],[]],[[-1,214],220,[]],[[-1,214],220,[]],[-1,42,[]],[-1,42,[]],[-1,219,[]],[-1,219,[]],[[],-1,[]],[[[230,[-1,-2,-3,-4]]],[[230,[-1,-2,-3,-4]]],[],[[231,[-1]]],[],[]],[[[226,[-1,-2,-3,-4]]],[[226,[-1,-2,-3,-4]]],[],[[227,[-1]]],[],[]],[[[232,[-1,-2,-3,-4]]],[[232,[-1,-2,-3,-4]]],[],[],[],[]],[[[229,[-1,-2,-3,-4]]],[[229,[-1,-2,-3,-4]]],[],[],[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],2],[[],2],[-1,[[11,[[230,[-2,-3,-4,-5]],29]]],30,[],[[231,[-2]]],[],[]],[-1,[[11,[[226,[-2,-3,-4,-5]],29]]],30,[],[[227,[-2]]],[],[]],[-1,[[11,[[232,[-2,-3,-4,-5]],29]]],30,[],[],[],[]],[-1,[[11,[[229,[-2,-3,-4,-5]],29]]],30,[],[],[],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[-1,218,216,217],[[11,[96]]],[]],[[-1,218,216,217],[[11,[96]]],[]],[[-1,218,216,217],[[11,[96]]],[]],[[-1,218],[[11,[96]]],[]],[[],[[233,[-1,-2,-3]]],234,[[235,[-1]]],[[235,[-1]]]],[[-1,218],[[11,[[237,[-1,[236,[-2,-3,-1]]]],96]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[-1,218],[[11,[[237,[-1,-2]],96]]],[],[]],[[-1,218],[[11,[[237,[-1,-2]],96]]],[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[],2],[[],2],[-1,2,[]],[-1,2,[]],[[],2],[[],2],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,2,[]],[-1,2,[]],[21,2],[21,2],[21,2],[21,2],[21,2],[[[233,[-1,-2,-3]]],2,234,[[235,[-1]]],[[235,[-1]]]],[21,2],[[[230,[-1,-2,-3,-4]],-1],[[11,[2,96]]],[],[[231,[-1]]],24,[[228,[168]]]],[21,2],[[[226,[-1,-2,-3,-4]],-1],[[11,[2,96]]],[],[[227,[-1]]],24,[[228,[168]]]],[21,2],[[[232,[-1,-2,-3,-4]],-1],[[11,[2,96]]],[],[[231,[-1]]],24,[[228,[168]]]],[[[229,[-1,-2,-3,-4]],-1],[[11,[2,96]]],[],[[227,[-1]]],24,[[228,[168]]]],[21,2],[[[233,[-1,-2,-3]]],[[11,[2,[233,[-1,-2,-3]]]]],234,[[235,[-1]]],[[235,[-1]]]],[[[232,[-1,-2,-3,-4]]],[[19,[7]]],[],[],[],[]],[[[229,[-1,-2,-3,-4]]],[[19,[7]]],[],[],[],[]],[[[230,[-1,-2,-3,-4]],-5],2,[],[[231,[-1]]],[],[],[39,40]],[[[226,[-1,-2,-3,-4]],-5],2,[],[[227,[-1]]],[],[],[39,40]],[[[232,[-1,-2,-3,-4]],-5],2,[],[],[],[],[39,40]],[[[229,[-1,-2,-3,-4]],-5],2,[],[],[],[],[39,40]],[[[233,[-1,-2,-3]],[233,[-1,-2,-3]]],42,234,[[235,[-1]]],[[235,[-1]]]],[[[230,[-1,-2,-3,-4]],[230,[-1,-2,-3,-4]]],42,[],[[231,[-1]]],[],[]],[[[226,[-1,-2,-3,-4]],[226,[-1,-2,-3,-4]]],42,[],[[227,[-1]]],[],[]],[[[232,[-1,-2,-3,-4]],[232,[-1,-2,-3,-4]]],42,[],[],[],[]],[[[229,[-1,-2,-3,-4]],[229,[-1,-2,-3,-4]]],42,[],[],[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[-1,175,[]],[[[233,[-1,-2,-3]],-1],[[233,[-1,-2,-3]]],234,[[235,[-1]]],[[235,[-1]]]],[[[233,[-1,-2,-3]],43],45,234,[[235,[-1]]],[[235,[-1]]]],[[[230,[-1,-2,-3,-4]],43],45,[],[[231,[-1]]],[],[]],[[[226,[-1,-2,-3,-4]],43],45,[],[[227,[-1]]],[],[]],[[[232,[-1,-2,-3,-4]],43],45,[],[],[],[]],[[[229,[-1,-2,-3,-4]],43],45,[],[],[],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,2,[]],[[],2],[[],2],[[[241,[-1,-2]]],2,[],[]],[[[241,[-1,[236,[-2,-3,-1]]]]],2,[],[[239,[-1]]],24],[[],2],[[],2],0,[-1,175,[]],[-1,42,[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[[-1,218],[[11,[96]]],[]],[[-1,218],[[11,[96]]],[]],[[-1,218],[[11,[96]]],[]],[[-1,218],[[11,[96]]],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[241,[-1,-2]]],[[242,[-1,-2]]],[],[[243,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[[],[[242,[-1,[236,[-2,-3,-1]]]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[],[[242,[-1,-2]]],[],[]],[[],[[242,[-1,-2]]],[],[]],[[],21],[[],21],[[],21],[[],21],[[[233,[-1,-2,-3]],[233,[-1,-2,-3]]],[[233,[-1,-2,-3]]],234,[[235,[-1]]],[[235,[-1]]]],[[]],[[]],[-1,[[11,[96]]],172],[-1,[[11,[96]]],[]],[-1,[[11,[96]]],[]],[[-1,168],[[11,[[230,[-1,-2,-3,-4]],96]]],[],[[231,[-1]]],24,[[228,[168]]]],[[-1,168],[[11,[[226,[-1,-2,-3,-4]],96]]],[],[[227,[-1]]],24,[[228,[168]]]],[[-1,168],[[11,[[232,[-1,-2,-3,-4]],96]]],[],[[231,[-1]]],24,[[228,[168]]]],[[-1,168],[[11,[[229,[-1,-2,-3,-4]],96]]],[],[[227,[-1]]],24,[[228,[168]]]],[[[233,[-1,-2,-3]],[233,[-1,-3,-2]]],[[201,[[233,[-1,-2,-3]],[233,[-1,-3,-2]]]]],234,[[235,[-1]]],[[235,[-1]]]],[[],[[2,[[237,[-1,[236,[-2,-3,-1]]]],[242,[-1,[236,[-2,-3,-1]]]]]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[],[[2,[[237,[-1,-2]],[242,[-1,-2]]]]],[],[]],[[],[[2,[[237,[-1,-2]],[242,[-1,-2]]]]],[],[]],[[[233,[-1,-2,-3]]],-1,234,[[235,[-1]]],[[235,[-1]]]],[[],2],[[],2],[[-1,216,217],[],[]],[[-1,216,217],[],[]],[[-1,217],[],[]],[[-1,218],[[11,[96]]],[]],[[],[[237,[-1,[236,[-2,-3,-1]]]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[],[[237,[-1,-2]]],[],[]],[[],[[237,[-1,-2]]],[],[]],[[-1,[242,[-1,[236,[-2,-3,-1]]]]],[[11,[2,[242,[-1,[236,[-2,-3,-1]]]]]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[-1,[242,[-1,-2]]],[[11,[2,[242,[-1,-2]]]]],[],[]],[[-1,[242,[-1,-2]]],[[11,[2,[242,[-1,-2]]]]],[],[]],[-1,[[11,[96]]],172],[-1,[[11,[96]]],[]],[-1,[[11,[96]]],[]],[-1,[],172],[-1,[],[]],[-1,[],[]],[-1,175,[]],[-1,175,[]],[[],2],[[],2],[[-1,[237,[-1,[236,[-2,-3,-1]]]],216],[[11,[[242,[-1,[236,[-2,-3,-1]]]],[237,[-1,[236,[-2,-3,-1]]]]]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[-1,[237,[-1,-2]],216],[[11,[[242,[-1,-2]],[237,[-1,-2]]]]],[],[]],[[-1,[237,[-1,-2]],216],[[11,[[242,[-1,-2]],[237,[-1,-2]]]]],[],[]],[-1,[[11,[96]]],172],[-1,[[11,[96]]],[]],[-1,[[11,[96]]],[]],[[[230,[-1,-2,-3,-4]]],21,[],[[231,[-1]]],[],[]],[[[226,[-1,-2,-3,-4]]],21,[],[[227,[-1]]],[],[]],[[[232,[-1,-2,-3,-4]]],21,[],[],[],[]],[[[229,[-1,-2,-3,-4]]],21,[],[],[],[]],[-1,[[2,[[242,[-1,[236,[-2,-3,-1]]]]]]],[],[[244,[-1]]],24],[[[233,[-1,-2,-3]],-1],[[2,[[233,[-1,-2,-3]],[233,[-1,-2,-3]]]]],234,[[235,[-1]]],[[235,[-1]]]],[[[233,[-1,-2,-3]],[233,[-1,-2,-3]]],2,234,[[235,[-1]]],[[235,[-1]]]],[-1,175,[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[]],[[]],[[-1,-1,216],[[11,[96]]],172],[[-1,-1,216],[[11,[96]]],[]],[[-1,-1,216],[[11,[96]]],[]],[[-1,-1,218,216,217],[[11,[96]]],[]],[[-1,-1,218,215,217],[[11,[96]]],[]],[[[233,[-1,-2,-3]]],[[11,[2,[233,[-1,-2,-3]]]]],234,[[235,[-1]]],[[235,[-1]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],64],[[],64],[[],64],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[230,[-1,-2,-3,-4]],-1,168],[[11,[[230,[-1,-2,-3,-4]],96]]],[],[[231,[-1]]],24,[[228,[168]]]],[[[226,[-1,-2,-3,-4]],-1,168],[[11,[[226,[-1,-2,-3,-4]],96]]],[],[[227,[-1]]],24,[[228,[168]]]],[[[232,[-1,-2,-3,-4]],-1,168],[[11,[[232,[-1,-2,-3,-4]],96]]],[],[[231,[-1]]],24,[[228,[168]]]],[[[229,[-1,-2,-3,-4]],-1,168],[[11,[[229,[-1,-2,-3,-4]],96]]],[],[[227,[-1]]],24,[[228,[168]]]],[[[232,[-1,-2,-3,-4]],-5],-6,[],[],[],[],65,[]],[[[229,[-1,-2,-3,-4]],-5],-6,[],[],[],[],65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,218,216,217],[[11,[[242,[-1,[236,[-2,-3,-1]]]],96]]],[],[[238,[-1]],[239,[-1]],[240,[-1]]],24],[[-1,218,216,217],[[11,[[242,[-1,-2]],96]]],[],[]],[[-1,218,216,217],[[11,[[242,[-1,-2]],96]]],[],[]],[-1,[[11,[32,96]]],[]],[-1,[[11,[32,96]]],[]],[[],[[233,[-1,-2,-3]]],234,[[235,[-1]]],[[235,[-1]]]],0,[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],[[[32,[-1]]],2,245],0,0,0,[-1,[],[]],[-1,[],[]],[-1,42,[]],[-1,175,[]],[[-1,217],175,[]],[-1,175,[]],[-1,175,[]],[-1,175,[]],[[-1,217],175,[]],[-1,175,[]],0,0,0,0,0,[-1,[],[]],[[-1,218,217],[[11,[96]]],[]],[[-1,218,217],[[11,[96]]],[]],[-1,42,[]],[[-1,218],[[11,[96]]],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,175,[]],[-1,175,[]],[-1,42,[]],[[-1,218],[[11,[96]]],[]],[[-1,217],[],[]],[[-1,218],[[11,[96]]],[]],[[-1,218],[[11,[96]]],[]],[-1,175,[]],[-1,175,[]],[-1,[[2,[[242,[-1,-2]]]]],[],[]],[-1,[],[]],[[-1,-1,218,216,217],[[11,[96]]],[]],[[-1,-1,218,215,217],[[11,[96]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[[246,[-1,-2,-3,-4]]],-1,247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[],42],[[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,218,217],[[11,[96]]],[]],[[-1,218,217],[[11,[96]]],[]],[[-1,214],220,[]],[-1,219,[]],[[-1,42],175,[]],[[],2],[[],2],[[-1,218,216,217],[[11,[96]]],[]],[[-1,218,216,217],[[11,[96]]],[]],[[-1,218],[[11,[[249,[-1,-2]],96]]],[],[]],[[-1,218],[[11,[[249,[-1,-2]],96]]],[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[23,[[11,[23,96]]]],[23,[[11,[23,96]]]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[],2],[[],2],[-1,2,[]],[-1,2,[]],[[],2],[[],2],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,2,[]],[-1,2,[]],[21,2],[21,2],[21,2],[[[246,[-1,-2,-3,-4]]],2,247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[21,2],[[[246,[-1,-2,-3,-4]]],[[11,[2,[246,[-1,-2,-3,-4]]]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[[246,[-1,-2,-3,-4]],[246,[-1,-2,-3,-4]]],42,247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[[246,[-1,-2,-3,-4]],-2],[[246,[-1,-2,-3,-4]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[],175],[[[246,[-1,-2,-3,-4]],43],45,247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],2,[],[]],[[],2],[[],2],[[[250,[-1,-2]]],2,[],[]],[[],2],[[],2],0,[[-1,218],[[11,[96]]],[]],[[-1,218],[[11,[96]]],[]],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[250,[-1,-2]]],[[251,[-1,-2]]],[],[[240,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[251,[-1,-2]]],[],[]],[[],[[251,[-1,-2]]],[],[]],[[[246,[-1,-2,-3,-4]],[246,[-1,-2,-3,-4]]],[[11,[[246,[-1,-2,-3,-4]],[2,[[246,[-1,-2,-3,-4]],[246,[-1,-2,-3,-4]]]]]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],0,[[]],[-1,[[11,[96]]],[]],[-1,[[11,[96]]],[]],[[[246,[-1,-2,-3,-4]],[246,[-1,-2,-4,-3]]],[[11,[[201,[[246,[-1,-2,-3,-4]],[246,[-1,-2,-4,-3]]]],[2,[[246,[-1,-2,-3,-4]],[246,[-1,-2,-4,-3]]]]]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[],[[2,[[249,[-1,-2]],[251,[-1,-2]]]]],[],[]],[[],[[2,[[249,[-1,-2]],[251,[-1,-2]]]]],[],[]],[[[246,[-1,-2,-3,-4]]],-2,247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[],2],[[],2],[[-1,216,217],[],[]],[[],[[249,[-1,-2]]],[],[]],[[],[[249,[-1,-2]]],[],[]],[[-1,[251,[-1,-2]]],[[11,[2,[251,[-1,-2]]]]],[],[]],[[-1,[251,[-1,-2]]],[[11,[2,[251,[-1,-2]]]]],[],[]],[-1,[[11,[96]]],[]],[-1,[[11,[96]]],[]],0,[-1,[],[]],[-1,[],[]],[[],2],[[-1,[249,[-1,-2]],216],[[11,[[251,[-1,-2]],[249,[-1,-2]]]]],[],[]],[[-1,[249,[-1,-2]],216],[[11,[[251,[-1,-2]],[249,[-1,-2]]]]],[],[]],[-1,[[11,[96]]],[]],[-1,[[11,[96]]],[]],[[[246,[-1,-2,-3,-4]],-2],[[2,[[246,[-1,-2,-3,-4]],[246,[-1,-2,-3,-4]]]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[[[32,[-1]]],175,[]],[[[246,[-1,-2,-3,-4]],[246,[-1,-2,-3,-4]]],[[11,[2,[246,[-1,-2,-3,-4]]]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[-1,[],[]],[[]],[[-1,-1,216],[[11,[96]]],[]],[[-1,-1,216],[[11,[96]]],[]],[[[246,[-1,-2,-3,-4]]],[[11,[2,[246,[-1,-2,-3,-4]]]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,218,216,217],[[11,[[251,[-1,-2]],96]]],[],[]],[[-1,218,216,217],[[11,[[251,[-1,-2]],96]]],[],[]],[-1,[[11,[32,96]]],[]],[-1,[[246,[-1,-2,-3,-4]]],247,234,[[248,[-1,-2]]],[[248,[-1,-2]]]],0,0,[[-1,-1],[],[]],[[-1,-1],206,[]],[[-1,-1,-1],206,[]],0,0,0,[-1,[],[]],[-1,[],[]],[-1,42,[]],[-1,175,[]],[[-1,217],175,[]],[-1,175,[]],[-1,175,[]],[-1,175,[]],[[-1,217],175,[]],[-1,175,[]],0,0,0,0,0,[-1,[],[]],[[-1,218,217],[[11,[96]]],[]],[[-1,218,217],[[11,[96]]],[]],[-1,42,[]],[[-1,218],[[11,[96]]],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[-1,-1],2,[]],[[-1,-1],2,[]],[-1,175,[]],[-1,175,[]],[-1,42,[]],[[-1,218],[[11,[96]]],[]],[[-1,217],[],[]],[[-1,218],[[11,[96]]],[]],[-1,175,[]],[-1,[[2,[[251,[-1,-2]]]]],[],[]],[-1,[],[]],[[-1,-1,218,216,217],[[11,[96]]],[]],[[-1,-1,218,215,217],[[11,[96]]],[]],0,0,0,[[[8,[7]],[8,[7]]],-1,[]],[[],7],[[],[[19,[7]]]],[[-1,[19,[7]],[19,[7]],7],206,[]],[[],[[19,[7]]]],0,[[],[[32,[-1]]],[]],[[],[[32,[-1]]],[]],[[],[[32,[-1]]],[]],[[],[[32,[-1]]],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[21,2],[-1,[[11,[2,-1]]],[]],[[[225,[-1,-2]]],[[11,[2,[225,[-1,-2]]]]],[252,140,101,253,28,73],[[254,[-1]]]],[[-1,-2],-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[32,[-1]]],-1,[]],[[-1,[32,[-1]]],2,[]],[[-1,-1],-1,[]],[[[225,[-1,-2]],[225,[-1,-2]]],[[225,[-1,-2]]],[252,140,101,253,28,73],[[254,[-1]]]],[[-1,-1],2,[]],[-1,[[201,[-1]]],[]],[-1,2,[]],[-1,2,[]],[[[242,[-1]]],2,243],[[[251,[-1]]],2,240],[-2,2,[[105,[23]],173,255],[[254,[-1]]]],[-1,2,[]],[-1,2,[]],[-1,2,180],[-1,2,180],[-1,-2,[],[]],[[-1,23,23],[[2,[-1,-1]]],[]],[[-1,23,23,[2,[-1,-1]]],[[2,[-1,-1]]],[]],[[-1,23,23,[2,[-1,-1]]],2,[]],[[-1,-2],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],[[2,[-1,-1]]],[],[]],[[-1,-2,[2,[-1,-1]]],2,[],[]],[[-1,-1],2,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],[[225,[-1,-2]]],[252,140,101,253,28,73],[[254,[-1]]]],0,0,0,0,0,0,0,0,[[[8,[7]]],[[32,[[19,[7]]]]]],[[[8,[7]]],[[32,[[19,[7]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[-1]]],206,[]],[[[32,[-1]]],206,[]],[[],42],[[],42],[21,-1,[]],[21,-1,[]],[21,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[-1,206,[]],[-1,206,[]],[-1,[],[]],[-1,[],[]],[[],[[32,[-1]]],[]],[[],[[32,[-1]]],[]],[[[8,[7]],[8,[7]]],206],[[[8,[7]],[8,[7]]],206],[[-1,-2],206,41,41],[[-1,-2],206,41,41],[-1,206,[]],[-1,206,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,[[32,[-2]]],41,31],[-1,[[32,[-2]]],41,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[8,[7]]],[[32,[[19,[7]]]]]],[[[8,[7]]],[[32,[[19,[7]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[-1]]],206,[]],[[[32,[-1]]],206,[]],[[],42],[[],42],[[[8,[7]]],206],[[[8,[7]]],206],[-1,206,[]],[-1,206,41],[-1,206,41],[[-1,[8,[7]]],[[32,[[19,[7]]]]],[]],[[-1,[8,[7]]],[[32,[[19,[7]]]]],[]],[21,-1,[]],[21,-1,[]],[[],206],[[],206],[21,2],[[],206],[[],206],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[[-1,-2,42],206,[],[]],[[-1,-2,42],206,[],[]],[-1,[],[]],[-1,[],[]],[[],[[32,[-1]]],[]],[[],[[32,[-1]]],[]],[[[8,[7]],[8,[7]]],206],[[[8,[7]],[8,[7]]],206],[[-1,[8,[7]]],206,[]],[[-1,-2],206,41,41],[[-1,-2],206,41,41],[[[8,[7]]],[[32,[[19,[7]]]]]],[[[8,[7]]],[[32,[[19,[7]]]]]],[-1,206,[]],[-1,206,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,[[32,[-2]]],41,31],[-1,[[32,[-2]]],41,31],[[-1,-2],[[32,[-3]]],[],41,31],[[-1,-2],[[32,[-3]]],[],41,31],[-1,[[32,[-2]]],41,31],[-1,[[32,[-2]]],41,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[7]]],[[32,[[19,[7]]]]]],[[[32,[-1]]],206,[]],[[],42],[[[8,[7]]],[[32,[[19,[7]]]]]],[[],[[32,[-1]]],[]],[[]],[[-1,-1],206,[]],[[[32,[-1]]],[[11,[96]]],[]],[[],32],[[]],[-1,206,[]],[-1,[],[]],[-1,[],[]],[[],[[32,[-1]]],[]],[[[8,[7]],[8,[7]]],206],[[[8,[7]],[8,[7]]],206],[[-1,-2],206,41,41],[[-1,-2],206,41,41],[-1,206,[]],[-1,[[32,[-2]]],41,31],[-1,[[32,[-2]]],41,31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[7]]],[[32,[[19,[7]]]]]],[[[32,[-1]]],206,[]],[[-1,-2],206,[],[]],[[],42],[[[8,[7]]],206],[[[8,[7]]],206],[[[32,[-1]]],206,[]],[[[32,[-1]]],206,[]],[-1,206,41],[-1,206,41],[[[8,[7]]],[[32,[[19,[7]]]]]],[[],[[32,[-1]]],[]],[[]],[[-1,-1,-2],[[11,[96]]],[],[]],[[-1,-1,-2],[[11,[2,96]]],[],[]],[[-1,[8,[7]]],[[32,[[19,[7]]]]],[]],[[[32,[-1]]],[[11,[96]]],[]],[[],206],[[],206],[[],32],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[],[[32,[-1]]],[]],[[]],[[-1,-2,42],206,[],[]],[-1,[],[]],[-1,[],[]],[[],[[32,[-1]]],[]],[[[8,[7]],[8,[7]]],206],[[[8,[7]],[8,[7]]],206],[[[32,[-1]],[8,[7]]],206,[]],[[[32,[-1]],[8,[7]]],206,[]],[[-1,[32,[-2]],[32,[-1]]],206,[],[]],[[-1,-2],206,41,41],[[-1,-2],206,41,41],[[32,[8,[7]]],[[32,[[19,[7]]]]]],[-1,206,[]],[-1,[[32,[-2]]],41,31],[-1,[[32,[-2]]],41,31],[[-1,-2],[[32,[-3]]],[],41,31],[[32,-1],[[32,[-2]]],41,31],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],256],[2,256],[2,256],[256,256],[[-1,-2],2,[],[]],[-1,[[11,[256,29]]],30],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,-1],[[11,[-2,29]]],30,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[[256,-1],2,[39,40]],[[256,256],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[256,43],45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[[],11],[[],11],[[],11],[256,21],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[203,66],42],[[203,66],42],[[203,66],42],[[],-1,[]],[[],-1,[]],[203,203],[257,257],[88,88],[[[258,[-1]]],[[258,[-1]]],22],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[203,66],2],[203,66],[203,150],[-1,[[11,[257,29]]],30],[-1,[[11,[88,29]]],30],[-1,[[11,[[258,[-2]],29]]],30,31],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[[23,[8,[7]]],[[11,[-1,29]]],[]],[47,[[11,[257,29]]]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[23,-1],[[11,[-2,29]]],30,[]],[[],257],[[],88],[[203,66],2],0,[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[11,[257]]],33],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[257,[[19,[7,14]]]],[257,47],[[257,-1],2,[39,40]],[[88,-1],2,[39,40]],[[[258,[-1]],-2],2,41,[39,40]],[[257,257],42],[[88,88],42],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[-1,-2],42,[],[]],[[[259,[-1]],47],-1,[260,[105,[23]],101,261]],[[203,43],[[11,[2,44]]]],[[257,43],[[11,[2,44]]]],[[88,43],[[11,[2,44]]]],[-1,-1,[]],[[[262,[[20,[[258,[-1]]]]]]],[[259,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[263,[257]]],257],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[-1,42,[]],[203,66],[[],21],0,[[],203],[[],[[262,[[20,[258]]]]]],0,[[88,47],66],[[88,47,47],66],[203,66],[[[258,[-1]],-1,-1],-1,[260,[105,[23]],101,261]],[[257,-1],11,58],[257,21],[88,21],[[[258,[-1]]],21,41],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[[-1,[8,[7]]],[[19,[7,14]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[203,66],[[11,[2,2]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[20,[7]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,[[19,[7,14]]],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[],[[64,[63]]]],[[],[[64,[63]]]],[[],[[64,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[257,-1],-2,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66],[66],[66],[66],[66,203],0,[[88,47],66],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[21,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],66],[[],-1,[[105,[66]]]],[[],66],[[],-1,[[105,[66]]]],[[],66],[[],66],[[],88],[[],-1,[[105,[88]]]],[[],88],[[],88],[[],-1,[[105,[88]]]],[[],88],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[325,531,2394,2395,2396,2652,2783,2784,2788,2807,2808,3230,3231,3232,3233,3235,3236,3396,3428,3480,3487,3505,3511,3698,3699,3703,3704,3847,3848,3849,4309,4415,7615,7652,7654,7686],"p":[[3,"Private",8001],[15,"tuple"],[3,"BitSlice",8002],[8,"BitOrder",8003],[3,"BoundedVec",0],[3,"BoundedSlice",0],[15,"u8"],[15,"slice"],[3,"WeakBoundedVec",0],[4,"Error",8004],[4,"Result",8005],[8,"FromByteSlice",8004],[3,"BoundedBTreeMap",0],[3,"Global",8006],[3,"BTreeMap",8007],[8,"Ord",8008],[3,"BoundedBTreeSet",0],[3,"BTreeSet",8009],[3,"Vec",8010],[15,"array"],[15,"usize"],[8,"Clone",8011],[15,"u32"],[8,"Get",1367],[4,"Never",0],[3,"PalletId",0],[4,"Ordering",8008],[8,"Debug",8012],[3,"Error",8013],[8,"Input",8014],[8,"Decode",1367],[4,"Option",8015],[8,"Deserializer",8016],[8,"Deserialize",8016],[3,"Drain",8017],[8,"RangeBounds",8018],[15,"char"],[8,"FromIterator",8019],[8,"Output",8014],[8,"Sized",8020],[8,"Encode",1367],[15,"bool"],[3,"Formatter",8012],[3,"Error",8012],[6,"Result",8012],[15,"str"],[15,"u64"],[8,"Hash",8021],[8,"BuildHasher",8021],[8,"Borrow",8022],[8,"SliceIndex",8023],[8,"Hasher",8021],[3,"IterMut",8007],[3,"IterMut",8024],[8,"FnMut",8025],[8,"Printable",0],[8,"Serialize",8026],[8,"Serializer",8026],[4,"BitSpanError",8027],[8,"IntoIterator",8019],[8,"ExactSizeIterator",8028],[3,"TypeId",8029],[4,"MetaForm",8030],[3,"Type",8031],[8,"FnOnce",8025],[3,"Weight",1367],[3,"PerDispatchClass",771],[4,"DispatchClass",771],[4,"RawOrigin",771],[3,"PostDispatchInfo",771],[3,"DispatchInfo",771],[4,"Pays",771],[8,"Default",8032],[8,"PartialEq",8008],[6,"DispatchResultWithPostInfo",771],[8,"Fn",8025],[8,"OneOrMany",771],[6,"DispatchErrorWithPostInfo",771],[3,"Value",1129],[6,"Result",8033],[3,"InherentData",1367],[3,"CheckInherentsResult",1159],[4,"Error",8034],[3,"IntoIter",8007],[8,"IsFatalError",1159],[3,"Instance1",1220],[4,"VersionedPostUpgradeData",1250],[3,"RuntimeDbWeight",7608],[3,"ConstU32",1367],[3,"PhantomData",1367],[4,"InvalidTransaction",1367],[4,"UnknownTransaction",1367],[4,"TransactionValidityError",1367],[4,"TransactionSource",1367],[3,"ValidTransaction",1367],[4,"DispatchError",1367],[3,"Error",8035],[8,"Reader",8036],[19,"MaybeUninit",8037],[3,"DecodeFinished",8038],[8,"Copy",8020],[3,"MakeFatalError",1367],[8,"Writer",8039],[3,"Length",8040],[8,"From",8041],[3,"LookupError",8042],[3,"ValidTransactionBuilder",8043],[4,"TokenError",8044],[3,"BadOrigin",8042],[4,"TransactionalError",8044],[4,"ArithmeticError",8045],[8,"Mul",8046],[8,"Error",8047],[3,"String",8048],[3,"DispatchErrorWithPostInfo",8044],[8,"EncodeLike",8049],[8,"EncodeLikeTuple",2843],[8,"TupleToEncodedIter",2843],[3,"Replacements",8050],[3,"MultiRemovalResults",2482],[3,"PrefixIterator",2105],[3,"KeyPrefixIterator",2105],[3,"ChildTriePrefixIterator",2105],[4,"TransactionOutcome",2105],[8,"PrefixIteratorOnRemoval",2105],[3,"Recompositions",8051],[3,"Decompositions",8052],[4,"KillStorageResult",2482],[3,"StreamSafe",8053],[4,"ChildInfo",2482],[4,"ChildType",2482],[4,"StateVersion",2482],[8,"FunctionContext",8054],[3,"PrefixedStorageKey",8055],[8,"Codec",8014],[3,"StorageIterator",2741],[3,"StorageKeyIterator",2741],[8,"ReversibleStorageHasher",0],[3,"StorageNoopGuard",2809],[8,"FullCodec",8014],[3,"StorageEntryMetadataIR",8056],[6,"Counter",2843],[8,"CountedStorageMapInstance",2843],[8,"CountedStorageNMapInstance",2843],[3,"StorageInfo",3424],[3,"IntoIter",8057],[3,"StorageVersion",3424],[15,"u16"],[3,"TrackedStorageKey",3424],[3,"Perbill",8058],[3,"Storage",8055],[4,"Bounded",3424],[3,"ConstBool",3424],[3,"ConstU8",3424],[3,"ConstU16",3424],[3,"ConstU64",3424],[3,"ConstU128",3424],[3,"ConstI8",3424],[3,"ConstI16",3424],[3,"ConstI32",3424],[3,"ConstI64",3424],[3,"ConstI128",3424],[3,"WrapperOpaque",3424],[3,"WrapperKeepOpaque",3424],[3,"PalletInfoData",3424],[3,"CallMetadata",3424],[3,"CrateVersion",3424],[3,"Footprint",3424],[8,"Hash",8042],[4,"ProcessMessageError",3424],[3,"QueueFootprint",3424],[8,"Eq",8008],[8,"Saturating",8059],[3,"NoStorageVersionSet",3424],[6,"DispatchResult",8044],[3,"FilterStackGuard",3424],[8,"FilterStack",3424],[3,"ClearFilterGuard",3424],[8,"MaxEncodedLen",1367],[8,"Iterator",8060],[4,"PollStatus",3424],[8,"OriginTrait",3424],[4,"SafeModeError",3424],[4,"ExecuteOverweightError",3424],[3,"Permill",8058],[6,"FetchResult",3424],[15,"never"],[3,"OwnedFd",8061],[8,"IntoFilelike",8062],[8,"IntoSocketlike",8062],[8,"Into",8041],[15,"u128"],[15,"i8"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i128"],[3,"Backing",3424],[4,"Cow",8063],[3,"Duration",8064],[4,"SameOrOther",3424],[4,"TransactionPauseError",3424],[3,"WeightMeter",7608],[6,"SessionIndex",8065],[8,"PartialOrd",8008],[6,"DispatchResult",771],[4,"MaybeHashed",5597],[4,"DispatchTime",5597],[4,"LookupError",5597],[6,"Period",5597],[6,"Priority",5597],[6,"TaskName",5788],[3,"WithdrawReasons",5803],[4,"Provenance",5803],[4,"Restriction",5803],[4,"Preservation",5803],[4,"Fortitude",5803],[4,"Precision",5803],[4,"WithdrawConsequence",5803],[4,"DepositConsequence",5803],[4,"ExistenceRequirement",5803],[4,"BalanceStatus",5803],[8,"Zero",8066],[6,"LockIdentifier",6284],[4,"SignedImbalance",7178],[3,"HoldConsideration",6389],[8,"Mutate",6888],[8,"Convert",8042],[3,"LoneHoldConsideration",6389],[3,"FreezeConsideration",6389],[8,"Mutate",6875],[3,"LoneFreezeConsideration",6389],[3,"Imbalance",6389],[8,"Balance",5803],[8,"HandleImbalanceDrop",6389],[3,"ItemOf",6389],[6,"Debt",6389],[8,"Inspect",6917],[8,"Unbalanced",6917],[8,"Balanced",6917],[3,"Dust",6389],[6,"Credit",6389],[8,"Balanced",6389],[8,"Balanced",7138],[8,"AtLeast8BitUnsigned",8059],[3,"Imbalance",6917],[8,"AssetId",5803],[8,"HandleImbalanceDrop",6917],[6,"Debt",6917],[3,"Dust",6917],[6,"Credit",6917],[8,"AtLeast32BitUnsigned",8059],[8,"MaybeSerializeDeserialize",1367],[8,"Imbalance",7178],[8,"Div",8046],[4,"PaymentStatus",7504],[3,"OldWeight",7608],[3,"WeightToFeeCoefficient",7608],[3,"FeePolynomial",7608],[8,"BaseArithmetic",8059],[8,"Unsigned",8067],[3,"SmallVec",8068],[3,"Compact",8069],[8,"StorageHasher",0],[8,"Hashable",0],[3,"Identity",0],[3,"Twox64Concat",0],[3,"Blake2_128Concat",0],[3,"Blake2_128",0],[3,"Blake2_256",0],[3,"Twox128",0],[3,"Twox256",0],[8,"ECDSAExt",769],[8,"CheckIfFeeless",771],[8,"Callable",771],[8,"ClassifyDispatch",771],[8,"GetDispatchInfo",771],[8,"PaysFee",771],[8,"WeighData",771],[8,"WithPostDispatchInfo",771],[8,"ProvideInherent",1159],[3,"VersionedMigration",1250],[3,"RemovePallet",1250],[8,"PalletVersionToStorageVersionHelper",1250],[8,"StoreCurrentStorageVersion",1250],[8,"ValidateUnsigned",1367],[6,"TransactionValidity",1367],[8,"TypeInfo",1367],[8,"TypedGet",1367],[3,"GetDefault",1367],[8,"StorageList",2105],[8,"IterableStorageDoubleMap",2105],[8,"IterableStorageMap",2105],[8,"IterableStorageNMap",2105],[8,"StorageValue",2105],[8,"StorageMap",2105],[8,"StorageDoubleMap",2105],[8,"StorageNMap",2105],[8,"StorageAppender",2105],[3,"KeyLenOf",2105],[8,"StorageTryAppend",2105],[8,"StoragePrefixedMap",2105],[8,"StorageDecodeLength",2105],[8,"StorageDecodeNonDedupLength",2105],[8,"StoragePrefixedContainer",2105],[8,"StorageStreamIter",2105],[8,"TryAppendValue",2105],[8,"TryAppendMap",2105],[8,"TryAppendDoubleMap",2105],[8,"KeyGenerator",2843],[8,"QueryKindTrait",2843],[8,"ReversibleKeyGenerator",2843],[8,"HasKeyPrefix",2843],[3,"CountedStorageMap",2843],[3,"CountedStorageNMap",2843],[3,"StorageDoubleMap",2843],[3,"StorageMap",2843],[3,"StorageNMap",2843],[3,"StorageValue",2843],[3,"Key",2843],[3,"OptionQuery",2843],[3,"ResultQuery",2843],[3,"ValueQuery",2843],[8,"StorageEntryMetadataBuilder",2843],[8,"HasReversibleKeyPrefix",2843],[8,"KeyGeneratorMaxEncodedLen",2843],[8,"TruncateFrom",3420],[8,"RankedMembers",3424],[8,"AccountTouch",3424],[8,"SafeMode",3424],[8,"TransactionPause",3424],[8,"Polling",3424],[8,"GetStorageVersion",3424],[8,"TryCollect",3424],[8,"QueryPreimage",3424],[8,"Instance",3424],[8,"ValidatorSetWithIdentification",3424],[8,"KeyOwnerProofSystem",3424],[8,"OneSessionHandler",3424],[8,"PalletError",3424],[8,"StorePreimage",3424],[8,"EnqueueMessage",3424],[8,"HandleMessage",3424],[8,"PreimageRecipient",3424],[8,"Time",3424],[8,"ProcessMessage",3424],[8,"ServiceQueues",3424],[8,"UnfilteredDispatchable",3424],[8,"StorageInstance",3424],[8,"EnsureOrigin",3424],[8,"EnsureOriginWithArg",3424],[8,"VariantCount",3424],[8,"ValidatorSet",3424],[8,"VoteTally",3424],[8,"CallerTrait",3424],[8,"GenesisBuild",3424],[8,"EstimateNextSessionRotation",3424],[8,"EstimateNextNewSession",3424],[8,"BeforeAllRuntimeMigrations",3424],[3,"FromContainsPair",3424],[4,"Everything",3424],[4,"Nothing",3424],[3,"EverythingBut",3424],[3,"TheseExcept",3424],[3,"InsideBoth",3424],[3,"Equals",3424],[3,"AsContains",3424],[3,"IsInVec",3424],[3,"EqualPrivilegeOnly",3424],[3,"StorageMapShim",3424],[3,"LinearStoragePrice",3424],[3,"EnsureOriginEqualOrHigherPrivilege",3424],[3,"NeverEnsureOrigin",3424],[3,"AsEnsureOriginWithArg",3424],[3,"MapSuccess",3424],[3,"TryMapSuccess",3424],[3,"TryWithMorphedArg",3424],[3,"EitherOfDiverse",3424],[3,"EitherOf",3424],[3,"ClassCountOf",3424],[3,"NoopServiceQueues",3424],[3,"TransformOrigin",3424],[3,"EnqueueWithOrigin",3424],[8,"BuildGenesisConfig",3424],[8,"Consideration",3424],[8,"ExtrinsicCall",3424],[8,"ChangeMembers",3424],[8,"PrivilegeCmp",3424],[8,"Contains",3424],[8,"ContainsPair",3424],[8,"SortedMembers",3424],[8,"PalletsInfoAccess",3424],[8,"PalletInfo",3424],[8,"PalletInfoAccess",3424],[8,"HandleLifetime",3424],[8,"Defensive",5581],[8,"DefensiveResult",5581],[8,"DefensiveOption",5581],[8,"DefensiveMax",3424],[8,"DefensiveMin",3424],[8,"DefensiveSaturating",3424],[8,"DefensiveTruncateFrom",3424],[8,"EnsureInherentsAreFirst",3424],[8,"SafeModeNotify",3424],[8,"EstimateCallFee",3424],[8,"ExecuteBlock",3424],[8,"Filter",3424],[8,"InstanceFilter",3424],[8,"FindAuthor",3424],[8,"IsType",3424],[8,"StoredMap",3424],[8,"GetBacking",3424],[8,"GetCallIndex",3424],[8,"GetCallMetadata",3424],[8,"GetCallName",3424],[8,"PreimageProvider",3424],[8,"Incrementable",3424],[8,"InitializeMembers",3424],[8,"IntegrityTest",3424],[8,"Hooks",3424],[8,"DisabledValidators",3424],[8,"QueuePausedQuery",3424],[8,"ValidatorRegistration",3424],[8,"IsSubType",3424],[8,"Lateness",3424],[8,"Len",3424],[8,"ContainsLengthBound",3424],[8,"UnixTime",3424],[8,"OffchainWorker",3424],[8,"OnFinalize",3424],[8,"OnGenesis",3424],[8,"OnIdle",3424],[8,"OnInitialize",3424],[8,"OnKilledAccount",3424],[8,"OnNewAccount",3424],[8,"OnRuntimeUpgrade",3424],[8,"OnTimestampSet",3424],[8,"PartialStorageInfoTrait",3424],[8,"Randomness",3424],[8,"StorageInfoTrait",3424],[8,"TryDrop",3424],[8,"VerifySeal",3424],[8,"WhitelistedStorageKeys",3424],[13,"Legacy",5577],[13,"Lookup",5577],[8,"Anon",5762],[8,"Named",5762],[8,"Anon",5774],[8,"Named",5774],[8,"Anon",5788],[8,"Named",5788],[8,"ConversionToAssetBalance",5803],[8,"ConversionFromAssetBalance",5803],[3,"UnityAssetBalanceConversion",5803],[3,"ConvertRank",5803],[8,"GetSalary",5803],[8,"Locker",5803],[8,"Currency",6284],[8,"VestingSchedule",6284],[8,"LockableCurrency",6284],[8,"NamedReservableCurrency",6284],[3,"TotalIssuanceOf",6284],[3,"ActiveIssuanceOf",6284],[8,"ReservableCurrency",6284],[8,"Inspect",6389],[3,"IncreaseIssuance",6389],[3,"DecreaseIssuance",6389],[8,"Mutate",6389],[8,"Unbalanced",6389],[8,"Inspect",6875],[8,"Inspect",6888],[8,"Unbalanced",6888],[8,"Balanced",6888],[8,"InspectEnumerable",6917],[3,"IncreaseIssuance",6917],[3,"DecreaseIssuance",6917],[8,"Mutate",6917],[8,"Create",6917],[8,"Destroy",6917],[8,"Inspect",7120],[8,"Mutate",7120],[8,"Inspect",7125],[8,"Mutate",7125],[8,"Inspect",7138],[8,"Mutate",7138],[8,"Unbalanced",7138],[8,"MetadataDeposit",7165],[8,"Inspect",7165],[8,"Mutate",7165],[8,"Inspect",7173],[3,"ResolveTo",7178],[3,"ResolveAssetTo",7178],[3,"SplitTwoWays",7178],[8,"OnUnbalanced",7178],[8,"Inspect",7295],[8,"InspectEnumerable",7295],[3,"ItemOf",7295],[8,"Mutate",7295],[8,"Transfer",7295],[8,"Inspect",7345],[8,"InspectEnumerable",7345],[3,"ItemOf",7345],[8,"Mutate",7345],[8,"Transfer",7345],[8,"Inspect",7413],[8,"InspectEnumerable",7413],[8,"Destroy",7413],[8,"Mutate",7413],[8,"Create",7413],[8,"Transfer",7413],[8,"Inspect",7447],[8,"InspectEnumerable",7447],[8,"Destroy",7447],[8,"Mutate",7447],[8,"Trading",7447],[8,"Create",7447],[8,"Transfer",7447],[8,"InspectRole",7447],[8,"Pay",7504],[3,"PayFromAccount",7504],[3,"PayAssetFromAccount",7504],[8,"WeightToFee",7608],[8,"WeightToFeePolynomial",7608],[3,"IdentityFee",7608],[3,"FixedFee",7608],[3,"ConstantMultiplier",7608],[3,"BlockExecutionWeight",7899],[3,"ExtrinsicBaseWeight",7899],[3,"ParityDbWeight",7899],[3,"RocksDbWeight",7899]]},\
"sp_io":{"doc":"Substrate Primitives: IO","t":"NNNNDEEDNGGDALMMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLALLLLLFLLLLLLLLLAMMAAAALLLLMALLLLAALLLLLLLLLLLLLLLLLLLLLMLLLLLLADLLLLLLLLLLLLLLLLLDLLLLLFFFFFFFFFFLLLLLLLFFFFFFLLLLLDLLFFLLLFLLLFLLLFFLFFFLLLLLDFFLLLLLLLLLLLFFLFLLFFFLLLDLLLLLLLLLLLFFLLLLLLDLLLLLLLLLLLFFFLFLLLLLDLLLLLLLLLFFFFFFLLFFFFFFFLFFFFLLLLLDLLFLLLLLLLLLLFLLLLLDLLLLLLLLLLLLLLLLLDFLLFFFFLLLFLLLFLLLFFLFFFFLLLLLDLLLLLLLLLFLLLFLLLLLDFFFLLLLLLLLLLLFFFLLLLLLDLLLLLLLLLLLLLLLLL","n":["AllRemoved","BadRS","BadSignature","BadV","Crossing","EcdsaVerifyError","KillStorageResult","MultiRemovalResults","SomeRemaining","SubstrateHostFunctions","TestExternalities","UseDalekExt","allocator","as_mut_any","backend","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","crypto","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","default","default","default_child_storage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","extensions","from","from","from","from","from","from","from_ffi_value","from_ffi_value","from_ffi_value","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","hashing","init","init","init","init","init","init_tracing","into","into","into","into","into","into_ffi_value","into_ffi_value","into_ffi_value","into_inner","logging","loops","maybe_cursor","misc","offchain","offchain_index","panic_handler","size_hint","size_hint","size_hint","size_hint","state_version","storage","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","transaction_index","trie","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique","using_encoded","vzip","vzip","vzip","vzip","vzip","wasm_tracing","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","register_static","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","ecdsa_generate","ecdsa_public_keys","ecdsa_sign","ecdsa_sign_prehashed","ecdsa_verify","ecdsa_verify_prehashed","ed25519_generate","ed25519_public_keys","ed25519_sign","ed25519_verify","from","from_mut","from_ref","host_functions","init","into","register_static","secp256k1_ecdsa_recover","secp256k1_ecdsa_recover_compressed","sr25519_generate","sr25519_public_keys","sr25519_sign","sr25519_verify","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","clear","clear_prefix","deref","deref_mut","drop","exists","from","from_mut","from_ref","get","host_functions","init","into","next_key","read","register_static","root","set","storage_kill","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","blake2_128","blake2_256","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","keccak_256","keccak_512","register_static","sha2_256","try_from","try_into","twox_128","twox_256","twox_64","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","log","max_level","register_static","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","print_hex","print_num","print_utf8","register_static","runtime_version","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","http_request_add_header","http_request_start","http_request_write_body","http_response_headers","http_response_read_body","http_response_wait","init","into","is_validator","local_storage_clear","local_storage_compare_and_set","local_storage_get","local_storage_set","network_state","random_seed","register_static","set_authorized_nodes","sleep_until","submit_transaction","timestamp","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","clear","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","register_static","set","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","register_static","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","append","borrow","borrow_mut","changes_root","clear","clear_prefix","commit_transaction","deref","deref_mut","drop","exists","from","from_mut","from_ref","get","host_functions","init","into","next_key","read","register_static","rollback_transaction","root","set","start_transaction","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","index","init","into","register_static","renew","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","blake2_256_ordered_root","blake2_256_root","blake2_256_verify_proof","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","keccak_256_ordered_root","keccak_256_root","keccak_256_verify_proof","register_static","try_from","try_into","type_id","unchecked_into","vzip","HostFunctions","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_ref","host_functions","init","into","register_static","try_from","try_into","type_id","unchecked_into","vzip"],"q":[[0,"sp_io"],[151,"sp_io::allocator"],[169,"sp_io::crypto"],[203,"sp_io::default_child_storage"],[230,"sp_io::hashing"],[256,"sp_io::logging"],[276,"sp_io::misc"],[298,"sp_io::offchain"],[333,"sp_io::offchain_index"],[353,"sp_io::panic_handler"],[371,"sp_io::storage"],[402,"sp_io::transaction_index"],[422,"sp_io::trie"],[446,"sp_io::wasm_tracing"],[464,"core::any"],[465,"parity_scale_codec::error"],[466,"core::result"],[467,"parity_scale_codec::codec"],[468,"parity_scale_codec::codec"],[469,"alloc::vec"],[470,"core::option"],[471,"core::default"],[472,"parity_scale_codec::codec"],[473,"sp_wasm_interface"],[474,"alloc::string"],[475,"core::any"],[476,"sp_wasm_interface"],[477,"sp_core::ecdsa"],[478,"sp_core::ecdsa"],[479,"sp_core::ed25519"],[480,"sp_core::sr25519"],[481,"sp_core"],[482,"sp_core"],[483,"sp_core::offchain"],[484,"primitive_types"]],"d":["All keys to remove were removed, return number of …","Incorrect value of R or S","Invalid signature","Incorrect value of V","Crossing is a helper wrapping any Encode-Decodeable type …","Error verifying ECDSA signature","The outcome of calling <code>storage_kill</code>. Returned value is the …","Results concerning an operation to remove many keys.","Not all key to remove were removed, return number of …","The host functions Substrate provides for the Wasm runtime …","Type alias for Externalities implementation used in tests.","Extension to signal to [<code>crypt::ed25519_verify</code>] to use the …","Wasm only interface that provides functions for calling …","","Storage backend.","The number of items removed from the backend database.","","","","","","","","","","","Interfaces for working with crypto related types from …","","","","","","","","","","","","","","","","","Deconstruct into the internal components.","","","Interface for accessing the child storage for default …","","","","","","","","","","","","","","","","","","","","","Extensions.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Interface that provides functions for hashing with …","","","","","","Initialize tracing of sp_tracing not necessary – noop. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Convert into the inner type","Interface that provides functions for logging from within …","The number of iterations (each requiring a storage …","A continuation cursor which, if <code>Some</code> must be provided to …","Interface that provides miscellaneous functions for …","Interface that provides functions to access the offchain …","Interface that provides functions to access the Offchain …","WASM-only interface which allows for aborting the …","","","","","State version to use during tests.","Interface for accessing the storage from within the …","","","","","Interface that provides transaction indexing API.","Interface that provides trie related functionality.","","","","","","","","","","","","","","","","","","","","","","The number of unique keys removed, taking into account …","","","","","","","Interface to provide tracing facilities for wasm. Modelled …","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Provides implementations for the extern host functions.","","","","","","Generate an <code>ecdsa</code> key for the given key type using an …","Returns all <code>ecdsa</code> public keys for the given key id from …","Sign the given <code>msg</code> with the <code>ecdsa</code> key that corresponds to …","Sign the given a pre-hashed <code>msg</code> with the <code>ecdsa</code> key that …","Verify <code>ecdsa</code> signature.","Verify <code>ecdsa</code> signature with pre-hashed <code>msg</code>.","Generate an <code>ed22519</code> key for the given key type using an …","Returns all <code>ed25519</code> public keys for the given key id from …","Sign the given <code>msg</code> with the <code>ed25519</code> key that corresponds …","Verify <code>ed25519</code> signature.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","Verify and recover a SECP256k1 ECDSA signature.","Verify and recover a SECP256k1 ECDSA signature.","Generate an <code>sr22519</code> key for the given key type using an …","Returns all <code>sr25519</code> public keys for the given key id from …","Sign the given <code>msg</code> with the <code>sr25519</code> key that corresponds …","Verify <code>sr25519</code> signature.","","","","","","Provides implementations for the extern host functions.","","","Clear a child storage key.","Clear the child storage of each key-value pair where the …","","","","Check a child storage key.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a default child storage value for a given key.","","","Calls <code>U::from(self)</code>.","Child storage key iteration.","Allocation efficient variant of <code>get</code>.","","Default child root calculation.","Set a child storage value.","Clear a child storage key.","","","","","","Provides implementations for the extern host functions.","Conduct a 128-bit Blake2 hash.","Conduct a 256-bit Blake2 hash.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Conduct a 256-bit Keccak hash.","Conduct a 512-bit Keccak hash.","","Conduct a 256-bit Sha2 hash.","","","Conduct two XX hashes to give a 128-bit result.","Conduct four XX hashes to give a 256-bit result.","Conduct two XX hashes to give a 64-bit result.","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Request to print a log message on the host.","Returns the max log level used by the host.","","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Print any <code>u8</code> slice as hex.","Print a number.","Print any valid <code>utf8</code> buffer.","","Extract the runtime version of the given wasm blob by …","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Append header to the request.","Initiates a http request given HTTP verb and the URL.","Write a chunk of request body.","Read all response headers.","Read a chunk of body response to given buffer.","Block and wait for the responses for given requests.","","Calls <code>U::from(self)</code>.","Returns if the local node is a potential validator.","Remove a value from the local storage.","Sets a value in the local storage if it matches current …","Gets a value from the local storage.","Sets a value in the local storage.","Returns information about the local node’s network state.","Returns a random seed.","","Set the authorized nodes and authorized_only flag.","Pause the execution until <code>deadline</code> is reached.","Submit an encoded transaction to the pool.","Returns current UNIX timestamp (in millis)","","","","","","Provides implementations for the extern host functions.","","","Remove a key and its associated value from the Offchain DB.","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","Write a key value pair to the Offchain DB database in a …","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Provides implementations for the extern host functions.","Append the encoded <code>value</code> to the storage item at <code>key</code>.","","","Always returns <code>None</code>. This function exists for …","Clear the storage of the given <code>key</code> and its value.","Clear the storage of each key-value pair where the key …","Commit the last transaction started by <code>start_transaction</code>.","","","","Check whether the given <code>key</code> exists in storage.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Returns the data for <code>key</code> in the storage or <code>None</code> if the key …","","","Calls <code>U::from(self)</code>.","Get the next key in storage after the given one in …","Get <code>key</code> from storage, placing the value into <code>value_out</code> and …","","Rollback the last transaction started by <code>start_transaction</code>.","“Commit” all existing operations and compute the …","Set <code>key</code> to <code>value</code> in the storage.","Start a new nested transaction.","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Add transaction index. Returns indexed content hash.","","Calls <code>U::from(self)</code>.","","Conduct a 512-bit Keccak hash.","","","","","","Provides implementations for the extern host functions.","A trie root formed from the enumerated items.","A trie root formed from the iterated items.","Verify trie proof","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","A trie root formed from the enumerated items.","A trie root formed from the iterated items.","Verify trie proof","","","","","","","Provides implementations for the extern host functions.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[7,3,3,3,0,0,0,0,7,0,0,0,0,1,52,8,3,7,8,1,9,3,7,8,1,9,0,3,7,8,9,3,7,8,9,3,7,8,9,3,7,8,9,8,1,9,0,3,7,8,1,9,3,7,8,1,9,3,7,8,1,9,9,3,7,8,9,52,3,7,7,8,1,9,7,8,9,3,7,8,1,9,3,7,8,1,9,0,3,7,8,1,9,0,3,7,8,1,9,7,8,9,9,0,8,8,0,0,0,0,3,7,8,9,52,0,3,7,8,9,0,0,3,7,8,1,9,3,7,8,1,9,3,7,8,1,1,9,3,7,8,1,9,8,9,3,7,8,1,9,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,0,0,0,0,0,0,54,54,54,54,54,0,55,55,0,0,55,55,55,0,55,55,55,0,55,55,55,0,0,55,0,0,0,55,55,55,55,55,0,0,0,56,56,56,56,56,56,56,56,56,56,56,0,0,56,0,56,56,0,0,0,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,0,0,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,0,0,0,58,0,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,0,0,0,0,0,0,59,59,0,0,0,0,0,0,0,59,0,0,0,0,59,59,59,59,59,0,60,60,0,60,60,60,60,60,60,60,60,60,60,0,60,60,60,60,60,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,62,62,0,0,0,0,62,62,62,0,62,62,62,0,62,62,62,0,0,62,0,0,0,0,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,0,63,63,63,0,63,63,63,63,63,0,0,0,0,64,64,64,64,64,64,64,64,64,64,64,0,0,0,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[5,[3,4]]],6],[-1,[[5,[7,4]]],6],[-1,[[5,[8,4]]],6],[-1,[[5,[[9,[-2]],4]]],6,[10,11,10]],[[[13,[12]]],[[5,[-1,4]]],[]],[[[13,[12]]],[[5,[-1,4]]],[]],[[[13,[12]]],[[5,[-1,4]]],[]],[[[13,[12]]],[[5,[-1,4]]],[]],[[14,[13,[12]]],[[5,[-1,4]]],[]],[[14,[13,[12]]],[[5,[-1,4]]],[]],[[14,[13,[12]]],[[5,[-1,4]]],[]],[[14,[13,[12]]],[[5,[-1,4]]],[]],[[14,-1],[[5,[-2,4]]],6,[]],[[14,-1],[[5,[-2,4]]],6,[]],[[14,-1],[[5,[-2,4]]],6,[]],[[14,-1],[[5,[-2,4]]],6,[]],[8,[[18,[[17,[[16,[12,15]]]],14,14,14]]]],[[],1],[[],[[9,[-1]]],[19,11,10]],0,[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,18],[20,18],[20,18],[20,18],[20,18],[[[9,[-1]]],[[16,[12]]],[11,11,10]],[[3,-1],18,[21,22]],[[7,-1],18,[21,22]],[[8,-1],18,[21,22]],[[[9,[-1]],-2],18,[11,11,10],[21,22]],0,[-1,-1,[]],[-1,-1,[]],[8,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,[[5,[-1,24]]],[]],[23,[[5,[-1,24]]],[]],[23,[[5,[-1,24]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,23],[[5,[24]]],[]],[[-1,23],[[5,[24]]],[]],[[-1,23],[[5,[24]]],[]],[[[9,[-1]]],-1,[11,10]],0,0,0,0,0,0,0,[3,20],[7,20],[8,20],[[[9,[-1]]],20,[11,11,10]],0,0,[[-1,[13,[12]]],[[16,[12,15]]],[]],[[-1,[13,[12]]],[[16,[12,15]]],[]],[[-1,[13,[12]]],[[16,[12,15]]],[]],[[-1,[13,[12]]],[[16,[12,15]]],[]],0,0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[1,25],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[9,[-1]],-2],-3,[11,11,10],26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[-1,[[5,[18]]],28],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[[29,[17,[[16,[12]]]]],30],[29,[[16,[30]]]],[[29,30,[13,[12]]],[[17,[31]]]],[[29,30,[32,[12]]],[[17,[31]]]],[[31,[13,[12]],30],33],[[31,[32,[12]],30],33],[[29,[17,[[16,[12]]]]],34],[29,[[16,[34]]]],[[29,34,[13,[12]]],[[17,[35]]]],[[35,[13,[12]],34],33],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[-1,[[5,[18]]],28],[[[32,[12]],[32,[12]]],[[5,[[32,[12]],3]]]],[[[32,[12]],[32,[12]]],[[5,[[32,[12]],3]]]],[[29,[17,[[16,[12]]]]],36],[29,[[16,[36]]]],[[29,36,[13,[12]]],[[17,[37]]]],[[37,[13,[12]],36],33],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[12]],[13,[12]]],18],[[[13,[12]],[13,[12]],[17,[14]]],7],[20,-1,[]],[20,-1,[]],[20,18],[[[13,[12]],[13,[12]]],33],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[12]],[13,[12]]],[[17,[[16,[12]]]]]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[[[13,[12]],[13,[12]]],[[17,[[16,[12]]]]]],[[[13,[12]],[13,[12]],[13,[12]],14],[[17,[14]]]],[-1,[[5,[18]]],28],[[[13,[12]],38],[[16,[12]]]],[[[13,[12]],[13,[12]],[13,[12]]],18],[[[13,[12]],[17,[14]]],7],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[13,[12]]],[[32,[12]]]],[[[13,[12]]],[[32,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[[[13,[12]]],[[32,[12]]]],[[[13,[12]]],[[32,[12]]]],[-1,[[5,[18]]],28],[[[13,[12]]],[[32,[12]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[13,[12]]],[[32,[12]]]],[[[13,[12]]],[[32,[12]]]],[[[13,[12]]],[[32,[12]]]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[[39,40,[13,[12]]],18],[[],41],[-1,[[5,[18]]],28],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[[[13,[12]]],18],[42,18],[[[13,[12]]],18],[-1,[[5,[18]]],28],[[[13,[12]]],[[17,[[16,[12]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[43,40,40],[[5,[18,18]]]],[[40,40,[13,[12]]],[[5,[43,18]]]],[[43,[13,[12]],[17,[44]]],[[5,[18,45]]]],[43,[[16,[[18,[[16,[12]],[16,[12]]]]]]]],[[43,[13,[12]],[17,[44]]],[[5,[14,45]]]],[[[13,[43]],[17,[44]]],[[16,[46]]]],[[],20],[-1,-2,[],[]],[[],33],[[47,[13,[12]]],18],[[47,[13,[12]],[17,[[16,[12]]]],[13,[12]]],33],[[47,[13,[12]]],[[17,[[16,[12]]]]]],[[47,[13,[12]],[13,[12]]],18],[[],[[5,[48,18]]]],[[],[[32,[12]]]],[-1,[[5,[18]]],28],[[[16,[49]],33],18],[44,18],[[[16,[12]]],[[5,[18,18]]]],[[],44],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[12]]],18],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[-1,[[5,[18]]],28],[[[13,[12]],[13,[12]]],18],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[-1,[[5,[18]]],28],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[13,[12]],[16,[12]]],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[12]]],[[17,[[16,[12]]]]]],[[[13,[12]]],18],[[[13,[12]],[17,[14]]],7],[[],18],[20,-1,[]],[20,-1,[]],[20,18],[[[13,[12]]],33],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[12]]],[[17,[50]]]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[[[13,[12]]],[[17,[[16,[12]]]]]],[[[13,[12]],[13,[12]],14],[[17,[14]]]],[-1,[[5,[18]]],28],[[],18],[38,[[16,[12]]]],[[[13,[12]],[13,[12]]],18],[[],18],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[14,14,[32,[12]]],18],[[],20],[-1,-2,[],[]],[-1,[[5,[18]]],28],[[14,[32,[12]]],18],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[16,[[16,[12]]]],38],51],[[[16,[[18,[[16,[12]],[16,[12]]]]]],38],51],[[51,[13,[[16,[12]]]],[13,[12]],[13,[12]],38],33],[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[[[16,[[16,[12]]]],38],51],[[[16,[[18,[[16,[12]],[16,[12]]]]]],38],51],[[51,[13,[[16,[12]]]],[13,[12]],[13,[12]],38],33],[-1,[[5,[18]]],28],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,-1,[]],[20,-1,[]],[20,18],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[16,[27]]]],[[],20],[-1,-2,[],[]],[-1,[[5,[18]]],28],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"UseDalekExt",0],[8,"Any",464],[4,"EcdsaVerifyError",0],[3,"Error",465],[4,"Result",466],[8,"Input",467],[4,"KillStorageResult",0],[3,"MultiRemovalResults",0],[3,"Crossing",0],[8,"Decode",467],[8,"Encode",467],[15,"u8"],[15,"slice"],[15,"u32"],[3,"Global",468],[3,"Vec",469],[4,"Option",470],[15,"tuple"],[8,"Default",471],[15,"usize"],[8,"Output",467],[8,"Sized",472],[8,"FunctionContext",473],[3,"String",474],[3,"TypeId",464],[8,"FnOnce",475],[8,"Function",473],[8,"HostFunctionRegistry",473],[3,"KeyTypeId",476],[3,"Public",477],[3,"Signature",477],[15,"array"],[15,"bool"],[3,"Public",478],[3,"Signature",478],[3,"Public",479],[3,"Signature",479],[4,"StateVersion",480],[4,"LogLevel",481],[15,"str"],[4,"LogLevelFilter",481],[15,"u64"],[3,"HttpRequestId",482],[3,"Timestamp",482],[4,"HttpError",482],[4,"HttpRequestStatus",482],[4,"StorageKind",482],[3,"OpaqueNetworkState",482],[3,"OpaquePeerId",481],[3,"Bytes",483],[3,"H256",484],[6,"TestExternalities",0],[3,"HostFunctions",151],[3,"HostFunctions",169],[3,"HostFunctions",203],[3,"HostFunctions",230],[3,"HostFunctions",256],[3,"HostFunctions",276],[3,"HostFunctions",298],[3,"HostFunctions",333],[3,"HostFunctions",353],[3,"HostFunctions",371],[3,"HostFunctions",402],[3,"HostFunctions",422],[3,"HostFunctions",446]]},\
"sp_runtime":{"doc":"Substrate Runtime Primitives.","t":"SDNNDGGNNENNNNNIDDDDIINNNNNGNNNNIDSIYICCEDGGGNNNNNNEGNNNNNNNDDIIDDNNSNNQQGGDDNNRNNDEEENNNNNNNNNNNNDNNNNQIDDDDDQDNNNNNEIYESIIYQNNEDDSNNENNENNEGINNNNNNQGNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOKLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAOAOKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKALLLLLLLLLLLLLLAOLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLFLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLMMLLLLLLLDEDNNNDEEENDNNNENNNGNNNNNNNNDDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFRRRRRRRRRRRRAGNNNNEGNNNDNNNNNNLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLDINNDINSEDENNNNSDNDSSSSDEIDDDNSNRNESDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLAKLKLKLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLKLKLLKLLLLLLLLLLLMKLKLLLLKLKLLLLLLLLLKLAALLLKLAKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENDDGNENNNDNNDDDNLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLNEEGDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDQIDDDLLMLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLMLMLMMMMMLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLDLLLLLLLLLLLLLLLLLLLLDNGGDDGNNNNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLMLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLGDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQQIDQIDIIIDDIIIQIIQQQQIIQQIIIIDIIIIQIIDDGIIIIIIIIIIIIIIIQIQIIIIQQIQGIQSIDDQIIDQIIDIIIIIIIIIIDDQQGIIQQQQGQQIDDQQIIIQQQIQIDQQIQQIDQQDIIDIDIISIIILLLKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLKFKKKKLLLLLLLKKLLLLLLLKKLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLFLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLKMLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLKLKKLKLLKKKKLLLKKLLLLKLLLLLKKLLLLLLLLKKKLLLKKKLLLKLKLLKLLKLLLLLKLLLKLKLKLLKKLKKLLLKKLLKLLLKLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLKKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLKLLKLKLKKLLLLLLLLLLLLLLLLLLLLKLNNNNNNNNNNNNNNENNNNNNGGEGGENEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ACCURACY","AccountId32","Address20","Address32","AnySignature","ApplyExtrinsicResult","ApplyExtrinsicResultWithInfo","Arithmetic","Arithmetic","ArithmeticError","BadOrigin","BadOrigin","BelowMinimum","Blocked","Borrowed","BoundToRuntimeAppPublic","BoundedBTreeMap","BoundedBTreeSet","BoundedSlice","BoundedVec","BuildModuleGenesisStorage","BuildStorage","CannotCreate","CannotCreateHold","CannotLookup","CannotLookup","Commit","ConsensusEngineId","ConsumerRemaining","ConsumerRemaining","Corruption","Corruption","CryptoType","CryptoTypeId","DIV","Deserialize","Deserialize","DeserializeOwned","Digest","DigestItem","DispatchError","DispatchErrorWithPostInfo","DispatchOutcome","DispatchResult","DispatchResultWithInfo","DivisionByZero","Down","Ecdsa","Ecdsa","Ed25519","Ed25519","Either","EncodedJustification","Err","Err","Err","Err","Err","Exhausted","Exhausted","FixedI128","FixedI64","FixedPointNumber","FixedPointOperand","FixedU128","FixedU64","Frozen","FundsUnavailable","ID","Id","Index","Inner","Inner","InnerOf","Justification","Justifications","KeyTypeId","Left","LimitReached","MAX_MODULE_ERROR_ENCODED_SIZE","Module","Module","ModuleError","MultiAddress","MultiSignature","MultiSigner","NearestPrefDown","NearestPrefUp","NoLayer","NoProviders","NoProviders","NotExpendable","Ok","Ok","Ok","Ok","Ok","OnlyProvider","OpaqueExtrinsic","Other","Other","Overflow","Owned","Pair","PerThing","PerU16","Perbill","Percent","Permill","Perquintill","Public","Rational128","Raw","Right","Rollback","RootNotAllowed","RootNotAllowed","Rounding","RuntimeAppPublic","RuntimeDebug","RuntimeString","SIGNED","SaturatedConversion","Serialize","Serialize","Signature","Sr25519","Sr25519","StateVersion","Storage","StorageChild","TYPE_ID","Token","Token","TokenError","TooManyConsumers","TooManyConsumers","TransactionOutcome","Transactional","Transactional","TransactionalError","TryRuntimeError","TypeId","Unavailable","Unavailable","Underflow","UnknownAsset","Unsupported","Up","Upper","UpperOf","V0","V1","WeakBoundedVec","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accuracy","add","add","add","add","add","add","add","add","add","add","add","add","add","all","all","and","any","append","as_bits","as_bits","as_bits","as_bits","as_bits","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_bits","as_mut_byte_slice","as_mut_byte_slice","as_mut_byte_slice","as_mut_slice_of","as_mut_slice_of","as_mut_slice_of","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","as_slice_of","as_slice_of","as_slice_of","assert_eq_error_rate","assert_eq_error_rate_float","assimilate_storage","assimilate_storage","biguint","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","bound","bounded_btree_map","bounded_btree_map","bounded_vec","bounded_vec","build_module_genesis_storage","build_storage","cause","ceil","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_div","checked_div_int","checked_from_integer","checked_from_rational","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul_int","checked_rounding_div","checked_rounding_div","checked_rounding_div","checked_rounding_div","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","child_info","children_default","cjk_compat_variants","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collect","const_checked_div","const_checked_div","const_checked_div","const_checked_div","const_checked_mul","const_checked_mul","const_checked_mul","const_checked_mul","const_checked_mul_with_rounding","const_checked_mul_with_rounding","const_checked_mul_with_rounding","const_checked_mul_with_rounding","consume","count","count","create_runtime_str","create_runtime_str","curve","d","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_from","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","drive","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","either","either_into","either_with","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_as","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","fill_buf","find","find_map","flip","floor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","for_each","force_from","format_runtime_string","format_runtime_string","frac","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_entropy","from_entropy","from_fd","from_ffi_value","from_ffi_value","from_filelike","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_float","from_fraction","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_into_filelike","from_into_socketlike","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_perbill","from_perbill","from_perbill","from_perbill","from_percent","from_percent","from_percent","from_percent","from_percent","from_percent","from_perthousand","from_perthousand","from_perthousand","from_perthousand","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_signed","from_socketlike","from_str","from_str","from_str","from_str","from_str","from_u32","from_u32","from_u32","from_u32","from_unchecked","generate_pair","generic","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut","hash","hash","hash","hash","hash","hash","helpers_128bit","impl_opaque_keys","index","index","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","int_div","int_div","int_div","int_div","int_div","int_mul","int_mul","int_mul","int_mul","int_mul","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_account","into_clamped_perthing","into_clamped_perthing","into_clamped_perthing","into_clamped_perthing","into_ffi_value","into_ffi_value","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_justification","into_par_iter","into_perbill","into_perbill","into_perbill","into_perbill","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_clear","is_left","is_negative","is_one","is_one","is_one","is_one","is_one","is_one","is_one","is_positive","is_right","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","is_zero","iter","key_types","last","lazy_saturating_add","lazy_saturating_sub","lcm","left","left_and_then","left_from_one","left_or","left_or_default","left_or_else","legacy","len","len","len","len","less_epsilon","map","map_either","map_either_with","map_left","map_right","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","max_value","message","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","min_value","morph_types","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_ceil","mul_ceil","mul_ceil","mul_ceil","mul_floor","mul_floor","mul_floor","mul_floor","mul_floor","mul_floor","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","n","neg","neg","neg","neg","neg","neg","neg","neg","new","new","next","next_back","nfc","nfd","nfkc","nfkd","nth","offchain","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","one","opt_len","par_extend","parse_formatted","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partition","plus_epsilon","poll","position","post_info","pow","pow","pow","pow","pow","print","print","print","read","read_exact","read_line","read_to_end","read_to_string","read_until","reciprocal","remove","remove","remove","retain","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","round","runtime_logger","saturated_from","saturated_into","saturating_abs","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div","saturating_div_int","saturating_from_integer","saturating_from_rational","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul_acc_int","saturating_mul_int","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","seek","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","source","sqrt","sqrt","sqrt","sqrt","square","square","square","square","square","square","state_value_threshold","str_array","stream_safe","stripped","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","swap_remove","take","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","tcmp","testing","to_den","to_float","to_float","to_float","to_float","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_vec","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","top","traits","transaction_validity","trunc","try_as_bits","try_as_bits","try_as_bits","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_as_mut_bits","try_collect","try_collect","try_collect","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_perthing","try_into_perthing","try_into_perthing","try_into_perthing","try_less_epsilon","try_mutate","try_mutate","try_plus_epsilon","try_poll","try_push","try_sqrt","try_sqrt","try_sqrt","try_sqrt","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_from","unchecked_from","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unwrap_left","unwrap_right","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","using_encoded","verify","verify","verify","verify_encoded_lazy","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_producer","write","write","write_all","write_fmt","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","zero","BigUint","Double","Single","__clone_box","add","add","add_single","borrow","borrow_mut","checked_get","clear","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","div","div_unit","drop","encode","encode_to","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from_limbs","from_mut","from_ref","get","init","into","is_clear","is_zero","len","lpad","lsb","lstrip","msb","mul","mul","mul_single","one","partial_cmp","set","size_hint","split","sub","sub","to_keyed_vec","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","using_encoded","vzip","with_capacity","zero","BoundedBTreeMap","__clone_box","as_ref","borrow","borrow_mut","bound","clear","clear","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_ref","get_hash","get_mut","hash","init","into","into_inner","into_iter","into_iter","into_iter","is_clear","iter_mut","len","map","max_encoded_len","new","partial_cmp","remove","remove_entry","retain","size_hint","skip","to_keyed_vec","to_owned","try_from","try_from","try_insert","try_into","try_map","try_mutate","type_id","type_info","unchecked_into","unique_saturated_into","vzip","BoundedSlice","BoundedVec","TruncateFrom","__clone_box","__clone_box","as_bits","as_bounded_slice","as_byte_slice","as_mut","as_mut_bits","as_mut_byte_slice","as_mut_slice_of","as_ref","as_ref","as_slice_of","borrow","borrow","borrow_mut","borrow_mut","bound","bounded_resize","clear","clear","clone","clone","clone_into","clone_into","cmp","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref_mut","deref_mut","deserialize","drain","drop","drop","encode_hex","encode_hex_upper","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","force_insert_keep_left","force_insert_keep_right","force_push","from","from","from_mut","from_mut","from_ref","from_ref","get_hash","get_hash","get_mut","hash","hash","index","index_mut","init","init","into","into","into_inner","into_iter","into_iter","into_iter","into_iter","is_clear","is_full","iter_mut","last_mut","len","max_encoded_len","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","remove","retain","serialize","size_hint","size_hint","skip","slide","sort","sort_by","sort_by_key","swap_remove","to_keyed_vec","to_owned","to_owned","truncate","truncate_from","truncate_from","truncate_from","truncate_from","truncate_from","try_append","try_as_bits","try_as_mut_bits","try_extend","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_mutate","try_push","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","with_bounded_capacity","with_max_capacity","PiecewiseLinear","borrow","borrow_mut","calculate_for_fraction_times_denominator","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_mut","from_ref","init","into","maximum","points","try_from","try_into","type_id","type_info","unchecked_into","unique_saturated_into","vzip","Block","BlockId","CheckedExtrinsic","Consensus","Consensus","Consensus","Digest","DigestItem","DigestItemRef","Era","Hash","Header","Immortal","Mortal","Number","OpaqueDigestItemId","Other","Other","Other","Phase","PreRuntime","PreRuntime","PreRuntime","RuntimeEnvironmentUpdated","RuntimeEnvironmentUpdated","Seal","Seal","Seal","SignedBlock","SignedPayload","UncheckedExtrinsic","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","apply","as_consensus","as_consensus","as_other","as_other","as_pre_runtime","as_pre_runtime","as_seal","as_seal","birth","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check_equal","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_try_to","consensus_try_to","convert_first","death","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest","digest_mut","dref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode_from","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics","extrinsics_root","extrinsics_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_raw","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","function","function","hash","hash","header","header","immortal","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","is_clear","is_immortal","is_pre_genesis","is_signed","justifications","log","logs","logs","mortal","new","new","new","new","new_from_number","new_signed","new_unsigned","number","number","number","parent_hash","parent_hash","partial_cmp","pop","pre_genesis","pre_runtime_try_to","pre_runtime_try_to","push","seal_try_to","seal_try_to","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_extrinsics_root","set_number","set_parent_hash","set_state_root","signature","signed","size_hint","size_hint","size_hint","size_hint","size_hint","state_root","state_root","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_as_raw","try_as_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to","try_to","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","gcd","multiply_by_rational_with_rounding","split","sqrt","to_big_uint","ACCOUNT","AURA","AUTHORITY_DISCOVERY","BABE","BEEFY","DUMMY","GRANDPA","IM_ONLINE","MIXNET","SASSAFRAS","STAKING","STATEMENT","byte_sized_error","ApplyExtrinsicResult","Arithmetic","BadOrigin","CannotLookup","ConsumerRemaining","DispatchError","DispatchOutcome","Err","Err","Module","ModuleError","NoProviders","Ok","Ok","Other","Token","TooManyConsumers","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_to_latest","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","index","init","init","into","into","message","serialize","serialize","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","Capabilities","DbExternalities","DeadlineReached","DeadlineReached","Duration","Externalities","Finished","HTTP","HttpError","HttpRequestId","HttpRequestStatus","Invalid","Invalid","IoError","IoError","KEYSTORE","KeyTypeId","LOCAL","LimitedExternalities","NETWORK_STATE","NODE_AUTHORIZATION","OFFCHAIN_DB_READ","OFFCHAIN_DB_WRITE","OffchainDbExt","OffchainOverlayedChange","OffchainStorage","OffchainWorkerExt","OpaqueMultiaddr","OpaqueNetworkState","PERSISTENT","RANDOMNESS","Remove","STORAGE_PREFIX","SetValue","StorageKind","TIME","Timestamp","TransactionPool","TransactionPoolExt","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","all","as_mut_any","as_mut_any","as_mut_any","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","compare_and_set","complement","contains","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","diff","difference","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode","encode","encode","encode","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","external_addresses","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_ffi_value","from_ffi_value","from_ffi_value","from_ffi_value","from_ffi_value","from_ffi_value","from_ffi_value","from_ffi_value","from_inner","from_inner","from_inner","from_inner","from_iter","from_millis","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_unix_millis","get","get_hash","get_hash","get_hash","hash","hash","hash","http","http_request_add_header","http_request_add_header","http_request_start","http_request_start","http_request_write_body","http_request_write_body","http_response_headers","http_response_headers","http_response_read_body","http_response_read_body","http_response_wait","http_response_wait","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ffi_value","into_ffi_value","into_ffi_value","into_ffi_value","into_ffi_value","into_ffi_value","into_ffi_value","into_ffi_value","into_inner","into_inner","into_inner","into_inner","is_all","is_clear","is_clear","is_clear","is_empty","is_validator","is_validator","local_storage_clear","local_storage_clear","local_storage_compare_and_set","local_storage_compare_and_set","local_storage_get","local_storage_get","local_storage_set","local_storage_set","millis","network_state","network_state","new","new","new","new","new","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peer_id","random_seed","random_seed","remove","remove","serialize","serialize","serialize","set","set","set_authorized_nodes","set_authorized_nodes","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sleep_until","sleep_until","storage","storage_lock","sub","sub","sub_assign","submit_transaction","symmetric_difference","testing","timestamp","timestamp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","union","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unix_millis","using_encoded","using_encoded","using_encoded","using_encoded","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DeadlineReached","Delete","Err","Error","Get","Headers","HeadersIterator","HttpResult","IoError","Method","Ok","Other","Patch","PendingRequest","Post","Put","Request","Response","ResponseBody","Unknown","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_header","as_ref","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","current","deadline","deadline","deadline","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","find","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","headers","id","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_iter","into_iter","is_clear","method","method","new","next","next","par_bridge","parse_formatted","post","raw","send","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_wait","try_wait_all","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","url","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait_all","ConcurrentModification","MutateStorageError","StorageRetrievalError","StorageValue","StorageValueRef","Undecodable","ValueFunctionFailed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","get","init","init","init","into","into","into","local","mutate","persistent","set","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","BlockAndTime","BlockAndTimeDeadline","Deadline","Lockable","StorageLock","StorageLockGuard","Time","__clone_box","__clone_box","block_number","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","deadline","deadline","deadline","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode","encode_to","encode_to","eq","equivalent","equivalent","equivalent","extend_lock","fmt","forget","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","has_expired","has_expired","has_expired","init","init","init","init","init","into","into","into","into","into","is_clear","lock","new","size_hint","size_hint","snooze","snooze","snooze","timestamp","to_keyed_vec","to_keyed_vec","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","vzip","vzip","vzip","vzip","vzip","with_block_and_time_deadline","with_block_deadline","with_deadline","with_lockable","OffchainState","PendingRequest","PoolState","TestOffchainExt","TestPersistentOffchainDB","TestTransactionPoolExt","__clone_box","__clone_box","apply_offchain_changes","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","compare_and_set","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","expect_request","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","fulfill_pending_request","get","get","headers","http_request_add_header","http_request_start","http_request_write_body","http_response_headers","http_response_read_body","http_response_wait","init","init","init","init","init","init","into","into","into","into","into","into","is_clear","is_validator","local_storage","local_storage_clear","local_storage_compare_and_set","local_storage_get","local_storage_set","meta","method","network_state","new","new","new","persistent_storage","random_seed","read","remove","requests","response","response_headers","seed","sent","set","set_authorized_nodes","sleep_until","submit_transaction","timestamp","timestamp","to_owned","to_owned","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","uri","vzip","vzip","vzip","vzip","vzip","vzip","with_offchain_db","RuntimeLogger","borrow","borrow_mut","deref","deref_mut","drop","enabled","flush","from","from_mut","from_ref","init","init","into","log","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Block","Consensus","Digest","DigestItem","ExtrinsicWrapper","H256","Header","Other","PreRuntime","RuntimeEnvironmentUpdated","Seal","TestSignature","TestXt","UintAuthorityId","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","apply","as_bits","as_bits","as_byte_slice","as_byte_slice","as_bytes","as_bytes_mut","as_fixed_bytes","as_fixed_bytes_mut","as_mut","as_mut_bits","as_mut_byte_slice","as_mut_ptr","as_mut_slice_of","as_ptr","as_ref","as_ref","as_slice_of","as_slice_of","assign_from_slice","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","check","check_equal","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","covers","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","digest","drop","drop","drop","drop","drop","drop","encode","encode","encode_from","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics","extrinsics_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_ffi_value","from_filelike","from_inner","from_into_filelike","from_into_socketlike","from_low_u64_be","from_low_u64_le","from_low_u64_ne","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_socketlike","from_str","generate_pair","get","get_hash","get_hash","get_hash","get_raw","hash","hash","hash","header","header","index","index_mut","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_account","into_ffi_value","into_inner","is_clear","is_clear","is_signed","is_signed","is_zero","key_ids","len_bytes","logs","max_encoded_len","max_encoded_len","new","new","new","new_from_number","number","parent_hash","partial_cmp","partial_cmp","random","random_using","randomize","randomize_using","repeat_byte","serialize","serialize","serialize","serialize","serialize","serialize","set_all_keys","sign","signature","size_hint","size_hint","size_hint","size_hint","size_hint","sr25519","state_root","to_fixed_bytes","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_low_u64_be","to_low_u64_le","to_low_u64_ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_raw_vec","to_string","try_as_bits","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","using_encoded","validate","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","zero","CRYPTO_ID","Pair","Public","Signature","__clone_box","__clone_box","__clone_box","all","as_array_ref","as_bits","as_bits","as_byte_slice","as_byte_slice","as_mut","as_mut","as_mut_bits","as_mut_bits","as_mut_byte_slice","as_mut_byte_slice","as_mut_slice_of","as_mut_slice_of","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice_of","as_slice_of","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","derive","derive","deserialize","deserialize","drop","drop","drop","encode","encode","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_entropy","from_ffi_value","from_ffi_value","from_h256","from_h512","from_inner","from_inner","from_mut","from_mut","from_mut","from_raw","from_raw","from_ref","from_ref","from_ref","from_seed_slice","from_slice","from_str","from_string","from_string_with_version","generate_pair","get_hash","get_hash","hash","hash","init","init","init","inner","inner","into","into","into","into_account","into_ffi_value","into_ffi_value","into_inner","into_inner","make_bytes","make_bytes","max_encoded_len","max_encoded_len","partial_cmp","public","serialize","serialize","sign","sign","size_hint","size_hint","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_raw_vec","to_raw_vec","to_string","try_as_bits","try_as_bits","try_as_mut_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_info","type_info","unchecked_from","unchecked_from","unchecked_from","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","using_encoded","using_encoded","verify","verify","verify","verify_deprecated","vrf","vrf_output","vrf_sign","vrf_verify","vzip","vzip","vzip","VrfInput","VrfOutput","VrfProof","VrfSignData","VrfSignature","VrfTranscript","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encode","encode","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","into","into","into","into","into","into_sign_data","make_bytes","max_encoded_len","max_encoded_len","max_encoded_len","new","new","output","proof","size_hint","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","with_extra","AccountId","AccountId","AccountId","AccountIdConversion","AccountIdLookup","AdditionalSigned","AppVerify","AppendZerosInput","Applyable","AtLeast32Bit","AtLeast32BitUnsigned","BadOrigin","BlakeTwo256","BlindCheckable","Block","BlockIdTo","BlockNumber","BlockNumberProvider","Bounded","Call","Call","Call","Call","CheckEqual","Checkable","Checked","Checked","CheckedAdd","CheckedConversion","CheckedDiv","CheckedMul","CheckedReduceBy","CheckedShl","CheckedShr","CheckedSub","Clear","Config","Convert","ConvertBack","ConvertInto","ConvertToValue","DispatchInfoOf","Dispatchable","Ensure","EnsureAdd","EnsureAddAssign","EnsureDiv","EnsureDivAssign","EnsureFixedPointNumber","EnsureFrom","EnsureInto","EnsureMul","EnsureMulAssign","EnsureOp","EnsureOpAssign","EnsureSub","EnsureSubAssign","Error","Extrinsic","Extrinsic","ExtrinsicMetadata","GetNodeBlockType","GetRuntimeBlockType","Hash","Hash","Hash","HashOutput","Hashing","HashingFor","Header","Header","IDENTIFIER","IdentifyAccount","Identity","IdentityLookup","Info","IntegerSquareRoot","IsMember","Keccak256","KeyTypeIdProviders","Lazy","Lookup","LookupError","MaybeConvert","MaybeConvertBack","MaybeDisplay","MaybeEquivalence","MaybeFromStr","MaybeHash","MaybeSerialize","MaybeSerializeDeserialize","Member","Morph","MorphInto","MorphWithUpperLimit","NodeBlock","Number","NumberFor","One","OpaqueKeys","Outcome","Outcome","Output","Output","PostDispatchInfoOf","PostInfo","Pre","Printable","ReduceBy","Replace","RuntimeBlock","RuntimeOrigin","SaturatedConversion","Saturating","Scale","Signature","SignatureAddress","SignatureExtra","SignaturePayload","SignaturePayload","SignedExtension","SignedExtensionMetadata","SignedExtensions","Signer","SimpleBitOps","Source","Source","StaticLookup","TakeFirst","Target","Target","TrailingZeroInput","TryConvert","TryConvertBack","TryConvertInto","TryMorph","TryMorphInto","UniqueSaturatedFrom","UniqueSaturatedInto","VERSION","ValidateUnsigned","Verify","Zero","__clone_box","__clone_box","__clone_box","additional_signed","additional_signed","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","check_equal","checked_add","checked_div","checked_from","checked_into","checked_mul","checked_pow","checked_shl","checked_shr","checked_sub","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert_back","convert_back","convert_back","convert_back","convert_back","convert_back","convert_back","current_block_number","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","digest","digest_mut","dispatch","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_from","encode_to","encode_to","ensure_add","ensure_add_assign","ensure_div","ensure_div_assign","ensure_div_int","ensure_from","ensure_from_rational","ensure_into","ensure_mul","ensure_mul_assign","ensure_mul_int","ensure_pow","ensure_sub","ensure_sub_assign","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics","extrinsics_root","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get","get_raw","hash","hash","hash","hash","hash","hash_of","header","identifier","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","integer_sqrt","integer_sqrt_checked","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_account","into_account_truncating","into_sub_account_truncating","is_clear","is_clear","is_member","is_one","is_signed","is_zero","key_ids","lookup","lookup","lookup","lookup","lookup","max_value","maybe_convert","maybe_convert","maybe_convert","maybe_convert","maybe_convert","maybe_convert_back","maybe_convert_back","maybe_convert_back","maybe_convert_back","maybe_convert_back","metadata","min_value","morph","morph","morph","morph","morph","morph","morph","morph","morph","mul","new","new","new","new","new","number","one","ordered_trie_root","ordered_trie_root","ordered_trie_root","ownership_proof_is_valid","parent_hash","post_dispatch","pre_dispatch","pre_dispatch","pre_dispatch_unsigned","print","read","read","rem","remaining_len","remaining_len","saturated_from","saturated_into","saturating_accrue","saturating_add","saturating_dec","saturating_inc","saturating_less_one","saturating_mul","saturating_plus_one","saturating_pow","saturating_reduce","saturating_sub","serialize","serialize","set_extrinsics_root","set_number","set_one","set_parent_hash","set_state_root","set_zero","size_hint","size_hint","state_root","to_hash","to_keyed_vec","to_keyed_vec","to_number","to_owned","to_owned","to_owned","trie_root","trie_root","trie_root","try_convert","try_convert","try_convert","try_convert","try_convert","try_convert_back","try_convert_back","try_convert_back","try_convert_back","try_convert_back","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_account","try_from_sub_account","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_account","try_into_sub_account","try_morph","try_morph","try_morph","try_morph","try_morph","try_morph","try_morph","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unlookup","unlookup","unlookup","validate","validate","validate_unsigned","validate_unsigned","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zeroes","AncientBirthBlock","BadMandatory","BadProof","BadSigner","Call","CannotLookup","Custom","Custom","Err","ExhaustsResources","External","Future","InBlock","Invalid","InvalidTransaction","Local","MandatoryValidation","NoUnsignedValidator","Ok","Payment","Stale","TransactionLongevity","TransactionPriority","TransactionSource","TransactionTag","TransactionValidity","TransactionValidityError","Unknown","UnknownTransaction","ValidTransaction","ValidTransactionBuilder","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and_provides","and_requires","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_with","combine_with","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exhausted_resources","exhausted_resources","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","into","into","into","into","into","into","is_clear","longevity","longevity","priority","priority","propagate","propagate","provides","requires","serialize","serialize","serialize","size_hint","size_hint","size_hint","size_hint","size_hint","source","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","was_mandatory","was_mandatory","with_tag_prefix"],"q":[[0,"sp_runtime"],[2291,"sp_runtime::biguint"],[2362,"sp_runtime::bounded_btree_map"],[2426,"sp_runtime::bounded_vec"],[2574,"sp_runtime::curve"],[2600,"sp_runtime::generic"],[3081,"sp_runtime::helpers_128bit"],[3086,"sp_runtime::key_types"],[3098,"sp_runtime::legacy"],[3099,"sp_runtime::legacy::byte_sized_error"],[3190,"sp_runtime::offchain"],[3775,"sp_runtime::offchain::http"],[4012,"sp_runtime::offchain::storage"],[4083,"sp_runtime::offchain::storage_lock"],[4225,"sp_runtime::offchain::testing"],[4396,"sp_runtime::runtime_logger"],[4417,"sp_runtime::testing"],[4778,"sp_runtime::testing::sr25519"],[4969,"sp_runtime::testing::sr25519::vrf"],[5124,"sp_runtime::traits"],[5824,"sp_runtime::transaction_validity"],[6079,"dyn_clone::sealed"],[6080,"alloc::alloc"],[6081,"alloc::vec"],[6082,"core::iter::traits::iterator"],[6083,"core::ops::function"],[6084,"parity_scale_codec::codec"],[6085,"bitvec::slice"],[6086,"bitvec::order"],[6087,"core::convert"],[6088,"core::ffi::c_str"],[6089,"std::path"],[6090,"std::ffi::os_str"],[6091,"byte_slice_cast"],[6092,"core::result"],[6093,"byte_slice_cast"],[6094,"core::convert"],[6095,"core::cmp"],[6096,"alloc::string"],[6097,"core::error"],[6098,"core::option"],[6099,"core::convert"],[6100,"unicode_normalization::replace"],[6101,"bounded_collections"],[6102,"core::clone"],[6103,"core::cmp"],[6104,"parity_scale_codec::codec"],[6105,"std::io"],[6106,"parity_scale_codec::error"],[6107,"parity_scale_codec::codec"],[6108,"core::ops::deref"],[6109,"core::ops::deref"],[6110,"rayon::iter"],[6111,"rayon::iter::plumbing"],[6112,"rayon::iter"],[6113,"core::iter::traits::collect"],[6114,"std::io"],[6115,"sp_core::ed25519"],[6116,"sp_core::ecdsa"],[6117,"std::os::fd::owned"],[6118,"sp_wasm_interface"],[6119,"io_lifetimes::portability"],[6120,"io_lifetimes::portability"],[6121,"core::ops::arith"],[6122,"sp_arithmetic::rational"],[6123,"core::hash"],[6124,"core::hash"],[6125,"core::hash"],[6126,"core::ops::arith"],[6127,"sp_arithmetic::per_things"],[6128,"unicode_normalization::recompose"],[6129,"unicode_normalization::decompose"],[6130,"core::marker"],[6131,"num_format::format"],[6132,"num_format::parsing"],[6133,"core::task::wake"],[6134,"core::task::poll"],[6135,"core::future::future"],[6136,"std::io"],[6137,"sp_arithmetic::per_things"],[6138,"unicode_normalization::stream_safe"],[6139,"bitvec::ptr::span"],[6140,"core::any"],[6141,"scale_info::form"],[6142,"scale_info::ty"],[6143,"rayon::iter::plumbing"],[6144,"alloc::collections::btree::map"],[6145,"core::ops::range"],[6146,"core::slice::iter"],[6147,"primitive_types"],[6148,"core::convert"],[6149,"scale_info"],[6150,"core::any"],[6151,"sp_core"],[6152,"rayon::iter::par_bridge"],[6153,"parking_lot::raw_rwlock"],[6154,"lock_api::rwlock"],[6155,"alloc::sync"],[6156,"log"],[6157,"log"],[6158,"rand::rng"],[6159,"sp_core::crypto"],[6160,"schnorrkel::keys"],[6161,"sp_core::crypto"],[6162,"schnorrkel::keys"],[6163,"primitive_types"]],"d":["The accuracy of this type.","Re-export this since it’s part of the API of this crate. …","Its a 20 byte representation.","It’s a 32 byte representation.","Signature verify that can work with any known signature …","The result of applying of an extrinsic.","Same as <code>ApplyExtrinsicResult</code> but augmented with …","An arithmetic error.","An arithmetic error.","Re-export top-level arithmetic stuff. Arithmetic errors.","A bad origin.","A bad origin.","Account cannot exist with the funds that would be given.","Account cannot receive the assets.","The borrowed mode that wraps a <code>&amp;&#39;static str</code>.","Something that is bound to a fixed <code>RuntimeAppPublic</code>.","Re-export this since it’s part of the API of this crate. …","Re-export this since it’s part of the API of this crate. …","Re-export this since it’s part of the API of this crate. …","Re-export this since it’s part of the API of this crate. …","Something that can build the genesis storage of a module.","Complex storage builder stuff.","Account cannot be created.","Account cannot be created for a held balance.","Failed to lookup some data.","Failed to lookup some data.","Commit the transaction.","Consensus engine unique ID.","At least one consumer is remaining so the account cannot …","At least one consumer is remaining so the account cannot …","The state is corrupt; this is generally not going to fix …","The state is corrupt; this is generally not going to fix …","Re-export this since it’s part of the API of this crate. …","Re-export this since it’s part of the API of this crate. …","Precision of this fixed point implementation. It should be …","A <strong>data structure</strong> that can be deserialized from any data …","","A data structure that can be deserialized without …","Re-export these since they’re only “kind of” generic.","Re-export these since they’re only “kind of” generic.","Reason why a dispatch call failed.","Result of a <code>Dispatchable</code> which contains the <code>DispatchResult</code> …","This type specifies the outcome of dispatching a call to a …","This is the legacy return type of <code>Dispatchable</code>. It is …","Return type of a <code>Dispatchable</code> which contains the …","Division by zero.","","An ECDSA/SECP256k1 signature.","An SECP256k1/ECDSA identity (actually, the Blake2 hash of …","An Ed25519 signature.","An Ed25519 identity.","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","The encoded justification specific to a consensus engine.","Contains the error value","Contains the error value","Contains the error value","Contains the error value","Contains the error value","Resources exhausted, e.g. attempt to read/write data which …","Resources exhausted, e.g. attempt to read/write data which …","Re-export top-level arithmetic stuff. A fixed point number …","Re-export top-level arithmetic stuff. A fixed point number …","Re-export top-level arithmetic stuff. Something that …","Re-export top-level arithmetic stuff. Integer types that …","Re-export top-level arithmetic stuff. A fixed point number …","Re-export top-level arithmetic stuff. A fixed point number …","Funds exist but are frozen.","Funds are unavailable.","An identifier for this application-specific key type.","It’s an account ID (pubkey).","It’s an account index.","The underlying data type used for this fixed point number.","The data type used to build this per-thingy.","Re-export top-level arithmetic stuff. Get the inner type …","An abstraction over justification for a block’s validity …","Collection of justifications for a given block, multiple …","Re-export this since it’s part of the API of this crate. …","A value of type <code>L</code>.","Too many transactional layers have been spawned.","The number of bytes of the module-specific <code>error</code> field …","A custom error in a module.","A custom error in a module.","Reason why a pallet call failed.","A multi-format address wrapper for on-chain accounts.","Signature verify that can work with any known signature …","Public key for any known crypto algorithm.","","","A transactional layer was expected, but does not exist.","There are no providers so the account cannot be created.","There are no providers so the account cannot be created.","Withdrawal would cause unwanted loss of account.","Contains the success value","Contains the success value","Contains the success value","Contains the success value","Contains the success value","Some part of the balance gives the only provider reference …","Simple blob to hold an extrinsic without committing to its …","Some error occurred.","Some error occurred.","Overflow.","The owned mode that wraps a <code>String</code>.","The pair key type of this crypto.","Re-export top-level arithmetic stuff. Something that …","Re-export top-level arithmetic stuff. A fixed point …","Re-export top-level arithmetic stuff. A fixed point …","Re-export top-level arithmetic stuff. A fixed point …","Re-export top-level arithmetic stuff. A fixed point …","Re-export top-level arithmetic stuff. A fixed point …","The <code>RuntimeAppPublic</code> this type is bound to.","Re-export top-level arithmetic stuff. A wrapper for any …","It’s some arbitrary raw bytes.","A value of type <code>R</code>.","Rollback the transaction.","Root origin is not allowed.","Root origin is not allowed.","Re-export top-level arithmetic stuff. The rounding method …","Runtime interface for an application’s public key.","Re-export <code>RuntimeDebug</code>, to avoid dependency clutter.","A string that wraps a <code>&amp;&#39;static str</code> in the runtime and …","Indicates if this fixed point implementation is signed or …","Re-export top-level arithmetic stuff. Convenience type to …","A <strong>data structure</strong> that can be serialized into any data …","","The signature that will be generated when signing with the …","An Sr25519 signature.","An Sr25519 identity.","Different possible state version.","Struct containing data needed for a storage.","Child trie storage data.","Simple 4 byte identifier.","An error to do with tokens.","An error to do with tokens.","Description of what went wrong when trying to complete an …","There are too many consumers so the account cannot be …","There are too many consumers so the account cannot be …","Describes on what should happen with a storage transaction.","The number of transactional layers has been reached, or we …","The number of transactional layers has been reached, or we …","Errors related to transactional storage layers.","The error type used as return type in try runtime hooks.","Re-export this since it’s part of the API of this crate. …","Some resource (e.g. a preimage) is unavailable right now. …","Some resource (e.g. a preimage) is unavailable right now. …","Underflow.","The asset in question is unknown.","Operation is not supported by the asset.","","A data type larger than <code>Self::Inner</code>, used to avoid …","Re-export top-level arithmetic stuff. Get the upper type …","Old state version, no value nodes.","New state version can use value nodes.","Re-export this since it’s part of the API of this crate. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Precision of this fixed point implementation.","Add a value and return the result.","","Add a value and return the result.","","Add a value and return the result.","","","Add a value and return the result.","","","","","","Returns all public keys for this application in the …","","","","Append a justification. Returns false if a justification …","","","","","","","","","","","","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","","","","","","","","","","","","","","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","","","","","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","","Checks that <code>$x</code> is equal to <code>$y</code> with an error rate of <code>$error</code>.","Same as <code>assert_eq_error_rate</code>, but intended to be used with …","Assimilate the storage for this module into pre-existing …","","Re-export big_uint stuff. Infinite precision unsigned …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the bound of the type in <code>usize</code>.","Get the bound of the type in <code>usize</code>.","Re-export bounded_vec and bounded_btree_map macros only …","Re-export bounded_vec and bounded_btree_map macros only …","Re-export bounded_vec and bounded_btree_map macros only …","Re-export bounded_vec and bounded_btree_map macros only …","Create the module genesis storage into the given <code>storage</code> …","Build the storage out of this builder.","","Returns the smallest integer greater than or equal to a …","","","","","","","","","","Addition. Simply tries to unify the denominators and add …","","","","","Checked division for integer type <code>N</code>. Equal to <code>self / d</code>.","Creates <code>self</code> from an integer number <code>int</code>.","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","","","","","","","","","","Checked multiplication for integer type <code>N</code>. Equal to …","Divide by another value with custom rounding, returning …","Divide by another value with custom rounding, returning …","Divide by another value with custom rounding, returning …","Divide by another value with custom rounding, returning …","","","","","","","","","","Subtraction. Simply tries to unify the denominators and …","Associated child info for a child trie.","Children trie storage data. Key does not include prefix, …","","","","","Clears the set, removing all elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide by another value, returning <code>None</code> in the case of an …","Divide by another value, returning <code>None</code> in the case of an …","Divide by another value, returning <code>None</code> in the case of an …","Divide by another value, returning <code>None</code> in the case of an …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value, returning <code>None</code> in the case of …","Multiply by another value with custom rounding, returning …","Multiply by another value with custom rounding, returning …","Multiply by another value with custom rounding, returning …","Multiply by another value with custom rounding, returning …","","","Calls a given macro a number of times with a set of fixed …","Create a const <code>RuntimeString</code>.","Create a const <code>RuntimeString</code>.","Provides some utilities to define a piecewise linear …","Return the denominator.","Child data for storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume self and return the number of parts per thing.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserialize this value from the given Serde deserializer.","","","","","","","","","","","","","","","","","","","","","","","","","Divide by a value and return the result.","","Divide by a value and return the result.","","Divide by a value and return the result.","","","Divide by a value and return the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Module specific error value.","The actual <code>DispatchResult</code> indicating whether the dispatch …","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","Returns the largest integer less than or equal to a number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create <code>Self</code> from <code>t</code> without any checks. Logs warnings if …","Convenience macro to use the format! interface to get a …","Convenience macro to use the format! interface to get a …","Returns the fractional part.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Build from a raw <code>n/d</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","","","","","","Converts a fraction into <code>Self</code>.","Convert from a <code>float</code> value.","Convert from a <code>float</code> value.","Convert from a <code>float</code> value.","Convert from a <code>float</code> value.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","Same as <code>Self::from_float</code>.","Builds this type from an integer number.","Create a new instance from the given <code>inner</code> value.","","Create a new instance from the given <code>inner</code> value.","","","Create a new instance from the given <code>inner</code> value.","","Create a new instance from the given <code>inner</code> value.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Convert from a <code>Perbill</code> value.","Convert from a <code>Perbill</code> value.","Convert from a <code>Perbill</code> value.","Convert from a <code>Perbill</code> value.","Build this type from a percent. Equivalent to …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Approximate the fraction <code>p/q</code> into a per-thing fraction. …","Calculate an approximation of a rational.","Calculate an approximation of a rational.","Calculate an approximation of a rational.","Calculate an approximation of a rational.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","Same as <code>Self::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","Approximate the fraction <code>p/q</code> into a per-thing fraction.","Calculate an approximation of a rational with custom …","Calculate an approximation of a rational with custom …","Calculate an approximation of a rational with custom …","Calculate an approximation of a rational with custom …","","","","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Returns the value for <code>Rounding</code> which would give the same …","","","","","","","Creates self from a <code>u32</code>.","Creates self from a <code>u32</code>.","Creates self from a <code>u32</code>.","Creates self from a <code>u32</code>.","Build from a raw <code>n/d</code>. This could lead to / 0 if not …","Generate a public/private pair with an optional <code>seed</code> and …","Generic implementations of <code>crate::traits::Header</code>, …","Return the encoded justification for the given consensus …","","","","","","","Exactly the same semantics as <code>slice::get_mut</code>.","","","","","","","Re-export 128 bit helpers. Some helper functions to work …","Implement <code>OpaqueKeys</code> for a described struct.","","Module index, matching the metadata module index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Attempt to convert into a <code>PerThing</code>. This will always …","Attempt to convert into a <code>PerThing</code>. This will always …","Attempt to convert into a <code>PerThing</code>. This will always …","Attempt to convert into a <code>PerThing</code>. This will always …","","","","Consumes <code>self</code> and returns the inner raw value.","Extract the value of an either over two equivalent types.","Return the instance’s inner value.","","Consume self, and return the inner <code>BTreeSet</code>.","","Return the instance’s inner value.","Consume self, and return the inner <code>Vec</code>. Henceforth, the …","Return the instance’s inner value.","","","Return the instance’s inner value.","","Convert into the inner type.","","Convert the inner value to an iterator.","","","","","","","Return a copy of the encoded justification for the given …","","Convert into a <code>Perbill</code> value. Will saturate if above one …","Convert into a <code>Perbill</code> value. Will saturate if above one …","Convert into a <code>Perbill</code> value. Will saturate if above one …","Convert into a <code>Perbill</code> value. Will saturate if above one …","","","","","","","","","","","","","","","","","","","Return true if the value is the <code>Left</code> variant.","Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …","Checks if the number is one.","Return <code>true</code> if this is one.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …","Return true if the value is the <code>Right</code> variant.","Return <code>true</code> if this is nothing.","","","","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","See <code>PerThing::is_zero</code>.","","","See <code>PerThing::is_zero</code>.","See <code>PerThing::is_zero</code>.","","If it is zero or not","Return an iterator over the justifications.","Re-export this since it’s part of the API of this crate. …","","A saturating add that assumes <code>self</code> and <code>other</code> have the same …","A saturating subtraction that assumes <code>self</code> and <code>other</code> have …","Get the least common divisor of <code>self</code> and <code>other</code>.","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return the part left when <code>self</code> is saturating-subtracted …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Runtime types that existed in old API versions.","","","","","Return the next lower value to <code>self</code> or <code>self</code> if it is …","Map <code>f</code> over the contained value and return the result in the","Apply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …","Similar to [<code>map_either</code>], with an added context <code>ctx</code> …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional error message.","","","","","","","","","","","","","","","","","","","","","Create a <code>Morph</code> and/or <code>TryMorph</code> impls with a simple …","Multiply by a value and return the result.","","","Multiply by a value and return the result.","Multiply by a value and return the result.","","","Multiply by a value and return the result.","","","","","","","","","","","","","","","","Multiplication that always rounds the result up to a whole …","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","Multiplication that always rounds down to a whole number. …","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","","","","","","","","","","","","","","Return the numerator.","Negate the value.","","Negate the value.","","","Negate the value.","Negate the value.","","Create a new <code>BoundedBTreeSet</code>.","Create a new instance from its raw inner byte value.","","","","","","","","A collection of higher lever helpers for offchain calls.","Equivalent to <code>Self::from_parts(Self::ACCURACY)</code>.","","","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","","See <code>PerThing::one</code>","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","One","","","","","","","","","","","","","","","","","","","","","","","","Return the next higher value to <code>self</code> or <code>self</code> if it is …","","","Additional information about the <code>Dispatchable</code> which is …","","","","","","Print something that implements <code>Printable</code> from the runtime.","","","","","","","","","Takes the reciprocal (inverse). Equal to <code>1 / self</code>.","Remove an item from the set, returning whether it was …","Exactly the same semantics as <code>Vec::remove</code>.","Remove the encoded justification for the given consensus …","Exactly the same semantics as <code>Vec::retain</code>.","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","Returns the number rounded to the nearest integer. Rounds …","A logger that can be used to log from the runtime.","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","Saturating absolute value.","","","","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division for integer type <code>N</code>. Equal to <code>self / d</code>.","Creates self from an integer number <code>int</code>.","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","","","","","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiplication for integer type <code>N</code>, adding the …","Saturating multiplication for integer type <code>N</code>. Equal to …","","","","","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","Saturating multiplication by the reciprocal of <code>self</code>.\\tThe …","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","","","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Serialize this value into the given Serde serializer.","","","","","","","","","","","","","","","","","","","","","","","","","Sign the given message with the corresponding private key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take the square root of a positive value.","Take the square root of a positive value.","Take the square root of a positive value.","Take the square root of a positive value.","Return the product of multiplication of this value by …","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","If defined, values in state of size bigger or equal to …","Utility function to declare string literals backed by an …","","Return the same error but without the attached message.","Subtract a value and return the result.","","","Subtract a value and return the result.","","Subtract a value and return the result.","Subtract a value and return the result.","","","","","","","Exactly the same semantics as <code>Vec::swap_remove</code>.","Removes and returns the value in the set, if any, that is …","","","","","","","","","","Testing utilities.","Convert <code>self</code> to a similar rational number where …","Convert into a <code>float</code> value.","Convert into a <code>float</code> value.","Convert into a <code>float</code> value.","Convert into a <code>float</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Self</code> as raw vec.","","","","","","","","","","","Top trie storage data.","Primitives for the runtime modules.","Transaction validity interface.","Returns the integer part.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exactly the same semantics as <code>BTreeSet::insert</code>, but …","Exactly the same semantics as <code>Vec::insert</code>, but returns an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Attempt to convert into a <code>PerThing</code>. This will succeed iff …","Return the next lower value to <code>self</code> or an error with the …","Consumes self and mutates self via the given <code>mutate</code> …","Consumes self and mutates self via the given <code>mutate</code> …","Return the next higher value to <code>self</code> or an error with the …","","Exactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…","Compute the square root, rounding as desired. If it …","Compute the square root, rounding as desired. If it …","Compute the square root, rounding as desired. If it …","Compute the square root, rounding as desired. If it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the left value","Returns the right value","","","","","","","","","","","","","","","","Verify that the given signature matches the given message …","","","Verify a signature on an encoded value in a lazy manner. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent to <code>Self::from_parts(0)</code>.","","","","","","See <code>PerThing::zero</code>.","See <code>PerThing::zero</code>.","","See <code>PerThing::zero</code>.","","","See <code>PerThing::zero</code>.","See <code>PerThing::zero</code>.","","Zero.","Simple wrapper around an infinitely large integer, …","Representation of two limbs.","Representation of a single limb.","","","Adds <code>self</code> with <code>other</code>. self and other do not have to have …","Assumed as a given primitive.","","","A naive getter for limb at <code>index</code>. Note that the order is …","","","","","","","","","","","","Divides an <code>n + m</code> limb self by a <code>n</code> limb <code>other</code>. The result …","Divides <code>self</code> by a single limb <code>other</code>. This can be used in …","","","","","","","","","","","","Returns the argument unchanged.","","","Raw constructor from custom limbs. If <code>limbs</code> is empty, …","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","A naive getter for limb at <code>index</code>. Note that the order is …","","Calls <code>U::from(self)</code>.","","","Number of limbs.","Zero-pad <code>self</code> from left to reach <code>size</code> limbs. Will not make …","returns the least significant limb of the number.","Strips zeros from the left side (the most significant …","returns the most significant limb of the number.","Multiplies n-limb number <code>self</code> with m-limb number <code>other</code>.","","Assumed as a given primitive.","","","A naive setter for limb at <code>index</code>. Note that the order is …","","Splits a <code>Double</code> limb number into a tuple of two <code>Single</code> …","Subtracts <code>other</code> from <code>self</code>. self and other do not have to …","","","","","","","","","","","Create a new instance with <code>size</code> limbs. This prevents any …","","A bounded map based on a B-Tree.","","","","","Get the bound of the type in <code>usize</code>.","Clears the map, removing all elements.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Return a mutable reference to the value corresponding to …","","","Calls <code>U::from(self)</code>.","Consume self, and return the inner <code>BTreeMap</code>.","","","","","Gets a mutable iterator over the entries of the map, …","","Consume the map, applying <code>f</code> to each of it’s values and …","","Create a new <code>BoundedBTreeMap</code>.","","Remove a key from the map, returning the value at the key …","Remove a key from the map, returning the value at the key …","Exactly the same semantics as <code>BTreeMap::retain</code>.","","","","","","","Exactly the same semantics as <code>BTreeMap::insert</code>, but …","","Consume the map, applying <code>f</code> to each of it’s values as …","Consumes self and mutates self via the given <code>mutate</code> …","","","","","","A bounded slice.","A bounded vector.","Create an object through truncation.","","","","Return a <code>BoundedSlice</code> with the content and bound of <code>Self</code>.","","","","","","","","","","","","","Get the bound of the type in <code>usize</code>.","Same as <code>Vec::resize</code>, but if <code>size</code> is more than <code>Self::bound</code>, …","","Exactly the same semantics as <code>Vec::clear</code>.","","","","","","","","","","","","","","","","","","","Exact same semantics as <code>Vec::drain</code>.","","","","","","","","","","","","","","","","","","","","","","","Forces the insertion of <code>element</code> into <code>self</code> retaining all …","Forces the insertion of <code>element</code> into <code>self</code> retaining all …","Forces the insertion of <code>s</code> into <code>self</code> truncating first if …","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Exactly the same semantics as <code>slice::get_mut</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume self, and return the inner <code>Vec</code>. Henceforth, the …","","","","","","Returns true of this collection is full.","Exactly the same semantics as <code>slice::iter_mut</code>.","Exactly the same semantics as <code>slice::last_mut</code>.","","","Create <code>Self</code> with no items.","","","","","","","Exactly the same semantics as <code>Vec::pop</code>.","Exactly the same semantics as <code>Vec::remove</code>.","Exactly the same semantics as <code>Vec::retain</code>.","","","","","Move the position of an item from one location to another …","Exactly the same semantics as <code>slice::sort</code>.","Exactly the same semantics as <code>slice::sort_by</code>.","Exactly the same semantics as <code>slice::sort_by_key</code>.","Exactly the same semantics as <code>slice::swap_remove</code>.","","","","Exactly the same semantics as <code>Vec::truncate</code>.","Create an object through truncation.","","Consume and truncate the vector <code>v</code> in order to create a new …","","Create an instance from the first elements of the given …","Exactly the same semantics as <code>Vec::append</code>, but returns an …","","","Exactly the same semantics as <code>Vec::extend</code>, but returns an …","","","","","Exactly the same semantics as <code>Vec::insert</code>, but returns an …","","","Consumes self and mutates self via the given <code>mutate</code> …","Exactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…","","","","","","","","","","","Pre-allocate <code>capacity</code> items in self.","Allocate self with the maximum possible capacity.","Piecewise Linear function in [0, 1] -&gt; [0, 1].","","","Compute <code>f(n/d)*d</code> with <code>n &lt;= d</code>. This is useful to avoid loss …","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","The maximum value that can be returned.","Array of points. Must be in order from the lowest …","","","","","","","","Abstraction over a substrate block.","Something to identify a block.","Definition of something that the external world might want …","A message from the runtime to the consensus engine. This …","A message from the runtime to the consensus engine. This …","Type corresponding to DigestItem::Consensus.","Generic header digest.","Digest item that is able to encode/decode ‘system’ …","A ‘referencing view’ for digest item. Does not own its …","An era to describe the longevity of a transaction.","Identify by block header hash.","Abstraction over a block header for a substrate chain.","The transaction is valid forever. The genesis hash must be …","Period and phase are encoded:","Identify by block number.","Type of a digest item that contains raw data; this also …","Some other thing. Unsupported and experimental.","Any ‘non-system’ digest item, opaque to the native …","Some other (non-prescribed) type.","Era phase","A pre-runtime digest.","A pre-runtime digest.","Type corresponding to DigestItem::PreRuntime.","An indication for the light clients that the runtime …","Runtime code or heap pages updated.","Put a Seal on it. This is only used by native code, and is …","Put a Seal on it. This is only used by native code, and is …","Type corresponding to DigestItem::Seal.","Abstraction over a substrate block and justification.","A payload that has been signed for an unchecked extrinsics.","An extrinsic right from the external world. This is …","","","","","","","","","","","","","Returns <code>Some</code> if this entry is the <code>Consensus</code> entry.","Cast this digest item into <code>Consensus</code>","Returns Some if <code>self</code> is a <code>DigestItem::Other</code>.","Cast this digest item into <code>PreRuntime</code>","Returns <code>Some</code> if this entry is the <code>PreRuntime</code> entry.","Cast this digest item into <code>PreRuntime</code>","Returns <code>Some</code> if this entry is the <code>Seal</code> entry.","Cast this digest item into <code>Seal</code>","Get the block number of the start of the era whose …","Full block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …","Try to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …","Get a conversion of the first digest item that …","Get the block number of the first block at which the era …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deconstruct the payload into it’s components.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","Returns a ‘referencing view’ for this digest item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The accompanying extrinsics.","","The merkle root of the extrinsics.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Create new <code>SignedPayload</code> from raw components.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","The function that should be called.","The function that should be called.","Create a block ID from a hash.","Convenience helper for computing the hash of the header …","","The block header.","Create an “immortal” transaction.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>true</code> if this is an immortal transaction.","Check if this block ID refers to the pre-genesis state.","","Block justification.","Get reference to the first digest item that matches the …","Get reference to all digest items.","A list of logs in the digest.","Create a new era based on a period (which should be a …","Create new <code>SignedPayload</code>.","","","","A new header with the given number and default hash for …","New instance of a signed extrinsic aka “transaction”.","New instance of an unsigned extrinsic aka “inherent”.","Create a block ID from a number.","","The block number.","","The parent hash.","","Pop a digest item.","Create a block ID for a pre-genesis state.","Try to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …","Try to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …","Push new digest item.","Try to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …","Try to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …","","","","","","","","","","","","The signature, address, number of extrinsics have come …","Who this purports to be from and the number of extrinsics …","","","","","","","The state trie merkle root","","","","","","","","","","","","","","","","","","","","","Returns the opaque data contained in the item if <code>Some</code> if …","Try to match this digest item to the given opaque item …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the data contained in the item if <code>Some</code> if this …","Try to match this digest item to the given opaque item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an encoded version of this payload.","","","","","","","","","","","","","","","Helper gcd function used in Rational128 implementation.","Returns <code>a * b / c</code> (wrapping to 128 bits) or <code>None</code> in the …","split a u128 into two u64 limbs","","Convert a u128 to a u32 based biguint.","Key type for controlling an account in a Substrate …","Key type for Aura module, built-in. Identified as <code>aura</code>.","Key type for AuthorityDiscovery module, built-in. …","Key type for Babe module, built-in. Identified as <code>babe</code>.","Key type for BEEFY module.","A key type ID useful for tests.","Key type for Grandpa module, built-in. Identified as <code>gran</code>.","Key type for ImOnline module, built-in. Identified as <code>imon</code>.","Key type for Mixnet module, used to sign key-exchange …","Key type for Sassafras module, built-in. Identified as <code>sass</code>…","Key type for staking, built-in. Identified as <code>stak</code>.","A key type for signing statements","Runtime types that existed prior to BlockBuilder API …","<code>ApplyExtrinsicResult</code> type definition before BlockBuilder …","An arithmetic error.","A bad origin.","Failed to lookup some data.","At least one consumer is remaining so the account cannot …","<code>DispatchError</code> type definition before BlockBuilder API …","<code>DispatchOutcome</code> type definition before BlockBuilder API …","Contains the error value","Contains the error value","A custom error in a module.","<code>ModuleError</code> type definition before BlockBuilder API …","There are no providers so the account cannot be created.","Contains the success value","Contains the success value","Some error occurred.","An error to do with tokens.","There are too many consumers so the account cannot be …","","","","","","","","","","","Convert the legacy <code>ApplyExtrinsicResult</code> type to the latest …","","","","","","","","","","","","","","","","","","","","","","","","","","","Module specific error value.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Module index, matching the metadata module index.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional error message.","","","","","","","","","","","","","","","","","","","","","","","Execution context extra capabilities.","A externalities extension for accessing the Offchain DB.","The requested action couldn’t been completed within a …","Deadline was reached while we waited for this request to …","Duration type","An extended externalities for offchain workers.","The request has finished with given status code.","External http calls.","An error enum returned by some http methods.","Opaque type for offchain http requests.","Status of the HTTP request","The ID of the request is invalid in this context.","The passed ID is invalid in this context.","There was an IO Error while processing the request.","An error has occurred during the request, for example a …","Keystore access.","An identifier for a type of cryptographic key.","Local storage is revertible and fork-aware. It means that …","An <code>*Externalities</code> implementation with limited capabilities.","Access to opaque network state.","Manage the authorized nodes","Access to offchain worker DB (read only).","Access to offchain worker DB (writes).","The offchain database extension that will be registered at …","Change to be applied to the offchain worker db in regards …","Offchain DB persistent (non-fork-aware) storage.","The offchain worker extension that will be registered at …","Simple blob to hold a <code>Multiaddr</code> without committing to its …","A blob to hold information about the local node’s …","Persistent storage is non-revertible and not fork-aware. …","Randomness source.","Remove the data associated with the key","Persistent storage prefix used by the Offchain Worker API …","Overwrite the value of an associated key","A type of supported crypto.","Access time related functionality","Opaque timestamp type","Abstraction over transaction pool.","An externalities extension to submit transactions to the …","","","","","","","","","","","Increase the timestamp by given <code>Duration</code>.","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace the value in storage if given old_value matches …","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a saturated difference (Duration) between two …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of addresses the node knows it can be reached as.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","Create new duration representing given number of …","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Creates new <code>Timestamp</code> given unix timestamp in milliseconds.","Retrieve a value from storage under given key and prefix.","","","","","","","A high-level helpers for making HTTP requests from …","Append header to the request.","","Initiates a http request given HTTP verb and the URL.","","Write a chunk of request body.","","Read all response headers.","","Read a chunk of body response to given buffer.","","Block and wait for the responses for given requests.","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","","Returns <code>true</code> if no flags are currently stored.","Returns if the local node is a potential validator.","","Removes a value in the local storage.","","Sets a value in the local storage if it matches current …","","Gets a value from the local storage.","","Sets a value in the local storage.","","Returns number of milliseconds this Duration represents.","Returns information about the local node’s network state.","","Create new externalities limited to given <code>capabilities</code>.","Create new <code>OpaqueMultiaddr</code>","Create a new instance of <code>Self</code>.","Create a new instance of <code>OffchainDbExt</code>.","Create a new instance of <code>TransactionPoolExt</code>.","Returns the complement of this set of flags.","","","","","PeerId of the local node in SCALE encoded.","Returns a random seed.","","Clear a storage entry under given key and prefix.","Removes the specified flags in-place.","","","","Persist a value in storage under given key and prefix.","Inserts or removes the specified flags depending on the …","Set the authorized nodes from runtime.","","","","","","","","","","Pause the execution until <code>deadline</code> is reached.","","A set of storage helpers for offchain workers.","Off-chain Storage Lock","Decrease the timestamp by given <code>Duration</code>","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Submit transaction.","Returns the symmetric difference between the flags in <code>self</code> …","Utilities for offchain calls testing.","Returns current UNIX timestamp (in millis)","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","Return number of milliseconds since UNIX epoch.","","","","","","","","","","","","","","","","","","","Deadline has been reached.","DELETE request","Contains the error value","A request error","GET request","A collection of Headers in the response.","A custom iterator traversing all the headers.","A result of waiting for a pending request.","Request had timed out.","Request method (HTTP verb)","Contains the success value","Custom verb","PATCH request","A struct representing an uncompleted http request.","POST request","PUT request","An HTTP request builder.","A HTTP response.","A buffered byte iterator over response body.","Unknown error has been encountered.","","","","","","","Add a header.","","Set the body of the request.","Retrieve the body of this response.","Body of the request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Response status code","Returns current element (if any).","Set the deadline of the request.","Set the deadline for reading the body.","Deadline to finish sending the request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an error that caused the iterator to return <code>None</code>.","Retrieve a single header from the list of headers.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Start a simple GET request","Retrieve the headers for this response.","Request ID","Request id","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert this headers into an iterator.","","Change the method of the request","Request method","Create a new Request builder with the given URL.","","Move the iterator to the next position.","","","Create new POST request with given body.","Raw headers","Send the request and return a handle.","","","","","","","","","","","","","","","","","","","","","","","Attempts to wait for the request to finish, but will …","Attempt to wait for all provided requests, but up to given …","","","","","","","","","","","","","","","","","","","","","","","","","Change the URL of the request.","Request URL","","","","","","","","","Wait for the request to complete.","Wait for all provided requests.","The underlying db failed to update due to a concurrent …","Possible errors when mutating a storage value.","Reason for not being able to provide the stored value","A storage value with a static key.","An abstraction over local storage value.","Value found but undecodable","The function given to us to create the value to be stored …","","","","","","","Remove the associated value from the storage.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Retrieve &amp; decode the value from storage.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new reference to a value in the fork-aware local …","Retrieve &amp; decode the current value and set it to a new …","Create a new reference to a value in the persistent local …","Set the value of the storage to encoding of given …","","","","","","","","","","","","","","","","","","","Lockable based on block number and timestamp.","A deadline based on block number and time.","An instant type specifying i.e. a point in time.","Lockable item for use with a persisted storage lock.","Storage based lock.","RAII style guard for a lock.","Lockable based on the current timestamp with a …","","","The block number until which the lock is still valid <em>at </em>…","","","","","","","","","","","","","","","","Calculate the deadline based on a current state such as …","","","","","","","","","","","","","Provide the current state of block number and time.","","","","","","","","","","","","","","","","","","","","","","","","Extend the lock by guard deadline if it already exists.","","Consume the guard but <strong>do not</strong> unlock the underlying lock.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Verify the deadline has not expired compared to the …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Repeated lock attempts until the lock is successfully …","Create a new storage lock with a <code>default()</code> instance of …","","","Snooze at least until <code>deadline</code> is reached.","","","The timestamp until which the lock is still valid <em>at least</em>.","","","","","","","","","","","","","","","A single attempt to lock using the storage entry.","","","","","","","","","","","","","","","","","","","","","","Explicitly create a time and block number based storage …","Explicitly create a time and block number based storage …","Explicitly create a time based storage lock with a …","Create a new storage lock with an explicit instance of a …","Internal state of the externalities.","Pending request.","The internal state of the fake transaction pool.","Implementation of offchain externalities used for tests.","Sharable “persistent” offchain storage for test.","Implementation of transaction pool used for test.","","","Apply a set of off-chain changes directly to the test …","Request body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add expected HTTP request.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Asserts that pending request has been submitted and fills …","","Retrieve a key from the test backend.","Request headers","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Local storage","","","","","Encoded Metadata","HTTP method","","Create a new and empty offchain storage db for persistent …","Create new <code>TestOffchainExt</code> and a reference to the internal …","Create new <code>TestTransactionPoolExt</code> and a reference to the …","Persistent local storage","","Number of bytes already read from the response body.","","A list of pending requests.","Response body","Response headers","A supposedly random seed.","Has the request been sent already.","","","","","","A timestamp simulating the current time.","","","A vector of transactions submitted from the runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","URI","","","","","","","Create new <code>TestOffchainExt</code> and a reference to the internal …","Runtime logger implementation - <code>log</code> crate backend.","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Initialize the logger.","Calls <code>U::from(self)</code>.","","","","","","","","Testing block","A message from the runtime to the consensus engine. This …","Header Digest","Digest item","An opaque extrinsic wrapper type.","Fixed-size uninterpreted hash type with 32 bytes (256 …","Block Header","Some other thing. Unsupported and experimental.","A pre-runtime digest.","An indication for the light clients that the runtime …","Put a Seal on it. This is only used by native code, and is …","A dummy signature type, to match <code>UintAuthorityId</code>.","Test transaction, tuple of (sender, call, signed_extra) …","A dummy type which can be used instead of regular …","","","","","","","","Executes all necessary logic needed prior to dispatch and …","","","","","Extracts a byte slice containing the entire fixed hash.","Extracts a mutable byte slice containing the entire fixed …","Extracts a reference to the byte array containing the …","Extracts a reference to the byte array containing the …","","","","Returns a mutable raw pointer to the value.","","Returns a constant raw pointer to the value.","","","","","Assign the bytes from the byte slice <code>src</code> to <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Call of the extrinsic.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A chain-specific digest of data useful for light clients …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of extrinsics","The merkle root of the extrinsics.","","","","","","","","","","Constructs a hash type from the given reference to the …","Constructs a hash type from the given reference to the …","","Constructs a hash type from the given bytes array of fixed …","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Creates a new hash type from the given <code>u64</code> value.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Create a new fixed-hash from the given slice <code>src</code>.","","Creates a hash type instance from the given string.","","","","","","","","","","","Block header","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns <code>true</code> if no bits are set.","","Returns the size of this hash in bytes.","A list of logs in the digest.","","","","","Create a new <code>TextXt</code>.","A new header with the given number and default hash for …","The block number.","The parent hash.","","","Create a new hash with cryptographically random content.","Create a new hash with cryptographically random content …","Assign <code>self</code> to a cryptographically random value.","Assign <code>self</code> to a cryptographically random value using the …","Returns a new fixed hash where all bits are set to the …","","","","","","","Set the list of keys returned by the runtime call for all …","","Signature of the extrinsic.","","","","","","Simple sr25519 (Schnorr-Ristretto) API.","The state trie merkle root","Returns the inner bytes array.","","","","","","","Returns the lowest 8 bytes interpreted as big-endian.","Returns the lowest 8 bytes interpreted as little-endian.","Returns the lowest 8 bytes interpreted as native-endian.","","","","","","","Convert this authority ID into a public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks to see if this is a valid <em>transaction</em>. It returns …","","","","","","","","","Returns a new zero-initialized fixed hash.","An identifier used to match public keys against sr25519 …","An Schnorrkel/Ristretto x25519 (“sr25519”) key pair.","An Schnorrkel/Ristretto x25519 (“sr25519”) public key.","An Schnorrkel/Ristretto x25519 (“sr25519”) signature.","","","","","Return a slice filled with raw data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive a child key from a series of given junctions.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","A new instance from an H256.","A new instance from an H512.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","A new instance from the given 32-byte <code>data</code>.","A new instance from the given 64-byte <code>data</code>.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Make a new key pair from raw secret seed material.","A new instance from the given slice that should be 64 …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Generate output bytes from the given VRF configuration.","Generate output bytes from the given VRF configuration.","","","","Get the public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a signature on a message. Returns <code>true</code> if the …","Schnorrkel VRF related types and operations.","","","","","","","VRF input.","VRF output type suitable for schnorrkel operations.","VRF proof type suitable for schnorrkel operations.","VRF input ready to be used for VRF sign and verify …","VRF signature data","Transcript ready to be used for VRF related operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Map transcript to <code>VrfSignData</code>.","Generate output bytes from the given VRF configuration.","","","","Build a new transcript instance.","Build a new instance ready to be used for VRF signer and …","VRF output.","VRF proof.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add some extra data to be signed.","The account ID that this can be transformed into.","Type of the signer.","The type which encodes the sender identity.","This type can be converted into and possibly from an …","A lookup implementation returning the <code>AccountId</code> from a …","Any additional data that will go into the signed payload. …","Means of signature verification of an application key.","Input that adds infinite number of zero after wrapped …","An “executable” piece of information, used by the …","A meta trait for arithmetic.","A meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …","An error type that indicates that the origin is invalid.","Blake2-256 Hash implementation.","A “checkable” piece of information, used by the …","Something which fulfills the abstract idea of a Substrate …","Something that can convert a <code>BlockId</code> to a number or a hash.","Type of <code>BlockNumber</code> to provide.","Get current block number","Numbers which have upper and lower bounds","The function call.","The type which encodes the call to be dispatched.","Type by which we can dispatch. Restricts the …","The call to validate","Something that can be checked for equality and printed out …","Extract the digest type for a block. A “checkable” …","Returned if <code>check</code> succeeds.","Returned if <code>check</code> succeeds.","Performs addition that returns <code>None</code> instead of wrapping …","Convenience type to work around the highly unergonomic …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","A <code>TryMorph</code> implementation to reduce a scalar by a …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Trait for things that can be clear (have no bits set). For …","…","Infallible conversion trait. Generic over both source and …","Reversing infallible conversion trait. Generic over both …","A structure that performs standard conversion using the …","Adapter which turns a Get implementation into a Convert …","Shortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.","A lazy call (module function and argument values) that can …","","Performs addition that returns <code>ArithmeticError</code> instead of …","Performs self addition that returns <code>ArithmeticError</code> …","Performs division that returns <code>ArithmeticError</code> instead of …","Performs self division that returns <code>ArithmeticError</code> …","Extends <code>FixedPointNumber</code> with the Ensure family functions.","Similar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.","Similar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.","Performs multiplication that returns <code>ArithmeticError</code> …","Performs self multiplication that returns <code>ArithmeticError</code> …","Meta trait that supports all immutable arithmetic <code>Ensure*</code> …","Meta trait that supports all assigned arithmetic <code>Ensure*</code> …","Performs subtraction that returns <code>ArithmeticError</code> instead …","Performs self subtraction that returns <code>ArithmeticError</code> …","The error type that will be returned by the functions.","Something that acts like an <code>Extrinsic</code>.","Type for extrinsics.","Implementor is an <code>Extrinsic</code> and provides metadata about …","A marker trait for something that knows the type of the …","A marker trait for something that knows the type of the …","Abstraction around hashing","Header hash type","Block hash type.","Super trait with all the attributes for a hashing output.","Hashing algorithm","Extract the hashing type for a block.","Something which fulfills the abstract idea of a Substrate …","Header type.","Unique identifier of this signed extension.","Some type that is able to be collapsed into an account ID. …","A structure that performs identity conversion.","A lookup implementation returning the input value.","An opaque set of information attached to the transaction. …","A trait implementing integer square root.","Determine if a <code>MemberId</code> is a valid member.","Keccak-256 Hash implementation.","Types bound to this opaque keys that provide the key type …","A lazy value.","Means of changing one type into another in a manner …","An error that indicates that a lookup failed.","Fallible conversion trait returning an Option. Generic …","Reversing fallible conversion trait returning an Option. …","A type that implements Display when in std environment.","Definition for a bi-directional, fallible conversion …","A type that implements FromStr when in std environment.","A type that implements Hash when in std environment.","A type that implements Serialize when in std environment …","A type that implements Serialize, DeserializeOwned and …","A type that can be used in runtime structures.","Extensible conversion trait. Generic over only source …","Implementation of <code>Morph</code> which converts between types using …","A <code>TryMorph</code> implementation to enforce an upper limit for a …","The <code>NodeBlock</code> type.","Header number.","Extract the number type for a block.","Defines a multiplicative identity element for <code>Self</code>.","Opaque data type that may be destructured into a series of …","The type into which <code>A</code> is mutated.","The type into which <code>A</code> is mutated.","The output type of the product of <code>self</code> and <code>Other</code>.","The hash type produced.","Shortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.","Additional information that is returned by <code>dispatch</code>. Can …","The type that encodes information that can be passed from …","Trait for things which can be printed from the runtime.","Mutator which reduces a scalar by a particular amount.","Morpher to disregard the source value and replace with …","The <code>RuntimeBlock</code> type.","Every function call from your runtime has an origin, which …","Convenience type to work around the highly unergonomic …","Saturating arithmetic operations, returning maximum or …","Multiply and divide by a number that isn’t necessarily …","The signature type of the extrinsic.","The type of the address that signed the extrinsic.","The additional data that is specific to the signed …","Something that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…","The payload we carry for signed extrinsics.","Means by which a transaction may be extended. This type …","Information about a <code>SignedExtension</code> for the runtime …","Signed extensions attached to this <code>Extrinsic</code>.","Type of the signer.","A meta trait for all bit ops.","Type to lookup from.","Type to lookup from.","Means of changing one type into another in a manner …","Implementation of <code>Morph</code> to retrieve just the first element …","Type to lookup into.","Type to lookup into.","Input that adds infinite number of zero after wrapped …","Fallible conversion trait which returns the argument in …","Reversing fallible conversion trait which returns the …","A structure that performs standard conversion using the …","Extensible conversion trait. Generic over only source …","Implementation of <code>TryMorph</code> which attmepts to convert …","Just like <code>From</code> except that if the source value is too big …","Just like <code>Into</code> except that if the source value is too big …","The format version of the <code>Extrinsic</code>.","Provide validation for unsigned extrinsics.","Means of signature verification.","Defines an additive identity element for <code>Self</code>.","","","","Construct any additional data that should be in the signed …","The type of the <code>SignedExtension</code> additional signed data for …","Executes all necessary logic needed prior to dispatch and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check self, given an instance of Context.","Check self.","Perform the equality check.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return <code>Some</code> equivalent value of <code>Option&lt;T&gt;</code>.","Multiplies two numbers, checking for underflow or …","Raises a value to the power of exp, returning <code>None</code> if an …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Return the value of Self that is clear.","","","","","","","","Make conversion.","Attempt to convert reference of <code>A</code> into value of <code>B</code>, …","","","","","","","","Make conversion back.","Attempt to convert reference of <code>B</code> into value of <code>A</code>, …","","","","","","Returns the current block number.","","","","","","","","","Split the block into header and list of extrinsics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the digest.","Get a mutable reference to the digest.","Actually dispatch this call and return the result of it.","@return the integer division of <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","Creates an encoded block from the given <code>header</code> and …","","","Adds two numbers, checking for overflow.","Adds two numbers overwriting the left hand one, checking …","Divides two numbers, checking for overflow.","Divides two numbers overwriting the left hand one, …","Ensure division for integer type <code>N</code>. Equal to <code>self / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Creates <code>self</code> from a rational number. Equal to <code>n / d</code>.","Performs the conversion returning an <code>ArithmeticError</code> if …","Multiplies two numbers, checking for overflow.","Multiplies two numbers overwriting the left hand one, …","Ensure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…","Raises a value to the power of exp, returning …","Subtracts two numbers, checking for overflow.","Subtracts two numbers overwriting the left hand one, …","","","","","","","","","","","","","Returns a reference to the list of extrinsics.","Returns a reference to the extrinsics root.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the underlying value.","Get the decoded key with key-type ID <code>i</code>.","Get the raw bytes of key with key-type ID <code>i</code>.","Produce the hash of some byte-slice.","Returns the hash of the header.","Returns the hash of the block.","","","Produce the hash of some codec-encodable value.","Returns a reference to the header.","The unique identifier of the <code>SignedExtension</code>.","","","","","","","","","","","","","","","","","","","","","Find the integer square root.","Find the integer square root, returning <code>None</code> if the number …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform into an account.","Convert into an account ID. This is infallible, and may …","Convert this value amalgamated with the a secondary “sub…","True iff no bits are set.","","Is the given <code>MemberId</code> a valid member?","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Is this <code>Extrinsic</code> signed? If no information are available …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Return the key-type IDs supported by this set.","Attempt a lookup.","Attempt a lookup.","","","","Returns the largest finite number this type can represent","Attempt to make conversion.","","","","","Attempt to make conversion back.","","","","","Returns the metadata for this signed extension.","Returns the smallest finite number this type can represent","Make conversion.","","","","","","","","","@return the product of <code>self</code> and <code>other</code>.","Creates new header.","Creates new block from header and extrinsics.","Create new instance of the extrinsic.","Create a new instance from the given byte array.","Create a new instance from the given byte array.","Returns a reference to the header number.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","The ordered Patricia tree root of the given <code>input</code>.","","","Verify a proof of ownership for the keys.","Returns a reference to the parent hash.","Do any post-flight stuff for an extrinsic.","Do any pre-flight stuff for a signed transaction.","Validate the call right before dispatch.","Do any pre-flight stuff for a unsigned transaction.","Print the object.","","","@return the modulo remainder of <code>self</code> and <code>other</code>.","","","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","Increment self by some <code>amount</code>, saturating.","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Decrement self by one, saturating at zero.","Increment self by one, saturating.","Decrement self by one, saturating at zero.","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Increment self by one, saturating at the numeric bounds …","Saturating exponentiation. Compute <code>self.pow(exp)</code>, …","Decrement self by some <code>amount</code>, saturating at zero.","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","Sets the extrinsic root.","Sets the header number.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets the parent hash.","Sets the state root.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","","Returns a reference to the state root.","Convert the given <code>block_id</code> to the corresponding block hash.","","","Convert the given <code>block_id</code> to the corresponding block …","","","","The Patricia tree root of the given mapping.","","","Attempt to make conversion. If returning Result::Err, the …","","","","","Attempt to make conversion back. If returning Result::Err, …","","","","","","","","","","","","","","","","","","","","","","","","","Try to convert an account ID into this type. Might not …","Try to convert an account ID into this type. Might not …","","","","","","","","","","","","","","","","","","","","","Convert into an account ID, checking that all bytes of the …","Same as <code>into_sub_account_truncating</code>, but ensuring that all …","Make conversion.","","","","","","","The type of the <code>SignedExtension</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from a value of <code>T</code> into an equivalent instance of …","Consume self to return an equivalent value of <code>T</code>.","","","","","","","","","","","","","","","","","","","","","Convert from Target back to Source.","","","Checks to see if this is a valid <em>transaction</em>. It returns …","Validate a signed transaction for the transaction queue.","Return the validity of the call","Validate an unsigned transaction for the transaction queue.","Verify a signature.","Verify a signature. Return <code>true</code> if signature is valid for …","","","","","","","","","","","","","","","","","","","","","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Create a new instance which only contains zeroes as input.","The transaction birth block is ancient.","An extrinsic with a Mandatory dispatch resulted in Error. …","General error to do with the transaction’s proofs (e.g. …","The sending address is disabled or known to be invalid.","The call of the transaction is not expected.","Could not lookup some information that is required to …","Any other custom invalid validity that is not covered by …","Any other custom unknown validity that is not covered by …","Contains the error value","The transaction would exhaust the resources of current …","Transaction has been received externally.","General error to do with the transaction not yet being …","Transaction is already included in block.","The transaction is invalid.","An invalid transaction validity.","Transaction is coming from a local source.","An extrinsic with a mandatory dispatch tried to be …","No validator found for the given unsigned transaction.","Contains the success value","General error to do with the inability to pay some fees …","General error to do with the transaction being outdated …","Minimum number of blocks a transaction will remain valid …","Priority for a transaction. Additive. Higher is better.","The source of the transaction.","Tag for a transaction. No two transactions with the same …","Information on a transaction’s validity and, if valid, …","Errors that can occur while checking the validity of a …","Transaction validity can’t be determined.","An unknown transaction validity.","Information concerning a valid transaction.","<code>ValidTransaction</code> builder.","","","","","","","Add a <code>TransactionTag</code> to the set of provided tags.","Add a <code>TransactionTag</code> to the set of required tags.","","","","","","","","","","","","","Finalize the builder and produce <code>TransactionValidity</code>.","","","","","","","","","","","","","","Combine two instances into one, as a best effort. This …","Augment the builder with existing <code>ValidTransaction</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the reason for the invalidity was block …","Returns <code>true</code> if the reason for the error was block …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Set the longevity of a transaction.","Transaction longevity","Set the priority of a transaction.","Priority of the transaction.","Set the propagate flag.","A flag indicating if the transaction should be propagated …","Provided tags","Transaction dependencies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the reason for the invalidity was a mandatory …","Returns <code>true</code> if the reason for the error was it being a …","Initiate <code>ValidTransaction</code> builder object with a particular …"],"i":[112,0,62,62,0,0,0,327,67,0,327,67,75,75,41,0,0,0,0,0,0,0,75,75,327,67,147,0,327,67,327,67,0,0,328,0,0,0,0,0,0,0,0,0,0,61,58,63,42,63,42,0,0,320,316,115,231,195,327,67,0,0,0,0,0,0,75,75,329,62,62,328,112,0,0,0,0,14,66,0,327,67,0,0,0,0,58,58,66,327,67,75,320,316,115,231,195,75,0,327,67,61,41,330,0,0,0,0,0,0,331,0,62,14,147,327,67,0,0,0,0,328,0,0,0,329,63,42,0,0,0,332,327,67,0,327,67,0,327,67,0,0,0,327,67,61,75,75,58,112,0,57,57,0,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,328,3,3,4,4,5,5,6,6,7,8,9,10,11,329,14,14,14,19,14,30,31,41,42,14,30,31,41,42,14,14,14,14,14,14,14,30,31,31,14,30,31,14,30,31,14,30,31,14,14,14,14,14,14,14,14,14,38,30,30,31,31,41,42,14,30,31,41,42,0,0,333,43,0,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,38,30,0,0,0,0,334,333,14,328,3,4,5,6,7,8,9,10,11,48,3,4,5,6,328,328,328,3,4,5,6,7,8,9,10,11,328,3,4,5,6,3,4,5,6,7,8,9,10,11,48,56,43,14,57,3,38,38,4,30,5,6,7,8,9,59,60,10,11,48,41,64,76,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,3,38,4,30,5,6,7,8,31,9,59,60,10,11,48,42,14,3,4,5,6,3,4,5,6,3,4,5,6,14,14,0,0,0,0,48,56,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,41,19,63,42,64,65,66,67,68,75,76,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,41,19,63,42,64,65,66,67,68,75,76,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,41,19,63,42,64,65,66,67,68,75,76,3,4,5,6,7,8,9,10,11,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,41,19,63,42,64,65,66,67,68,75,76,112,7,7,8,8,9,9,10,10,11,11,43,57,3,38,4,30,5,6,7,8,9,59,60,10,11,48,41,64,76,14,14,56,43,57,3,38,38,4,30,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,41,19,63,42,64,65,66,67,68,75,76,14,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,91,3,4,30,5,6,7,8,31,9,59,60,10,11,61,41,19,63,42,64,65,66,67,75,76,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,14,14,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,14,14,3,4,5,6,7,8,31,9,59,60,10,11,41,19,64,76,3,4,5,6,7,8,9,10,11,14,30,31,41,42,14,30,31,41,42,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,19,63,42,64,65,66,67,68,75,76,14,56,57,3,38,38,4,30,30,30,30,5,6,7,8,31,9,59,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,14,14,56,56,56,57,57,57,3,3,3,38,38,38,4,4,4,30,30,30,5,5,5,6,6,6,7,7,7,8,8,8,31,31,31,9,9,9,59,59,59,60,60,60,10,10,10,11,11,11,48,48,48,61,61,61,62,62,62,41,41,41,19,19,19,63,63,63,42,42,42,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,75,75,75,76,76,76,65,68,14,14,14,14,14,14,14,14,14,14,14,14,328,14,14,14,56,43,57,57,3,3,38,4,4,30,5,5,6,6,58,7,8,31,31,9,59,60,10,11,48,61,62,62,41,41,19,63,42,42,64,65,66,67,68,75,76,14,14,30,0,0,328,14,14,56,43,57,3,3,3,3,3,38,4,4,4,4,4,30,5,5,5,5,5,6,6,6,6,6,58,7,7,8,8,31,31,31,31,9,9,59,59,115,147,60,10,10,11,11,48,48,48,61,62,62,62,41,41,19,19,63,63,63,63,42,42,42,42,64,64,64,65,66,67,67,67,67,67,67,67,68,68,75,76,76,76,31,42,62,57,59,62,112,3,4,5,6,7,7,8,8,9,9,10,10,11,11,112,328,3,3,4,4,5,5,6,6,59,62,62,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,112,7,7,8,8,9,9,10,10,11,11,3,4,5,6,112,7,8,9,10,11,8,9,10,11,112,3,4,5,6,7,8,9,10,11,112,7,8,9,10,11,112,3,4,5,6,7,8,9,10,11,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,58,62,3,4,5,6,31,3,4,5,6,48,329,0,19,14,38,31,59,60,62,30,14,38,31,59,60,62,0,0,30,65,30,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,59,7,8,9,10,11,7,8,9,10,11,14,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,42,3,4,5,6,57,59,14,328,14,3,3,38,4,4,30,5,5,6,6,59,147,14,14,38,38,30,30,30,19,19,14,3,4,5,6,57,3,38,4,30,5,6,7,8,9,59,60,10,11,48,41,64,76,14,328,328,112,7,8,9,10,11,328,14,112,3,4,5,6,7,7,8,8,9,9,10,10,11,11,48,19,0,14,48,48,48,14,14,112,14,14,14,0,14,14,38,30,112,14,14,14,14,14,3,38,4,30,5,6,7,8,31,9,10,11,61,63,65,66,67,75,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,48,48,65,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,48,48,0,3,3,4,4,5,5,6,6,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,112,7,8,9,10,11,112,7,8,9,10,11,14,14,14,14,14,14,14,14,14,14,14,14,14,48,3,3,4,4,5,5,6,6,38,31,14,14,14,14,14,14,14,0,112,3,4,5,6,7,7,8,8,9,9,10,10,11,11,48,14,14,14,14,3,38,4,30,30,30,5,6,7,8,31,9,59,60,10,11,48,42,14,112,14,14,68,7,8,9,10,11,0,67,68,14,14,14,14,14,14,328,38,30,19,30,14,14,14,14,14,14,14,328,0,335,335,328,3,4,5,6,7,7,8,8,9,9,10,10,11,11,7,8,9,10,11,328,328,328,3,4,5,6,7,8,9,10,11,328,328,3,4,5,6,7,8,9,10,11,112,7,8,9,10,11,112,7,8,9,10,11,112,7,8,9,10,11,3,4,5,6,7,7,8,8,9,9,10,10,11,11,14,172,3,4,30,5,6,7,8,31,9,59,60,10,11,61,41,19,63,42,64,65,66,67,75,76,329,14,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,19,63,42,64,65,66,67,68,75,76,38,30,14,3,4,5,6,112,7,8,9,10,11,57,0,14,67,3,3,4,4,5,5,6,6,7,8,9,10,11,30,38,3,4,5,6,7,8,9,10,11,0,48,3,4,5,6,57,3,38,4,30,5,6,7,8,31,9,59,60,10,11,61,62,41,19,63,42,64,65,66,67,68,75,76,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,329,14,57,3,4,5,6,31,62,41,42,43,0,0,328,14,30,31,41,42,14,30,31,14,14,14,14,56,43,57,57,3,38,38,4,30,30,5,6,58,7,8,31,31,9,59,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,38,30,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,3,4,5,6,112,38,30,112,14,30,3,4,5,6,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,3,38,4,30,5,6,7,8,31,9,59,10,11,61,62,41,63,42,64,65,66,67,68,75,76,31,42,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,3,4,5,6,7,8,9,10,11,48,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,14,3,4,5,6,7,8,31,9,59,60,10,11,19,64,76,329,63,64,0,14,56,43,57,3,38,4,30,5,6,58,7,8,31,9,59,147,60,10,11,48,61,62,41,19,63,42,64,65,66,67,68,75,76,14,14,14,14,14,112,3,4,5,6,7,7,8,8,9,9,10,10,11,11,48,0,0,0,184,184,184,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,184,184,184,184,0,184,184,184,184,184,184,184,184,184,184,184,184,184,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,0,0,100,101,100,100,100,100,100,100,100,100,100,100,100,101,100,101,100,100,100,100,100,101,100,101,100,101,100,100,100,100,100,100,100,101,101,100,101,100,100,100,101,100,100,100,101,100,100,100,100,101,101,101,101,100,100,100,101,101,101,100,101,100,100,100,100,101,100,101,100,101,100,101,100,100,101,100,100,100,101,100,101,100,100,100,100,101,100,100,100,100,100,100,100,100,100,100,101,101,101,100,100,100,100,100,101,100,100,100,100,100,100,100,100,101,100,336,100,100,101,101,100,100,100,100,100,100,101,101,100,100,101,100,100,100,101,100,101,100,101,100,101,100,101,100,100,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,0,0,199,200,209,0,0,0,0,204,0,201,201,204,0,199,200,209,0,199,200,209,199,200,199,200,209,0,0,0,204,206,207,192,208,199,200,209,201,210,124,192,199,200,199,200,199,200,199,200,201,207,215,204,206,207,192,208,199,200,209,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,124,199,208,204,206,207,192,208,199,200,209,201,210,124,204,206,207,192,208,199,200,209,201,210,124,209,199,200,208,201,204,206,207,208,199,201,210,124,204,206,207,208,199,201,210,124,204,206,207,208,199,201,210,124,204,206,207,208,199,201,210,124,215,206,208,215,204,206,207,192,208,199,200,209,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,206,207,208,199,201,210,124,210,210,210,199,215,204,206,207,192,208,199,200,209,201,210,124,208,199,200,124,206,204,206,207,208,201,210,204,206,207,192,208,199,200,209,201,210,124,204,204,204,206,206,206,207,207,207,192,192,192,208,208,208,199,199,199,200,200,200,209,209,209,201,201,201,210,210,210,124,124,124,206,206,210,210,204,204,206,207,192,208,199,200,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,215,215,204,206,207,192,208,199,200,209,201,210,124,192,124,204,210,206,206,201,215,204,206,207,192,208,199,200,209,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,208,201,204,124,207,208,208,208,201,215,206,210,124,210,124,124,204,210,210,210,210,209,208,204,199,200,208,199,200,206,207,208,199,201,210,124,210,210,210,210,124,192,204,206,207,208,210,210,210,204,206,207,208,199,201,210,124,204,206,207,192,208,199,200,209,201,210,124,204,199,200,215,204,206,207,192,208,199,200,209,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,199,200,215,204,206,207,192,208,199,200,209,201,210,124,206,208,199,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,215,204,206,207,192,208,199,200,209,201,210,124,215,208,192,215,204,206,207,192,208,199,200,209,201,210,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,229,229,229,0,0,337,230,229,0,229,337,230,229,229,229,228,229,228,229,228,229,228,229,228,229,0,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,228,228,229,229,229,228,228,229,228,229,228,229,228,229,228,228,229,228,229,228,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,228,229,0,0,241,242,0,0,242,234,0,0,0,241,242,241,242,234,0,239,0,234,234,234,234,0,0,0,0,0,0,239,234,245,0,245,0,234,0,0,0,239,240,241,242,243,244,232,233,234,245,232,234,235,237,238,234,234,234,234,234,234,234,250,239,240,241,242,243,244,232,233,234,235,237,238,245,250,239,240,241,242,243,244,232,233,234,235,237,238,245,243,232,233,239,240,241,242,243,244,232,233,234,245,239,240,241,242,243,244,232,233,234,245,240,232,233,234,338,234,234,239,240,241,242,243,244,232,233,239,240,241,242,243,244,232,233,239,240,241,242,243,244,232,233,239,240,241,242,243,244,232,233,243,232,233,250,239,240,241,242,243,244,232,233,234,235,235,237,237,238,238,245,250,239,240,241,242,243,244,232,233,234,235,235,237,237,238,238,245,239,232,233,232,234,250,239,240,241,242,243,244,232,233,234,235,237,238,245,234,240,244,232,233,239,240,241,242,243,244,232,233,239,240,241,242,243,244,232,233,234,245,239,239,239,240,240,240,241,241,241,242,242,242,243,243,243,244,244,244,232,232,232,233,233,233,234,234,234,245,245,245,234,243,239,240,241,242,243,244,232,233,234,234,234,234,234,245,250,239,240,241,242,243,244,232,233,234,235,235,237,237,238,238,245,234,234,234,239,240,241,242,243,244,232,233,240,244,232,233,234,233,250,239,240,241,242,243,244,232,233,234,235,237,238,245,250,239,240,241,242,243,244,232,233,234,235,237,238,245,232,338,240,234,245,240,234,245,0,246,250,246,250,246,250,246,250,246,250,246,250,250,239,240,241,242,243,244,232,233,234,235,237,238,245,240,244,232,233,234,234,234,250,239,240,241,242,243,244,232,233,234,235,237,238,245,239,240,241,242,243,244,232,233,240,244,232,233,234,243,232,233,234,246,250,248,250,248,250,248,250,248,250,233,246,250,250,244,235,237,238,234,240,232,233,234,243,246,250,338,234,239,232,233,338,234,246,250,239,240,241,242,243,244,232,233,246,250,0,0,232,234,234,249,234,0,246,250,239,240,241,242,243,244,232,233,239,240,241,242,243,244,232,233,234,245,234,250,239,239,239,240,241,241,241,242,242,243,244,232,233,234,235,237,238,245,250,239,240,241,242,243,244,232,233,234,235,237,238,245,250,239,240,241,242,243,244,232,233,234,235,235,237,237,238,238,245,243,244,250,239,240,241,242,243,244,232,233,234,235,237,238,245,234,250,239,240,241,242,243,244,232,233,234,235,237,238,245,232,240,244,232,233,250,239,240,241,242,243,244,232,233,234,235,237,238,245,256,253,261,0,253,0,0,0,256,0,261,253,253,0,253,253,0,0,0,256,253,252,256,255,257,258,252,253,252,254,252,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,252,253,252,256,255,257,258,253,252,256,255,257,258,254,258,252,255,252,252,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,253,252,256,259,257,253,253,253,252,252,252,256,256,256,259,259,259,257,257,257,255,257,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,252,254,259,254,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,255,257,252,252,252,252,255,258,255,253,252,257,252,253,252,256,255,257,258,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,259,259,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,253,252,256,259,254,255,257,258,252,252,253,252,256,259,254,255,257,258,259,259,264,0,0,0,0,263,264,262,263,264,262,263,264,262,262,263,264,262,263,264,262,263,264,263,264,263,263,263,264,264,264,263,264,262,263,264,262,263,264,262,263,264,262,262,263,264,262,263,264,262,262,262,262,262,263,264,262,263,264,262,263,264,262,263,264,262,263,264,262,263,264,0,0,270,0,0,0,0,265,267,267,265,271,269,268,267,265,271,269,268,267,267,265,267,265,267,270,265,268,268,267,268,267,268,267,268,267,265,268,267,265,271,269,268,267,265,271,269,268,267,265,271,269,269,268,267,268,268,267,267,267,267,267,269,267,269,265,271,269,268,267,265,271,269,268,267,265,271,269,268,267,270,265,268,265,271,269,268,267,265,271,269,268,267,267,271,271,268,267,270,265,268,267,268,267,265,267,265,271,269,268,267,265,271,269,268,267,271,265,271,269,268,267,265,271,269,268,267,265,271,269,268,267,268,265,271,269,268,267,271,271,271,271,0,0,0,0,0,0,272,273,272,274,274,272,275,273,276,277,274,272,275,273,276,277,274,272,273,272,273,272,274,272,275,273,276,277,274,272,275,273,276,277,274,272,275,273,276,277,274,272,275,275,273,276,277,274,274,274,274,275,274,272,275,273,274,272,275,273,276,277,274,272,275,273,276,277,274,272,275,273,276,277,275,272,272,274,273,273,273,273,273,273,274,272,275,273,276,277,274,272,275,273,276,277,274,273,275,273,273,273,273,274,274,273,272,273,277,275,273,274,272,275,274,274,275,274,272,273,273,277,273,275,272,273,276,274,272,275,273,276,277,274,272,275,273,276,277,274,272,275,273,276,277,274,272,275,273,276,277,274,272,275,273,276,277,274,274,272,275,273,276,277,273,0,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,0,339,0,0,0,0,0,339,339,339,339,0,0,0,179,284,287,288,289,285,284,285,179,284,179,284,179,179,179,179,179,179,179,179,179,179,179,284,179,284,179,179,179,179,179,179,179,179,179,179,179,179,179,179,284,287,288,289,285,179,284,287,288,289,285,285,285,179,179,284,179,284,287,288,289,285,179,284,287,288,289,285,179,284,179,179,284,287,288,289,285,179,284,287,288,289,285,179,284,287,288,289,285,179,284,287,288,289,285,289,179,284,179,284,287,288,288,289,285,179,284,287,288,289,285,179,284,287,289,292,179,284,287,288,289,285,284,288,289,179,284,179,284,284,287,288,289,285,179,284,287,288,289,285,179,179,179,284,284,284,287,287,287,288,288,288,289,289,289,285,285,285,289,289,292,179,179,179,179,284,287,288,289,285,179,179,179,179,179,179,179,284,284,287,288,288,288,289,285,288,179,288,179,288,288,179,179,179,179,284,287,288,289,285,179,284,287,288,289,285,179,288,179,284,284,179,284,287,284,179,284,287,289,289,179,179,179,284,287,288,289,285,179,179,284,287,288,289,285,284,179,179,179,284,288,285,179,284,179,340,179,284,289,285,285,292,292,292,179,284,179,179,179,179,179,179,284,287,288,289,285,284,284,285,284,287,288,289,285,0,292,179,179,284,287,288,289,285,179,179,179,179,284,287,288,289,285,284,284,179,179,284,179,179,284,287,288,289,285,179,284,287,288,289,285,179,284,287,288,289,285,179,284,287,289,285,179,284,287,288,289,285,179,284,287,288,289,285,179,284,288,285,284,287,179,284,287,288,289,285,179,0,0,0,0,295,114,119,114,114,114,119,114,119,114,119,114,119,114,119,114,119,295,114,114,119,119,114,119,295,114,119,295,114,119,295,114,119,295,114,119,114,114,119,114,119,114,119,114,119,295,114,114,119,295,114,119,295,114,114,119,295,114,119,114,119,114,119,114,119,114,119,114,119,114,114,114,119,119,119,114,114,119,295,295,295,295,295,114,114,119,119,119,114,114,119,114,119,114,119,295,114,119,114,119,295,114,119,295,119,114,114,114,114,114,119,114,119,295,114,119,114,119,295,114,119,114,114,119,114,119,295,114,114,119,114,295,114,119,295,114,114,119,114,119,295,114,119,295,114,114,114,119,114,119,295,114,114,114,119,119,119,295,114,119,295,114,119,114,119,114,114,119,295,114,119,295,114,119,114,119,295,114,119,295,0,295,295,114,295,114,119,0,0,0,0,0,0,308,310,311,309,312,310,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,311,309,312,311,309,312,311,309,312,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,309,312,311,311,309,312,311,311,311,309,309,309,312,312,312,311,309,312,308,310,310,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,308,309,311,309,312,308,310,311,311,311,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,311,309,312,308,310,311,309,312,308,310,311,309,312,308,310,311,309,312,310,341,342,125,0,0,125,0,0,0,0,0,0,0,0,0,0,266,0,0,218,125,343,344,0,0,345,346,0,0,0,0,0,0,0,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,347,0,205,0,0,0,0,216,205,0,216,0,0,205,125,0,0,0,198,0,0,0,348,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,349,216,0,0,0,350,351,352,213,0,198,125,0,0,0,353,198,0,0,0,354,354,354,0,218,0,0,355,181,0,203,356,0,0,203,356,0,0,0,0,0,0,0,0,355,0,0,0,314,224,315,125,317,343,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,345,346,369,370,371,372,372,313,0,373,374,375,376,314,314,224,315,314,224,315,377,378,361,361,362,362,363,363,364,379,378,361,362,362,363,364,266,121,122,121,122,121,122,121,122,205,314,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,224,315,216,216,198,352,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,205,121,122,380,381,382,383,384,385,384,386,387,388,384,0,389,390,314,224,315,314,314,314,224,224,224,315,315,315,205,216,121,122,224,315,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,180,348,348,213,216,205,224,315,213,205,317,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,391,391,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,341,392,392,376,314,393,139,218,138,348,203,356,357,314,314,394,395,361,362,363,364,396,361,362,363,364,125,394,350,358,360,360,360,360,362,365,366,352,216,205,218,318,319,216,139,213,224,315,348,216,125,125,344,125,74,318,319,352,318,319,335,335,397,397,397,397,397,397,397,397,397,397,224,315,216,216,139,216,216,138,121,122,216,347,121,122,347,314,224,315,213,224,315,398,361,362,363,364,399,361,362,363,364,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,392,392,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,392,392,351,359,362,365,366,367,368,317,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,224,315,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,167,150,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,356,357,314,343,125,344,125,181,342,357,358,359,360,361,362,363,364,317,318,319,121,122,314,365,366,367,368,224,315,138,319,322,322,322,322,322,323,322,323,227,322,226,322,226,202,0,226,322,323,227,322,322,0,0,0,0,0,0,202,0,0,0,322,323,202,226,324,321,321,321,322,323,202,226,324,321,322,323,202,226,324,321,321,324,322,323,202,226,324,321,322,323,202,226,324,321,324,321,322,323,202,226,324,322,323,202,226,324,322,323,202,226,324,322,323,202,226,324,324,321,322,323,202,226,324,321,322,323,202,226,324,321,322,323,202,322,323,202,226,324,321,322,323,202,226,324,322,323,202,226,324,322,322,322,323,323,323,202,202,202,226,226,226,324,324,324,322,202,322,323,202,202,226,324,321,227,227,227,322,323,202,202,202,202,226,324,324,321,322,323,202,226,324,321,322,323,202,226,324,321,322,323,202,226,324,321,322,323,202,226,324,321,324,321,324,321,324,321,324,324,324,322,323,202,322,323,202,226,324,202,322,323,202,226,324,322,323,202,226,324,321,202,322,323,202,226,324,321,322,323,202,226,324,321,322,323,202,226,324,321,322,323,202,226,324,322,323,202,226,324,321,322,323,202,226,324,321,322,323,202,226,324,321,322,202,324],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[]],[[3,3],3],[[3,3]],[[4,4],4],[[4,4]],[[5,5],5],[[5,5]],[[6,6]],[[6,6],6],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[],[[13,[-1,12]]],[]],[[[14,[-1,-2]],-3],15,16,16,17],[[-1,-2],-3,[],18,[]],[[[14,[-1,-2]],-3],15,16,16,17],[[19,20],15],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[[[14,[-2,-3]]],-1,[],[[25,[-1]]],[[25,[-1]]]],[[[14,[-1,-2]]],26,[[25,[26]]],[[25,[26]]]],[[[14,[-1,-2]]],27,[[25,[27]]],[[25,[27]]]],[[[14,[-1,-2]]],28,[[25,[28]]],[[25,[28]]]],[[[14,[-1,-2]]],29,[[25,[29]]],[[25,[29]]]],[[[14,[-1,-2]]],[[14,[-1,-2]]],[],[]],[[[14,[-2,-3]]],[[24,[-1]]],[],[[25,[[24,[-1]]]]],[[25,[[24,[-1]]]]]],[[[30,[-1,-2]]],[[24,[-1]]],[],[]],[31,[[32,[23]]]],[31,[[24,[23]]]],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[[[36,[[14,[-1,-2]]]]],[[14,[[36,[-1]],[36,[-2]]]]],[],[]],[[[36,[[14,[-1,-2]]]]],[[14,[[36,[-1]],[36,[-2]]]]],[],[]],[[[14,[-1,-2]]],29,[[37,[29]]],[[37,[29]]]],[[[14,[-2,-3]]],-1,[],[[37,[-1]]],[[37,[-1]]]],[[[14,[-2,-3]]],[[24,[-1]]],[],[[37,[[24,[-1]]]]],[[37,[[24,[-1]]]]]],[[[14,[-1,-2]]],27,[[37,[27]]],[[37,[27]]]],[[[14,[-1,-2]]],26,[[37,[26]]],[[37,[26]]]],[[[14,[-1,-2]]],28,[[37,[28]]],[[37,[28]]]],[[[14,[-1,-2]]],[[14,[-1,-2]]],[],[]],[[[38,[-1,-2]]],[[39,[-1,12]]],40,[]],[[[30,[-1,-2]]],[[13,[-1,12]]],[],[]],[[[30,[-1,-2]]],[[24,[-1]]],[],[]],[31,[[32,[23]]]],[31,[[24,[23]]]],[41,[[24,[23]]]],[42,[[24,[23]]]],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],0,0,[[-1,43],[[34,[2,44]]],[]],[[43,43],[[34,[2,44]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[[],45],0,0,0,0,[[-1,43],[[34,[2,44]]],[]],[-1,[[34,[43,44]]],[]],[[[14,[-1,-2]]],[[47,[46]]],46,46],[-1,-1,[]],[[3,3],[[47,[3]]]],[[4,4],[[47,[4]]]],[[5,5],[[47,[5]]]],[[6,6],[[47,[6]]]],[[7,7],[[47,[7]]]],[[8,8],[[47,[8]]]],[[9,9],[[47,[9]]]],[[10,10],[[47,[10]]]],[[11,11],[[47,[11]]]],[[48,48],[[34,[48,29]]]],[[3,3],[[47,[3]]]],[[4,4],[[47,[4]]]],[[5,5],[[47,[5]]]],[[6,6],[[47,[6]]]],[[-1,-2],[[47,[-2]]],[],49],[-1,[[47,[-2]]],50,[]],[[-1,-2],[[47,[-3]]],49,49,[]],[[3,3],[[47,[3]]]],[[4,4],[[47,[4]]]],[[5,5],[[47,[5]]]],[[6,6],[[47,[6]]]],[[7,7],[[47,[7]]]],[[8,8],[[47,[8]]]],[[9,9],[[47,[9]]]],[[10,10],[[47,[10]]]],[[11,11],[[47,[11]]]],[[-1,-2],[[47,[-2]]],[],49],[[3,3,51],[[47,[3]]]],[[4,4,51],[[47,[4]]]],[[5,5,51],[[47,[5]]]],[[6,6,51],[[47,[6]]]],[[3,3],[[47,[3]]]],[[4,4],[[47,[4]]]],[[5,5],[[47,[5]]]],[[6,6],[[47,[6]]]],[[7,7],[[47,[7]]]],[[8,8],[[47,[8]]]],[[9,9],[[47,[9]]]],[[10,10],[[47,[10]]]],[[11,11],[[47,[11]]]],[[48,48],[[34,[48,29]]]],0,0,[-1,[[52,[-2]]],[],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[38,[-1,-2]]],2,40,[[54,[53]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[14,[-1,-2]]],[[14,[-1,-2]]],55,55],[56,56],[43,43],[57,57],[3,3],[[[38,[-1,-2]]],[[38,[-1,-2]]],[],[]],[4,4],[[[30,[-1,-2]]],[[30,[-1,-2]]],55,[]],[5,5],[6,6],[58,58],[7,7],[8,8],[31,31],[9,9],[59,59],[60,60],[10,10],[11,11],[48,48],[61,61],[[[62,[-1,-2]]],[[62,[-1,-2]]],55,55],[41,41],[19,19],[63,63],[42,42],[64,64],[65,65],[66,66],[67,67],[[[68,[-1]]],[[68,[-1]]],[69,70,55,71,72,73,74,55]],[75,75],[76,76],[[[14,[-1,-2]],[14,[-1,-2]]],2,55,55],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[14,[-1,-2]],[14,[-1,-2]]],77,40,40],[[3,3],77],[[[38,[-1,-2]],[38,[-1,-2]]],77,[],[[54,[53]]]],[[4,4],77],[[[30,[-1,-2]],[30,[-1,-2]]],77,40,[[54,[53]]]],[[5,5],77],[[6,6],77],[[7,7],77],[[8,8],77],[[31,31],77],[[9,9],77],[[59,59],77],[[60,60],77],[[10,10],77],[[11,11],77],[[48,48],77],[[42,42],77],[[[14,[-1,-2]]],-3,16,16,78],[[3,3],[[47,[3]]]],[[4,4],[[47,[4]]]],[[5,5],[[47,[5]]]],[[6,6],[[47,[6]]]],[[3,3],[[47,[3]]]],[[4,4],[[47,[4]]]],[[5,5],[[47,[5]]]],[[6,6],[[47,[6]]]],[[3,3,51],[[47,[3]]]],[[4,4,51],[[47,[4]]]],[[5,5,51],[[47,[5]]]],[[6,6,51],[[47,[6]]]],[[[14,[-1,-2]],45],2,79,79],[[[14,[-1,-2]]],45,16,16],0,0,0,0,[48,80],0,[-1,[[34,[57,81]]],82],[-1,[[34,[3,81]]],82],[-1,[[34,[[38,[-2,-3]],81]]],82,[73,40],[[54,[53]]]],[-1,[[34,[4,81]]],82],[-1,[[34,[[30,[-2,-3]],81]]],82,73,[[54,[53]]]],[-1,[[34,[5,81]]],82],[-1,[[34,[6,81]]],82],[-1,[[34,[7,81]]],82],[-1,[[34,[8,81]]],82],[-1,[[34,[31,81]]],82],[-1,[[34,[9,81]]],82],[-1,[[34,[59,81]]],82],[-1,[[34,[60,81]]],82],[-1,[[34,[10,81]]],82],[-1,[[34,[11,81]]],82],[-1,[[34,[61,81]]],82],[-1,[[34,[[62,[-2,-3]],81]]],82,73,83],[-1,[[34,[41,81]]],82],[-1,[[34,[19,81]]],82],[-1,[[34,[63,81]]],82],[-1,[[34,[42,81]]],82],[-1,[[34,[64,81]]],82],[-1,[[34,[65,81]]],82],[-1,[[34,[66,81]]],82],[-1,[[34,[67,81]]],82],[-1,[[34,[[68,[-2]],81]]],82,[69,70,55,71,72,73,74,73]],[-1,[[34,[75,81]]],82],[-1,[[34,[76,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[84,[[34,[3,81]]]],[85,[[34,[4,81]]]],[86,[[34,[5,81]]]],[80,[[34,[6,81]]]],[[],[[34,[7,81]]]],[[],[[34,[8,81]]]],[[],[[34,[9,81]]]],[[],[[34,[10,81]]]],[[],[[34,[11,81]]]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[-1,[],[]],[7],[7,23],[8],[8,87],[9,53],[9],[10],[10,53],[11],[11,85],[[],43],[[],57],[[],3],[[],[[38,[-1,-2]]],40,[[54,[53]]]],[[],4],[[],[[30,[-1,-2]]],[],[]],[[],5],[[],6],[[],7],[[],8],[[],9],[[],59],[[],60],[[],10],[[],11],[[],48],[[],41],[[],64],[[],76],[45,-1,[]],[[[14,[-1,-2]]],[],88,88],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[[[38,[-1,-2]]],[],40,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[[[30,[-1,-2]]],[],[],[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[41,29],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[[[14,[-1,-2]]],[],89,89],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[[[14,[-1,-2]]],29,46,46],[-1,[[34,[-2]]],90,[]],[-1,[[34,[3]]],90],[-1,[[34,[4]]],90],[-1,[[34,[[30,[-2,-3]]]]],90,91,[[54,[53]]]],[-1,[[34,[5]]],90],[-1,[[34,[6]]],90],[-1,[[34,[7]]],90],[-1,[[34,[8]]],90],[-1,[[34,[31]]],90],[-1,[[34,[9]]],90],[-1,[[34,[59]]],90],[-1,[[34,[60]]],90],[-1,[[34,[10]]],90],[-1,[[34,[11]]],90],[-1,[[34,[61]]],90],[-1,[[34,[41]]],90],[-1,[[34,[19]]],90],[-1,[[34,[63]]],90],[-1,[[34,[42]]],90],[-1,[[34,[64]]],90],[-1,[[34,[65]]],90],[-1,[[34,[66]]],90],[-1,[[34,[67]]],90],[-1,[[34,[75]]],90],[-1,[[34,[76]]],90],[[3,3],3],[[3,3]],[[4,4],4],[[4,4]],[[5,5],5],[[5,5]],[[6,6]],[[6,6],6],[[7,-1],[],[]],[[7,7]],[[8,8]],[[8,-1],[],[]],[[9,-1],[],[]],[[9,9]],[[10,-1],[],[]],[[10,10]],[[11,11]],[[11,-1],[],[]],[[[14,[-1,-2]],-3],[],92,92,93],[[[14,[-1,-2]],-3],[],94,94,95],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[[[14,[-1,-2]],-3,-4],-5,[],[],96,96,[]],[[[14,[-2,-3]]],-1,[],[[50,[-1]]],[[50,[-1]]]],[[[14,[-1,-2]],-3,-4,-5],-6,[],[],[],96,96,[]],[3,[[13,[23,12]]]],[4,[[13,[23,12]]]],[5,[[13,[23,12]]]],[6,[[13,[23,12]]]],[7,[[13,[23,12]]]],[8,[[13,[23,12]]]],[31,[[13,[23,12]]]],[9,[[13,[23,12]]]],[59,[[13,[23,12]]]],[60,[[13,[23,12]]]],[10,[[13,[23,12]]]],[11,[[13,[23,12]]]],[41,[[13,[23]]]],[19,[[13,[23]]]],[64,[[13,[23]]]],[76,[[13,[23]]]],[3,84],[4,85],[5,86],[6,80],[7],[8],[9],[10],[11],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[[57,-1],2,[98,99]],[[3,-1],2,[98,99]],[[[38,[-1,-2]],-3],2,[],[],[98,99]],[[4,-1],2,[98,99]],[[[30,[-1,-2]],-3],2,[],[],[98,99]],[[5,-1],2,[98,99]],[[6,-1],2,[98,99]],[[7,-1],2,[98,99]],[[8,-1],2,[98,99]],[[31,-1],2,[98,99]],[[9,-1],2,[98,99]],[[59,-1],2,[98,99]],[[60,-1],2,[98,99]],[[10,-1],2,[98,99]],[[11,-1],2,[98,99]],[[61,-1],2,[98,99]],[[[62,[-1,-2]],-3],2,72,83,[98,99]],[[19,-1],2,[98,99]],[[63,-1],2,[98,99]],[[42,-1],2,[98,99]],[[64,-1],2,[98,99]],[[65,-1],2,[98,99]],[[66,-1],2,[98,99]],[[67,-1],2,[98,99]],[[[68,[-1]],-2],2,[69,70,55,71,72,73,74,72],[98,99]],[[75,-1],2,[98,99]],[[76,-1],2,[98,99]],[[[14,[-1,-2]],[14,[-1,-2]]],15,[],[]],[[56,56],15],[[57,57],15],[[3,3],15],[[[38,[-1,-2]],[39,[-1,12]]],15,[],[[54,[53]]]],[[[38,[-1,-2]],[38,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[4,4],15],[[[30,[-1,-2]],[100,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[30,[-1,-2]],[13,[-1,12]]],15,[],[[54,[53]]]],[[[30,[-1,-2]],[30,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[30,[-1,-2]],[101,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[5,5],15],[[6,6],15],[[7,7],15],[[8,8],15],[[31,31],15],[[9,9],15],[[59,59],15],[[60,60],15],[[10,10],15],[[11,11],15],[[48,48],15],[[61,61],15],[[[62,[-1,-2]],[62,[-1,-2]]],15,70,70],[[41,41],15],[[19,19],15],[[63,63],15],[[42,42],15],[[64,64],15],[[65,65],15],[[66,66],15],[[67,67],15],[[[68,[-1]],[68,[-1]]],15,[69,70,55,71,72,73,74,70]],[[75,75],15],[[76,76],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,[[[14,[-1,-2]],29],-1,[],102],[[[14,[-1,-2]],29],-2,102,[]],[[[14,[-2,-3]],-4],2,[],[[103,[-1]]],[[103,[-1]]],104],[[[14,[[34,[-1,-2]],[34,[-3,-2]]]]],[[34,[[14,[-1,-3]],-2]]],[],[],[]],[[[14,[[2,[-1,-2]],[2,[-1,-3]]]]],[[2,[-1,[14,[-2,-3]]]]],[],[],[]],[[[14,[[47,[-1]],[47,[-2]]]]],[[47,[[14,[-1,-2]]]]],[],[]],[[[14,[[34,[-1,-2]],[34,[-1,-3]]]]],[[34,[-1,[14,[-2,-3]]]]],[],[],[]],[[[14,[[2,[-1,-2]],[2,[-3,-2]]]]],[[2,[[14,[-1,-3]],-2]]],[],[],[]],[[[14,[-1,-2]]],[[34,[[24,[23]],105]]],79,79],[[[14,[-1,-2]],-3],47,16,16,17],[[[14,[-1,-2]],-3],[[47,[-4]]],16,16,17,[]],[[[14,[-1,-2]]],[[14,[-2,-1]]],[],[]],[-1,-1,[]],[[[14,[-1,-2]]],[[34,[2,105]]],106,106],[[[14,[-1,-2]],107],[[34,[2,108]]],102,102],[[[14,[-1,-2]],107],[[34,[2,108]]],109,109],[[56,107],[[34,[2,108]]]],[[43,107],[[34,[2,108]]]],[[57,107],[[34,[2,108]]]],[[57,107],[[34,[2,108]]]],[[3,107],[[34,[2,108]]]],[[3,107],[[34,[2,108]]]],[[[38,[-1,-2]],107],[[34,[2,108]]],[],[[54,[53]]]],[[4,107],[[34,[2,108]]]],[[4,107],[[34,[2,108]]]],[[[30,[-1,-2]],107],[[34,[2,108]]],[],[[54,[53]]]],[[5,107],[[34,[2,108]]]],[[5,107],[[34,[2,108]]]],[[6,107],[[34,[2,108]]]],[[6,107],[[34,[2,108]]]],[[58,107],[[34,[2,108]]]],[[7,107],[[34,[2,108]]]],[[8,107],[[34,[2,108]]]],[[31,107],[[34,[2,108]]]],[[31,107],[[34,[2,108]]]],[[9,107],[[34,[2,108]]]],[[59,107],[[34,[2,108]]]],[[60,107],[[34,[2,108]]]],[[10,107],[[34,[2,108]]]],[[11,107],[[34,[2,108]]]],[[48,107],[[34,[2,108]]]],[[61,107],[[34,[2,108]]]],[[[62,[-1,-2]],107],110,102,102],[[[62,[-1,-2]],107],110,102,102],[[41,107],110],[[41,107],110],[[19,107],110],[[63,107],110],[[42,107],110],[[42,107],110],[[64,107],110],[[65,107],110],[[66,107],110],[[67,107],110],[[[68,[-1]],107],110,[69,70,55,71,72,73,74,102]],[[75,107],110],[[76,107],110],[[[14,[-1,-2]],-3,-4],-3,16,16,[],17],[[[14,[-1,-2]],-3],2,16,16,17],[[[13,[-1,12]],[47,[29]]],[[30,[-1,-2]]],[],[[54,[53]]]],0,0,[-1,-1,[]],[-1,-1,[]],[[[34,[-1,-2]]],[[14,[-2,-1]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[-1,-2]]],3,49,49],[[[111,[3]]],3],[-1,-1,[]],[84,3],[-1,3,112],[-1,-1,[]],[-1,-1,[]],[85,4],[[[111,[4]]],4],[-1,4,112],[[[2,[-1,-2]]],4,49,49],[-1,-1,[]],[-1,-1,[]],[86,5],[[[2,[-1,-2]]],5,49,49],[[[111,[5]]],5],[-1,5,112],[[[2,[-1,-2]]],6,49,49],[80,6],[-1,-1,[]],[-1,6,112],[[[111,[6]]],6],[-1,-1,[]],[-1,-1,[]],[[[111,[7]]],7],[[[111,[8]]],8],[-1,-1,[]],[-1,-1,[]],[113,31],[[[32,[23]]],31],[114,31],[-1,-1,[]],[[[111,[9]]],9],[-1,-1,[]],[53,59],[67,115],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[111,[10]]],10],[-1,-1,[]],[[[111,[11]]],11],[-1,-1,[]],[[80,80],48],[-1,48,[[50,[80]]]],[-1,-1,[]],[-1,[[62,[-1,-2]]],[],[]],[-1,-1,[]],[116,-1,[]],[29,41],[-1,-1,[]],[20,19],[-1,-1,[]],[117,63],[-1,-1,[]],[118,63],[119,63],[120,42],[114,42],[-1,-1,[]],[113,42],[-1,-1,[]],[117,64],[119,64],[-1,-1,[]],[-1,-1,[]],[121,67],[122,67],[-1,-1,[]],[66,67],[75,67],[61,67],[29,67],[-1,[[68,[-2]]],[[50,[67]]],[69,70,55,71,72,73,74,123]],[-1,-1,[]],[-1,-1,[]],[[[124,[-1,-2,-3,-4]]],76,72,72,72,125],[-1,-1,[]],[[[24,[23]]],[[34,[76,81]]]],[-1,[[34,[31,81]]],82],[-1,[[34,[42,81]]],82],[126,-1,[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[126,-1,[]],[128,-1,[]],[128,3],[128,4],[128,5],[128,6],[128,7],[128,7],[128,8],[128,8],[128,9],[128,9],[128,10],[128,10],[128,11],[128,11],[128,-1,[]],[[],-1,[]],[84,3],[[],3],[85,4],[[],4],[[],5],[86,5],[[],6],[80,6],[[],59],[-1,-2,129,[]],[-1,-2,130,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[23,7],[[],7],[87,8],[[],8],[[],9],[53,9],[[],10],[53,10],[[],11],[85,11],[10,3],[10,4],[10,5],[10,6],[[],-1,[]],[23,7],[87,8],[53,9],[53,10],[85,11],[87,8],[53,9],[53,10],[85,11],[[-1,-1],-2,[131,132,132],[]],[[80,80],3],[[80,80],4],[[80,80],5],[[80,80],6],[[-1,-1],7,[131,[132,[23]],[132,[87]]]],[[-1,-1],8,[131,[132,[87]],[132,[53]]]],[[-1,-1],9,[131,[132,[53]],[132,[85]]]],[[-1,-1],10,[131,[132,[53]],[132,[85]]]],[[-1,-1],11,[131,[132,[85]],[132,[80]]]],[[-1,-1],-2,[131,132,132],[]],[[-1,-1],7,[131,[132,[23]],[132,[87]]]],[[-1,-1],8,[131,[132,[87]],[132,[53]]]],[[-1,-1],9,[131,[132,[53]],[132,[85]]]],[[-1,-1],10,[131,[132,[53]],[132,[85]]]],[[-1,-1],11,[131,[132,[85]],[132,[80]]]],[[-1,-1,58],[[34,[-2,2]]],[131,132,132],[]],[[80,80,58],3],[[80,80,58],4],[[80,80,58],5],[[80,80,58],6],[[-1,-1,58],[[34,[7,2]]],[55,40,132,132,133,134,135,136,137,138,139,140]],[[-1,-1,58],[[34,[8,2]]],[55,40,132,132,133,134,135,136,137,138,139,140]],[[-1,-1,58],[[34,[9,2]]],[55,40,132,132,133,134,135,136,137,138,139,140]],[[-1,-1,58],[[34,[10,2]]],[55,40,132,132,133,134,135,136,137,138,139,140]],[[-1,-1,58],[[34,[11,2]]],[55,40,132,132,133,134,135,136,137,138,139,140]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,15],58],[126,-1,[]],[29,[[34,[3]]]],[29,[[34,[4]]]],[29,[[34,[5]]]],[29,[[34,[6]]]],[29,[[34,[31]]]],[53,3],[53,4],[53,5],[53,6],[[80,80],48],[[[47,[[13,[23,12]]]]],-1,[]],0,[[19,141],[[47,[142]]]],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[[30,[-1,-2]],-3],47,[],[],[[145,[[24,[-1]]]]]],[[[14,[-1,-2]],-3],2,143,143,146],[[[38,[-1,-2]],-3],2,143,[],146],[[31,-1],2,146],[[59,-1],2,146],[[60,-1],2,146],[[[62,[-1,-2]],-3],2,143,143,146],0,0,[[[30,[-1,-2]],-3],[],[],[],[[145,[[24,[-1]]]]]],0,[[[30,[-1,-2]],-3],[],[],[],[[145,[[24,[-1]]]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[59],[[7,7],23],[[8,8],87],[[9,9],53],[[10,10],53],[[11,11],85],[[7,23],7],[[8,87],8],[[9,53],9],[[10,53],10],[[11,85],11],[-1,-2,[],[]],[[[14,[-1,-2]]],[[34,[-2,-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,31],[3,-1,112],[4,-1,112],[5,-1,112],[6,-1,112],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[-1,[],[]],[-1,[],[]],[[[14,[-1,-1]]],-1,[]],[3,84],[3],[[[38,[-1,-2]]],[[39,[-1,12]]],40,[[54,[53]]]],[4],[4,85],[[[30,[-1,-2]]],[[13,[-1,12]]],[],[]],[5,86],[5],[6],[6,80],[59],[[[147,[-1]]],-1,[]],[-1,-2,[],[]],[[[14,[-1,-2]]],14,104,104],[[[38,[-1,-2]]],[],[],[]],[[[38,[-1,-2]]],[],[],[]],[[[30,[-1,-2]]],[],[],[]],[[[30,[-1,-2]]],[],[],[]],[[[30,[-1,-2]]],[],[],[]],[19],[[19,141],[[47,[142]]]],[-1,-2,[],[]],[3,10],[4,10],[5,10],[6,10],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[[14,[-1,-2]]],15,[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[7,15],[8,15],[9,15],[10,15],[11,15],[-1,15,[]],[[[14,[-1,-2]]],15,[],[]],[-1,15,[]],[3,15],[4,15],[5,15],[6,15],[7,15],[7,15],[8,15],[8,15],[9,15],[9,15],[10,15],[10,15],[11,15],[11,15],[48,15],[19,[[0,[16]]]],0,[[[14,[-1,-2]]],47,16,16],[[48,48],48],[[48,48],48],[[48,48],[[47,[80]]]],[[[14,[-1,-2]]],[[47,[-1]]],[],[]],[[[14,[-1,-2]],-3],[[14,[-4,-2]]],[],[],96,[]],[-1,-1,[]],[[[14,[-1,-2]],-1],-1,[],[]],[[[14,[-1,-2]]],-1,123,[]],[[[14,[-1,-2]],-3],-1,[],[],96],0,[[[14,[-1,-2]]],45,148,148],[[[14,[-1,-2]]],45,92,92],[[[24,[23]]],[[34,[45,81]]]],[[[24,[23]]],[[34,[45,81]]]],[-1,-1,[]],[[[14,[-1,-1]],-2],[[14,[-3,-3]]],[],96,[]],[[[14,[-1,-2]],-3,-4],[[14,[-5,-6]]],[],[],96,96,[],[]],[[[14,[-1,-2]],-3,-4,-5],[[14,[-6,-7]]],[],[],[],96,96,[],[]],[[[14,[-1,-2]],-3],[[14,[-4,-2]]],[],[],96,[]],[[[14,[-1,-2]],-3],[[14,[-1,-4]]],[],[],96,[]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],-1,[]],[[],3],[[],-1,[]],[[],4],[[],-1,[]],[[],5],[[],-1,[]],[[],6],[[],-1,[]],[[],7],[[],8],[[],-1,[]],[[],-1,[]],[[],9],[[],10],[[],-1,[]],[[],11],[[],-1,[]],[[],-1,[]],[[],48],0,[[],-1,[]],[[],3],[[],4],[[],-1,[]],[[],5],[[],-1,[]],[[],6],[[],-1,[]],[[],-1,[]],[[],7],[[],8],[[],-1,[]],[[],-1,[]],[[],9],[[],10],[[],-1,[]],[[],11],[[],-1,[]],[[],-1,[]],[[],48],0,[[3,3],3],[[3,3]],[[4,4]],[[4,4],4],[[5,5],5],[[5,5]],[[6,6]],[[6,6],6],[[7,7]],[[7,-1],[],[133,55,149,150,135,134,137]],[[7,151],151],[[8,151],151],[[8,8]],[[8,-1],[],[133,55,149,150,135,134,137]],[[9,-1],[],[133,55,149,150,135,134,137]],[[9,9]],[[9,151],151],[[10,-1],[],[133,55,149,150,135,134,137]],[[10,151],151],[[10,10]],[[11,151],151],[[11,-1],[],[133,55,149,150,135,134,137]],[[11,11]],[[-1,-2],-2,[],[152,150]],[[7,-1],-1,[152,[150,[23]]]],[[8,-1],-1,[152,[150,[87]]]],[[9,-1],-1,[152,[150,[53]]]],[[10,-1],-1,[152,[150,[53]]]],[[11,-1],-1,[152,[150,[85]]]],[[-1,-2],-2,[],[152,150]],[[7,-1],-1,[152,[150,[23]]]],[[8,-1],-1,[152,[150,[87]]]],[[9,-1],-1,[152,[150,[53]]]],[[10,-1],-1,[152,[150,[53]]]],[[11,-1],-1,[152,[150,[85]]]],[-1,[[2,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,2,[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[-1,[[2,[-2,-3]]],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[2,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[2,[-2]]],[],[]],[48,80],[3,3],[3],[4,4],[4],[5],[5,5],[6,6],[6],[[],[[38,[-1,-2]]],40,[[54,[53]]]],[[[32,[23]]],31],[[[14,[-1,-2]]],47,16,16],[[[14,[-1,-2]]],47,153,153],[-1,[[154,[-2]]],[],[]],[-1,[[155,[-2]]],[],[]],[-1,[[154,[-2]]],[],[]],[-1,[[155,[-2]]],[],[]],[[[14,[-1,-2]],45],47,16,16],0,[[],-1,[]],[[],3],[[],4],[[],5],[[],6],[[],7],[[],7],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[],11],[[],11],[[],48],[[[14,[-1,-2]]],[[47,[45]]],94,94],[[[14,[-2,-3]],-4],2,156,[[157,[-1]]],[[157,[-1]]],158],[[-1,-2],[[34,[-3,159]]],[],160,161],[[[14,[-1,-2]],[14,[-1,-2]]],[[47,[77]]],[],[]],[[3,3],[[47,[77]]]],[[[38,[-1,-2]],[38,[-1,-2]]],[[47,[77]]],[],[[54,[53]]]],[[4,4],[[47,[77]]]],[[[30,[-1,-2]],[30,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[30,[-1,-2]],[101,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[30,[-1,-2]],[100,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[5,5],[[47,[77]]]],[[6,6],[[47,[77]]]],[[7,7],[[47,[77]]]],[[8,8],[[47,[77]]]],[[31,31],[[47,[77]]]],[[9,9],[[47,[77]]]],[[59,59],[[47,[77]]]],[[60,60],[[47,[77]]]],[[10,10],[[47,[77]]]],[[11,11],[[47,[77]]]],[[48,48],[[47,[77]]]],[[42,42],[[47,[77]]]],[[[14,[-1,-2]],-3],[[2,[-4,-4]]],16,16,17,[123,103]],[-1,-1,[]],[[[36,[[14,[-1,-2]]]],162],163,164,164],[[[14,[-1,-2]],-3],[[47,[45]]],16,16,17],0,[[7,45]],[[8,45]],[[9,45]],[[10,45]],[[11,45]],[-1,2,74],[67,2],[[[68,[-1]]],2,[69,70,55,71,72,73,74]],[[[14,[-1,-2]],[24,[23]]],[[34,[45,105]]],165,165],[[[14,[-1,-2]],[24,[23]]],[[34,[2,105]]],165,165],[[[14,[-1,-2]],44],[[34,[45,105]]],79,79],[[[14,[-1,-2]],[13,[23,12]]],[[34,[45,105]]],165,165],[[[14,[-1,-2]],44],[[34,[45,105]]],165,165],[[[14,[-1,-2]],23,[13,[23,12]]],[[34,[45,105]]],79,79],[-1,[[47,[-1]]],[]],[[[38,[-2,-3]],-1],15,[40,99],[[166,[-1]],40],[[54,[53]]]],[[[30,[-1,-2]],45],-1,[],[]],[[19,141],2],[[[30,[-1,-2]],-3],2,[],[],17],[[[14,[-1,-2]],-3],47,153,153,17],[[[14,[-1,-2]],-3,-4],-3,153,153,[],17],[[[14,[-1,-2]]],[[47,[-2]]],[],[]],[[[14,[-1,-2]],-3],[[14,[-1,-4]]],[],[],96,[]],[[[14,[-1,-2]],-2],-2,[],[]],[[[14,[-1,-2]]],-2,[],123],[[[14,[-1,-2]],-3],-2,[],[],96],[-1,-1,[]],0,[-1,-2,[],[[167,[-1]]]],[-2,-1,[],[[150,[-1]]]],[-1,-1,[]],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[7,7],7],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],[[10,10],10],[[10,10],10],[[11,11],11],[[11,11],11],[[7,7,58],7],[[8,8,58],8],[[9,9,58],9],[[10,10,58],10],[[11,11,58],11],[[-1,-2],-2,[],49],[-1,-2,49,[]],[[-1,-2],-3,49,49,[]],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[11,11],11],[[-1,-2],-2,[],49],[[-1,-2],-2,[],49],[[3,45],3],[[4,45],4],[[5,45],5],[[6,45],6],[[7,45],7],[[8,45],8],[[9,45],9],[[10,45],10],[[11,45],11],[[-1,-2],-2,[],[168,150]],[[7,-1],-1,[168,[150,[23]]]],[[8,-1],-1,[168,[150,[87]]]],[[9,-1],-1,[168,[150,[53]]]],[[10,-1],-1,[168,[150,[53]]]],[[11,-1],-1,[168,[150,[85]]]],[[-1,-2],-2,[],[168,150]],[[7,-1],-1,[168,[150,[23]]]],[[8,-1],-1,[168,[150,[87]]]],[[9,-1],-1,[168,[150,[53]]]],[[10,-1],-1,[168,[150,[53]]]],[[11,-1],-1,[168,[150,[85]]]],[[-1,-2],-2,[],[168,150]],[[7,-1],-1,[168,[150,[23]]]],[[8,-1],-1,[168,[150,[87]]]],[[9,-1],-1,[168,[150,[53]]]],[[10,-1],-1,[168,[150,[53]]]],[[11,-1],-1,[168,[150,[85]]]],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[7,7],7],[[8,8],8],[[8,8],8],[[9,9],9],[[9,9],9],[[10,10],10],[[10,10],10],[[11,11],11],[[11,11],11],[[[14,[-1,-2]],169],[[34,[85,105]]],170,170],[[-1,-2],34,[],171],[[3,-1],34,171],[[4,-1],34,171],[[[30,[-1,-2]],-3],34,172,[],171],[[5,-1],34,171],[[6,-1],34,171],[[7,-1],34,171],[[8,-1],34,171],[[31,-1],34,171],[[9,-1],34,171],[[59,-1],34,171],[[60,-1],34,171],[[10,-1],34,171],[[11,-1],34,171],[[61,-1],34,171],[[41,-1],34,171],[[19,-1],34,171],[[63,-1],34,171],[[42,-1],34,171],[[64,-1],34,171],[[65,-1],34,171],[[66,-1],34,171],[[67,-1],34,171],[[75,-1],34,171],[[76,-1],34,171],[[-1,-2],47,[],[[37,[[24,[23]]]]]],[[[14,[-1,-2]]],[[2,[45,[47,[45]]]]],16,16],[57,45],[3,45],[[[38,[-1,-2]]],45,[],[]],[4,45],[[[30,[-1,-2]]],45,[],[]],[5,45],[6,45],[7,45],[8,45],[31,45],[9,45],[59,45],[60,45],[10,45],[11,45],[61,45],[[[62,[-1,-2]]],45,72,83],[19,45],[63,45],[42,45],[64,45],[65,45],[66,45],[67,45],[[[68,[-1]]],45,[69,70,55,71,72,73,74,72]],[75,45],[76,45],[-1,[[34,[2,81]]],82],[-1,[[34,[2,81]]],82],[[[14,[-1,-2]]],[[47,[46]]],46,46],[3,3],[4,4],[5,5],[6,6],[-1,-1,[]],[7,7],[8,8],[9,9],[10,10],[11,11],[57,[[47,[53]]]],[29,[[32,[23]]]],[-1,[[173,[-2]]],[],[]],[67,67],[[3,3],3],[[3,3]],[[4,4]],[[4,4],4],[[5,5]],[[5,5],5],[[6,6],6],[[6,6]],[[7,7]],[[8,8]],[[9,9]],[[10,10]],[[11,11]],[[[30,[-1,-2]],45],-1,[],[]],[[[38,[-2,-3]],-1],[[47,[-2]]],[40,99],[[166,[-1]],40,40],[[54,[53]]]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],[[-1,-2,-2],77,[],[]],0,[[48,80],[[47,[48]]]],[3,128],[4,128],[5,128],[6,128],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[23,12]]],[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],0,0,0,[-1,-1,[]],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[175,[-2,-3,-4]]]]],[],[],[],[]],[-1,[[34,[[100,[-2,-3]]]]],[],[],[]],[-1,[[34,[[38,[-2,-3]]]]],[],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[23,[[34,[57,2]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[39,[-1,12]]],[[34,[[38,[-1,-2]]]]],40,[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[13,[-1,12]]],[[34,[[30,[-1,-2]]]]],[],[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[24,[23]]],[[34,[31,2]]]],[-1,[[34,[-2]]],[],[]],[29,[[34,[59,2]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[38,[-1,-2]],-1],[[34,[15,-1]]],40,[[54,[53]]]],[[[30,[-1,-2]],45,-1],[[34,[2,2]]],[],[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[3,[[34,[-1,-1]]],112],[4,[[34,[-1,-1]]],112],[5,[[34,[-1,-1]]],112],[6,[[34,[-1,-1]]],112],[-1,[[34,[-1,-1]]],[]],[[[38,[-1,-2]],-3],[[47,[[38,[-1,-2]]]]],40,[[54,[53]]],17],[[[30,[-1,-2]],-3],[[47,[[30,[-1,-2]]]]],[],[[54,[53]]],17],[-1,[[34,[-1,-1]]],[]],[[[36,[-1]],162],163,[]],[[[30,[-1,-2]],-1],[[34,[2,2]]],[],[[54,[53]]]],[3,[[47,[3]]]],[4,[[47,[4]]]],[5,[[47,[5]]]],[6,[[47,[6]]]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[179,31],[-1,42,[[50,[179]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1,-2]]],-1,[],102],[[[14,[-1,-2]]],-2,102,[]],[[3,-1],-2,96,[]],[[4,-1],-2,96,[]],[[5,-1],-2,96,[]],[[6,-1],-2,96,[]],[[7,-1],-2,96,[]],[[8,-1],-2,96,[]],[[31,-1],-2,96,[]],[[9,-1],-2,96,[]],[[59,-1],-2,96,[]],[[60,-1],-2,96,[]],[[10,-1],-2,96,[]],[[11,-1],-2,96,[]],[[19,-1],-2,96,[]],[[64,-1],-2,96,[]],[[76,-1],-2,96,[]],[[-1,-2],15,[],[[37,[[24,[23]]]]]],[[63,-1,31],15,[[180,[[24,[23]]]]]],[[64,-1,114],15,[[180,[[24,[23]]]]]],[[-1,-2],15,181,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1,-2]],-3],[],92,92,182],[[[14,[-1,-2]],[24,[23]]],[[34,[45,105]]],106,106],[[-1,[24,[23]]],2,[]],[[[14,[-1,-2]],[24,[23]]],[[34,[2,105]]],106,106],[[[14,[-1,-2]],183],[[34,[2,105]]],106,106],[[],-1,[]],[[],3],[[],4],[[],5],[[],6],[[],7],[[],7],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[],11],[[],11],[[],48],0,0,0,[[-1,1],2,[]],[[184,184]],[[184,184],184],[[53,53],[[2,[53,53]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[184,45],[[47,[53]]]],[[],-1,[]],[184,184],[[-1,-2],2,[],[]],[[184,184],77],[-1,[[34,[184,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[],184],[45,-1,[]],[45,-1,[]],[[184,184,15],[[47,[[2,[184,184]]]]]],[[184,53],184],[45,2],[184,[[13,[23,12]]]],[[184,-1],2,[98,99]],[[184,184],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[184,107],[[34,[2,108]]]],[53,184],[80,184],[23,184],[-1,-1,[]],[87,184],[85,184],[[[24,[53]]],184],[-1,-2,[],[]],[-1,-2,[],[]],[[184,45],53],[[],45],[-1,-2,[],[]],[-1,15,[]],[184,15],[184,45],[[184,45],2],[184,53],[184,2],[184,53],[[184,184],184],[[184,184]],[[53,53],85],[[],184],[[184,184],[[47,[77]]]],[[184,45,53],2],[184,45],[85,[[2,[53,53]]]],[[184,184],[[34,[184,184]]]],[[184,184]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[184,-1],-2,96,[]],[-1,-2,[],[]],[45,184],[[],184],0,[[-1,1],2,[]],[[[175,[-1,-2,-3]]],[[185,[-1,-2,12]]],40,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[[[175,[-1,-2,-3]]],2,40,[],[[54,[53]]]],[[],-1,[]],[[[175,[-1,-2,-3]]],[[175,[-1,-2,-3]]],[],[],[]],[[-1,-2],2,[],[]],[[[175,[-1,-2,-3]],[175,[-1,-2,-3]]],77,[],[],[[54,[53]]]],[-1,[[34,[[175,[-2,-3,-4]],81]]],82,[73,40],73,[[54,[53]]]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[],[[175,[-1,-2,-3]]],40,[],[[54,[53]]]],[[[175,[-1,-2,-3]]],[],40,[],[]],[45,-1,[]],[45,-1,[]],[45,2],[[[175,[-1,-2,-3]],-4],2,[],[],[],[98,99]],[[[175,[-1,-2,-3]],[185,[-1,-2,12]]],15,[],[],[]],[[[175,[-1,-2,-3]],[175,[-1,-2,-4]]],15,[],[],[[54,[53]]],[[54,[53]]]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[175,[-1,-2,-3]],107],[[34,[2,108]]],[],[],[[54,[53]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],85,[143,99],144],[[[175,[-2,-3,-4]],-1],[[47,[-3]]],[40,99],[[166,[-1]],40],[],[[54,[53]]]],[[[175,[-1,-2,-3]],-4],2,143,143,[],146],[[],45],[-1,-2,[],[]],[[[175,[-1,-2,-3]]],[[185,[-1,-2,12]]],40,[],[[54,[53]]]],[[[175,[-1,-2,-3]]],[],[],[],[]],[[[175,[-1,-2,-3]]],[],[],[],[]],[[[175,[-1,-2,-3]]],[],[],[],[]],[-1,15,[]],[[[175,[-1,-2,-3]]],[[186,[-1,-2]]],40,[],[[54,[53]]]],[[[24,[23]]],[[34,[45,81]]]],[[[175,[-1,-2,-3]],-4],[[175,[-1,-5,-3]]],40,[],[[54,[53]]],17,[]],[[],45],[[],[[175,[-1,-2,-3]]],40,[],[[54,[53]]]],[[[175,[-1,-2,-3]],[175,[-1,-2,-3]]],[[47,[77]]],[],[],[[54,[53]]]],[[[175,[-2,-3,-4]],-1],[[47,[-3]]],[40,99],[[166,[-1]],40],[],[[54,[53]]]],[[[175,[-2,-3,-4]],-1],[[47,[[2,[-2,-3]]]]],[40,99],[[166,[-1]],40],[],[[54,[53]]]],[[[175,[-1,-2,-3]],-4],2,40,[],[[54,[53]]],17],[[[175,[-1,-2,-3]]],45,[],[],[]],[-1,[[34,[2,81]]],82],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[[[185,[-1,-2,12]]],[[34,[[175,[-1,-2,-3]]]]],40,[],[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[[[175,[-1,-2,-3]],-1,-2],[[34,[[47,[-2]],[2,[-1,-2]]]]],40,[],[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[[[175,[-1,-2,-3]],-4],[[34,[[175,[-1,-5,-3]],-6]]],40,[],[[54,[53]]],17,[],[]],[[[175,[-1,-2,-3]],-4],[[47,[[175,[-1,-2,-3]]]]],40,[],[[54,[53]]],17],[-1,176,[]],[[],[[178,[177]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,[[21,[-2,-3]]],[],[],22],[[[100,[-1,-2]]],[[101,[-1,-2]]],[],[]],[-1,[[24,[23]]],[]],[[[100,[-1,-2]]],[[24,[-1]]],[],[]],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[-1,[[34,[[24,[-2]],33]]],[],35],[[[100,[-1,-2]]],[[24,[-1]]],[],[]],[[[100,[-1,-2]]],[[13,[-1,12]]],[],[]],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[[[100,[-1,-2]],45,-1],2,55,[[54,[53]]]],[[],-1,[]],[[[100,[-1,-2]]],2,[],[]],[[[100,[-1,-2]]],[[100,[-1,-2]]],55,[]],[[[101,[-1,-2]]],[[101,[-1,-2]]],[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[100,[-1,-2]],[100,[-1,-2]]],77,40,[[54,[53]]]],[[[101,[-1,-2]],[101,[-1,-2]]],77,40,[[54,[53]]]],[-1,[[34,[[100,[-2,-3]],81]]],82,73,[[54,[53]]]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[],[[100,[-1,-2]]],[],[]],[[[100,[-1,-2]]],[],[],[]],[45,-1,[]],[[[101,[-1,-2]]],[],[],[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[34,[[100,[-2,-3]]]]],90,91,[[54,[53]]]],[[[100,[-1,-2]],-3],[[187,[-1,12]]],[],[],[[188,[45]]]],[45,2],[45,2],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[[[100,[-1,-2]],-3],2,[],[],[98,99]],[[[101,[-1,-2]],-3],2,72,[],[98,99]],[[[100,[-1,-2]],[101,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[100,[-1,-2]],[13,[-1,12]]],15,[],[[54,[53]]]],[[[100,[-1,-2]],[30,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[100,[-1,-2]],[100,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[101,[-1,-2]],[101,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[101,[-1,-2]],[24,[-1]]],15,[],[[54,[53]]]],[[[101,[-1,-2]],[30,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[[101,[-1,-2]],[100,[-1,-3]]],15,[],[[54,[53]]],[[54,[53]]]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[100,[-1,-2]],107],[[34,[2,108]]],[],[[54,[53]]]],[[[101,[-1,-2]],107],[[34,[2,108]]],[],[[54,[53]]]],[[[100,[-1,-2]],45,-1],[[34,[[47,[-1]],-1]]],[],[[54,[53]]]],[[[100,[-1,-2]],45,-1],[[34,[[47,[-1]],-1]]],[],[[54,[53]]]],[[[100,[-1,-2]],-1],2,[],[[54,[53]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[[100,[-1,-2]],-3],47,[],[],[[145,[[24,[-1]]]]]],[[[100,[-1,-2]],-3],2,143,[],146],[[[101,[-1,-2]],-3],2,143,[],146],[[[100,[-1,-2]],-3],[],[],[],[[145,[[24,[-1]]]]]],[[[100,[-1,-2]],-3],[],[],[],[[145,[[24,[-1]]]]]],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[[[100,[-1,-2]]],[[13,[-1,12]]],[],[]],[[[100,[-1,-2]]],[],[],[]],[[[100,[-1,-2]]],[],[],[]],[[[100,[-1,-2]]],[],[],[]],[[[101,[-1,-2]]],[],[],[]],[-1,15,[]],[[[100,[-1,-2]]],15,[],[[54,[53]]]],[[[100,[-1,-2]]],[[189,[-1]]],[],[]],[[[100,[-1,-2]]],[[47,[-1]]],[],[]],[[[24,[23]]],[[34,[45,81]]]],[[],45],[[],[[100,[-1,-2]]],[],[]],[[[100,[-1,-2]],[30,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[100,[-1,-2]],[101,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[100,[-1,-2]],[100,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[101,[-1,-2]],[100,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[101,[-1,-2]],[30,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[101,[-1,-2]],[101,[-1,-3]]],[[47,[77]]],[],[[54,[53]]],[[54,[53]]]],[[[100,[-1,-2]]],[[47,[-1]]],[],[]],[[[100,[-1,-2]],45],-1,[],[]],[[[100,[-1,-2]],-3],2,[],[],17],[[[100,[-1,-2]],-3],34,172,[],171],[[[100,[-1,-2]]],45,[],[]],[[[101,[-1,-2]]],45,72,[]],[-1,[[34,[2,81]]],82],[[[100,[-1,-2]],45,45],15,[],[[54,[53]]]],[[[100,[-1,-2]]],2,40,[]],[[[100,[-1,-2]],-3],2,[],[],17],[[[100,[-1,-2]],-3],2,[],[],17],[[[100,[-1,-2]],45],-1,[],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[100,[-1,-2]],45],2,[],[]],[-1,-2,[],[]],[[[13,[-1,12]]],[[100,[-1,-2]]],[],[[54,[53]]]],[[[13,[-1,12]]],[[100,[-1,-2]]],[],[[54,[53]]]],[[[24,[-1]]],[[101,[-1,-2]]],[],[[54,[53]]]],[[[24,[-1]]],[[101,[-1,-2]]],[],[[54,[53]]]],[[[100,[-1,-2]],[13,[-1,12]]],[[34,[2,2]]],[],[[54,[53]]]],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[[[100,[-1,-2]],-3],[[34,[2,2]]],[],[[54,[53]]],[104,148]],[-1,[[34,[-2]]],[],[]],[[[13,[-1,12]]],[[34,[[100,[-1,-2]]]]],[],[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[[[24,[-1]]],[[34,[[101,[-1,-2]]]]],[],[[54,[53]]]],[[[100,[-1,-2]],45,-1],[[34,[2,-1]]],[],[[54,[53]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[100,[-1,-2]],-3],[[47,[[100,[-1,-2]]]]],[],[[54,[53]]],17],[[[100,[-1,-2]],-1],[[34,[2,-1]]],[],[[54,[53]]]],[-1,176,[]],[-1,176,[]],[[],[[178,[177]]]],[[],[[178,[177]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,[[100,[-1,-2]]],[],[[54,[53]]]],[[],[[100,[-1,-2]]],[],[[54,[53]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[190,-1,-1],-1,[191,55]],[45,-1,[]],[45,-1,[]],[45,2],[[190,190],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[190,107],110],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[-1,-2,[],[]],0,0,[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[[],178],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[[192,[-1,-2,-3]],193,45],[[195,[194]]],[196,197],[196,198],125],[199,[[47,[[2,[141,[24,[23]]]]]]]],[200,[[47,[[2,[141,[24,[23]]]]]]]],[199,[[47,[[24,[23]]]]]],[200,[[47,[[24,[23]]]]]],[199,[[47,[[2,[141,[24,[23]]]]]]]],[200,[[47,[[2,[141,[24,[23]]]]]]]],[199,[[47,[[2,[141,[24,[23]]]]]]]],[200,[[47,[[2,[141,[24,[23]]]]]]]],[[201,85],85],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[124,[-1,-2,-3,-4]],-5],[[34,[202]]],[196,197],[72,196],[196,181],125,203],[[199,199],2],[[],-1,[]],[[[204,[-1]]],[[204,[-1]]],[55,205]],[[[206,[-1,-2]]],[[206,[-1,-2]]],55,55],[[[207,[-1]]],[[207,[-1]]],55],[[[192,[-1,-2,-3]]],[[192,[-1,-2,-3]]],55,55,55],[208,208],[199,199],[200,200],[209,209],[201,201],[[[210,[-1,-2]]],[[210,[-1,-2]]],[55,71,[50,[211]],[212,[211]]],[55,213]],[[[124,[-1,-2,-3,-4]]],[[124,[-1,-2,-3,-4]]],55,55,55,[125,55]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[209,209],77],[[199,141],[[47,[-1]]],73],[[200,141],[[47,[-1]]],73],[[208,-1],[[47,[-2]]],214,[]],[[201,85],85],[-1,[[34,[[204,[-2]],81]]],82,205],[-1,[[34,[[206,[-2,-3]],81]]],82,73,[]],[-1,[[34,[[207,[-2]],81]]],82,73],[-1,[[34,[208,81]]],82],[-1,[[34,[199,81]]],82],[-1,[[34,[201,81]]],82],[-1,[[34,[[210,[-2,-3]],81]]],82,[83,71,[50,[211]],[212,[211]]],213],[-1,[[34,[[124,[-2,-3,-4,-5]],81]]],82,73,73,73,125],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[[215,[-1,-2]]],[[2,[-1,-2]]],72,125],[[[206,[-1,-2]]],[[2,[13]]],[216,217],[196,18,218,219]],[[],208],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[34,[[206,[-2,-3]]]]],90,91,91],[-1,[[34,[[207,[-2]]]]],90,91],[-1,[[34,[208]]],90],[-1,[[34,[199]]],90],[-1,[[34,[201]]],90],[-1,[[34,[[210,[-2,-3]]]]],90,[71,[50,[211]],[212,[211]]],213],[-1,[[34,[[124,[-2,-3,-4,-5]]]]],90,73,73,73,125],[[[210,[-1,-2]]],208,[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],0,[[[210,[-1,-2]]],208,[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],[199,200],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[208,[[13,[23]]]],[199,[[13,[23]]]],[200,[[13,[23]]]],[[[124,[-1,-2,-3,-4]]],[[13,[23]]],72,72,72,125],[24,[[13,[23]]]],[[[204,[-1]],-2],2,205,[98,99]],[[[206,[-1,-2]],-3],2,72,[],[98,99]],[[[207,[-1]],-2],2,72,[98,99]],[[208,-1],2,[98,99]],[[201,-1],2,[98,99]],[[[210,[-1,-2]],-3],2,[83,71,[50,[211]],[212,[211]]],213,[98,99]],[[[204,[-1]],[204,[-1]]],15,[70,205]],[[[206,[-1,-2]],[206,[-1,-2]]],15,70,70],[[[207,[-1]],[207,[-1]]],15,70],[[[192,[-1,-2,-3]],[192,[-1,-2,-3]]],15,70,70,70],[[208,208],15],[[199,199],15],[[200,200],15],[[209,209],15],[[201,201],15],[[[210,[-1,-2]],[210,[-1,-2]]],15,[70,71,[50,[211]],[212,[211]]],[70,213]],[[[124,[-1,-2,-3,-4]],[124,[-1,-2,-3,-4]]],15,70,70,70,[125,70]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[206,[-1,-2]]],24,[216,217],[196,18,218,219]],0,[[[210,[-1,-2]]],[],[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],0,[[[204,[-1]],107],110,[102,205]],[[[204,[-1]],107],110,205],[[[206,[-1,-2]],107],110,102,102],[[[207,[-1]],107],110,102],[[[192,[-1,-2,-3]],107],110,102,102,102],[[208,107],110],[[199,107],110],[[200,107],110],[[201,107],110],[[[210,[-1,-2]],107],110,[102,71,[50,[211]],[212,[211]]],[102,213]],[[[124,[-1,-2,-3,-4]],107],110,102,102,[],125],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[215,[-1,-2]]],72,125],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[204,[-1]]],205],[[[210,[-1,-2]]],[],[196,143,71,197,191,18,[50,[211]],[212,[211]]],213],[[[206,[-1,-2]]],[],[216,217],[196,18,218,219]],0,[[],201],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[201,15],[[[204,[-1]]],15,205],[[[124,[-1,-2,-3,-4]]],[[47,[15]]],223,223,223,[125,223]],0,[[208,-1],[[47,[-2]]],214,99],[208,[[24,[199]]]],0,[[85,85],201],[[-1,-2],[[34,[[215,[-1,-2]],202]]],72,125],[13,[[206,[-1,-2]]],[216,217],[196,18,218,219]],[208,[[210,[-1,-2]]],[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],[[-1,47],[[47,[[124,[-2,-1,-3,-4]]]]],223,223,223,[125,223]],[[],[[210,[85,224]]]],[[-1,-2,-3,-4],[[124,[-2,-1,-3,-4]]],[],[],[],125],[-1,[[124,[-2,-1,-3,-4]]],[],[],[],125],[[[225,[-1]]],[[204,[-1]]],205],[[[210,[-1,-2]]],[],[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],0,[[[210,[-1,-2]]],[],[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],0,[[209,209],[[47,[77]]]],[208,[[47,[199]]]],[[],[[204,[-1]]],205],[[199,141],[[47,[-1]]],73],[[200,141],[[47,[-1]]],73],[[208,199],2],[[199,141],[[47,[-1]]],73],[[200,141],[[47,[-1]]],73],[[[206,[-1,-2]],-3],34,172,172,171],[[[207,[-1]],-2],34,172,171],[[208,-1],34,171],[[199,-1],34,171],[[201,-1],34,171],[[[210,[-1,-2]],-3],34,[71,[50,[211]],[212,[211]]],213,171],[[[124,[-1,-2,-3,-4]],-5],34,72,72,72,125,171],[[[210,[-1,-2]]],2,[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],[[[210,[-1,-2]]],2,[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],[[[210,[-1,-2]]],2,[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],[[[210,[-1,-2]]],2,[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],0,0,[[[204,[-1]]],45,205],[[[206,[-1,-2]]],45,72,[]],[[[207,[-1]]],45,72],[208,45],[[[210,[-1,-2]]],45,[83,71,[50,[211]],[212,[211]]],213],[[[210,[-1,-2]]],[],[196,217,220,102,123,143,197,191,221,71,222,[50,[211]],[212,[211]],223],213],0,[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[[199,209],[[47,[[24,[23]]]]]],[[200,209],[[47,[[24,[23]]]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[199,209],[[47,[-1]]],73],[[200,209],[[47,[-1]]],73],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],178],[[],178],[[],178],[[],178],[[],178],[[],178],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[215,[-1,-2]],-3],-4,72,125,96,[]],[[208,-1],-2,96,[]],[[[192,[-1,-2,-3]],226,193,45],227,[196,197],[196,198],125],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[80,80],80],[[80,80,80,58],[[47,[80]]]],[80,[[2,[85,85]]]],[80,80],[80,184],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[228,228],[229,229],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[230,231],[-1,[[34,[228,81]]],82],[-1,[[34,[229,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[34,[228]]],90],[-1,[[34,[229]]],90],[45,2],[45,2],[[228,-1],2,[98,99]],[[229,-1],2,[98,99]],[[228,228],15],[[229,229],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,[[228,107],110],[[229,107],110],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],0,[[228,-1],34,171],[[229,-1],34,171],[228,45],[229,45],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[[],178],[[],178],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[232,233],232],[[],234],[235,236],[237,236],[238,236],[[234,234],234],[[234,234],2],[[234,234],234],[[234,234],2],[234,53],[[234,234],234],[[234,234],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[239,239],[240,240],[241,241],[242,242],[243,243],[244,244],[232,232],[233,233],[234,234],[245,245],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[240,240],77],[[232,232],77],[[233,233],77],[[234,234],77],[[-1,[24,[23]],[24,[23]],[47,[[24,[23]]]],[24,[23]]],15,[]],[234,234],[[234,234],15],[-1,[[34,[239,81]]],82],[-1,[[34,[240,81]]],82],[-1,[[34,[241,81]]],82],[-1,[[34,[242,81]]],82],[-1,[[34,[243,81]]],82],[-1,[[34,[244,81]]],82],[-1,[[34,[232,81]]],82],[-1,[[34,[233,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[],243],[[],232],[[],233],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[235],[237],[45,-1,[]],[45,-1,[]],[238],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[235],[45,-1,[]],[45,-1,[]],[237],[238],[45,-1,[]],[45,-1,[]],[-1,[[34,[239]]],90],[-1,[[34,[232]]],90],[-1,[[34,[233]]],90],[[232,232],233],[[234,234],234],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[[],234],[240,[[13,[23,12]]]],[244,[[13,[23,12]]]],[232,[[13,[23,12]]]],[233,[[13,[23,12]]]],[[239,-1],2,[98,99]],[[240,-1],2,[98,99]],[[241,-1],2,[98,99]],[[242,-1],2,[98,99]],[[243,-1],2,[98,99]],[[244,-1],2,[98,99]],[[232,-1],2,[98,99]],[[233,-1],2,[98,99]],[[239,239],15],[[240,240],15],[[241,241],15],[[242,242],15],[[243,243],15],[[244,244],15],[[232,232],15],[[233,233],15],[[234,234],15],[[245,245],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[234,-1],2,104],0,[[239,107],[[34,[2,108]]]],[[240,107],[[34,[2,108]]]],[[241,107],[[34,[2,108]]]],[[242,107],[[34,[2,108]]]],[[243,107],[[34,[2,108]]]],[[244,107],[[34,[2,108]]]],[[232,107],[[34,[2,108]]]],[[233,107],[[34,[2,108]]]],[[234,107],[[34,[2,108]]]],[[234,107],[[34,[2,108]]]],[[234,107],[[34,[2,108]]]],[[234,107],[[34,[2,108]]]],[[234,107],[[34,[2,108]]]],[[245,107],[[34,[2,108]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[247,[246,12]]],235],[-1,-1,[]],[[[247,[248,12]]],237],[[[247,[249,12]]],238],[-1,-1,[]],[-1,-1,[]],[53,[[47,[234]]]],[53,234],[53,234],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[[],240],[[],244],[[],232],[[],233],[-1,234,104],[85,233],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,232],[[-1,[24,[23]],[24,[23]]],[[47,[[13,[23,12]]]]],[]],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[240,-1],2,146],[[234,-1],2,146],[[245,-1],2,146],0,[[-1,240,29,29],[[34,[2,2]]],[]],[[[250,[-1]],240,29,29],[[34,[2,2]]],246],[[-1,29,29,[24,[23]]],[[34,[240,2]]],[]],[[[250,[-1]],29,29,[24,[23]]],[[34,[240,2]]],246],[[-1,240,[24,[23]],[47,[232]]],[[34,[2,241]]],[]],[[[250,[-1]],240,[24,[23]],[47,[232]]],[[34,[2,241]]],246],[[-1,240],[[13,[[2,[[13,[23,12]],[13,[23,12]]]],12]]],[]],[[[250,[-1]],240],[[13,[[2,[[13,[23,12]],[13,[23,12]]]],12]]],246],[[-1,240,[24,[23]],[47,[232]]],[[34,[45,241]]],[]],[[[250,[-1]],240,[24,[23]],[47,[232]]],[[34,[45,241]]],246],[[-1,[24,[240]],[47,[232]]],[[13,[242,12]]],[]],[[[250,[-1]],[24,[240]],[47,[232]]],[[13,[242,12]]],246],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[240],[244],[232],[233],[[234,234],2],[[234,234],234],[[234,234],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[240],[244],[232],[233],[234,15],[-1,15,[]],[-1,15,[]],[-1,15,[]],[234,15],[-1,15,[]],[[[250,[-1]]],15,246],[[-1,239,[24,[23]]],2,[]],[[[250,[-1]],239,[24,[23]]],2,248],[[-1,239,[24,[23]],[47,[[24,[23]]]],[24,[23]]],15,[]],[[[250,[-1]],239,[24,[23]],[47,[[24,[23]]]],[24,[23]]],15,248],[[-1,239,[24,[23]]],[[47,[[13,[23,12]]]]],[]],[[[250,[-1]],239,[24,[23]]],[[47,[[13,[23,12]]]]],248],[[-1,239,[24,[23]],[24,[23]]],2,[]],[[[250,[-1]],239,[24,[23]],[24,[23]]],2,248],[233,85],[-1,[[34,[243,2]]],[]],[[[250,[-1]]],[[34,[243,2]]],246],[[234,-1],[[250,[-1]]],[]],[[[13,[23,12]]],244],[-1,235,246],[-1,237,248],[-1,238,[249,156]],[234,234],[[240,240],[[47,[77]]]],[[232,232],[[47,[77]]]],[[233,233],[[47,[77]]]],[[234,234],[[47,[77]]]],0,[-1,[[32,[23]]],[]],[[[250,[-1]]],[[32,[23]]],246],[[-1,[24,[23]],[24,[23]]],2,[]],[[234,234],2],[[239,-1],34,171],[[232,-1],34,171],[[233,-1],34,171],[[-1,[24,[23]],[24,[23]],[24,[23]]],2,[]],[[234,234,15],2],[[-1,[13,[251,12]],15],2,[]],[[[250,[-1]],[13,[251,12]],15],2,246],[239,45],[240,45],[241,45],[242,45],[243,45],[244,45],[232,45],[233,45],[[-1,232],2,[]],[[[250,[-1]],232],2,246],0,0,[[232,233],232],[[234,234],234],[[234,234],2],[[-1,[13,[23,12]]],[[34,[2,2]]],[]],[[234,234],234],0,[-1,232,[]],[[[250,[-1]]],232,246],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[234,234],2],[-1,[[34,[-2]]],[],[]],[53,[[34,[239]]]],[-1,[[34,[-2]]],[],[]],[23,[[34,[239,2]]]],[-1,[[34,[-2]]],[],[]],[23,[[34,[241,2]]]],[53,[[34,[241]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[53,[[34,[242]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[235,176],[-1,176,[]],[237,176],[-1,176,[]],[238,176],[-1,176,[]],[[],[[178,[177]]]],[[],[[178,[177]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[234,234],234],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[232,85],[[240,-1],-2,96,[]],[[244,-1],-2,96,[]],[[232,-1],-2,96,[]],[[233,-1],-2,96,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[[252,[-1]],29,29],[[252,[-1]]],123],[253,29],[[[252,[-1]],-1],[[252,[-1]]],123],[254,255],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[253,253],[[[252,[-1]]],[[252,[-1]]],55],[256,256],[255,255],[257,257],[258,258],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[258,[[47,[[2,[29,29]]]]]],[[[252,[-1]],232],[[252,[-1]]],123],[[255,-1],2,[[50,[[47,[232]]]]]],0,[[],[[252,[-1]]],123],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[[253,253],15],[[[252,[-1]],[252,[-1]]],15,70],[[256,256],15],[[259,259],15],[[257,257],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[255,[[47,[241]]]],[[257,29],[[47,[29]]]],[[253,107],110],[[[252,[-1]],107],110,102],[[256,107],110],[[259,107],110],[[254,107],110],[[255,107],110],[[257,107],110],[[258,107],110],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,252],[254,257],0,0,[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[257,258],[-1,15,[]],[[[252,[-1]],253],[[252,[-1]]],123],0,[29,[[252,[-1]]],123],[255,47],[258,15],[-1,[[260,[-2]]],[],[]],[[-1,-2],[[34,[-3,159]]],[],160,161],[[29,-1],[[252,[-1]]],[]],0,[[[252,[-1]]],[[34,[259,241]]],104],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[259,-1],[[34,[261,259]]],[[50,[[47,[232]]]]]],[[[13,[259]],-1],[[13,[[34,[261,259]]]]],[[50,[[47,[232]]]]]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[252,[-1]],29],[[252,[-1]]],123],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[259,261],[[[13,[259]]],[[13,[261]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[262,2],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,2],[45,2],[45,2],[[263,263],15],[[[264,[-1,-2]],[264,[-1,-2]]],15,70,70],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[263,107],110],[[[264,[-1,-2]],107],110,102,102],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[262,[[34,[[47,[-1]],263]]],73],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[23]]],262],[[262,-1],[[34,[-2,[264,[-2,-3]]]]],96,18,[]],[[[24,[23]]],262],[[262,-1],2,72],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[[265,[-1]]],[[265,[-1]]],266],[[[267,[-1]]],[[267,[-1]]],266],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[],[]],[[[265,[-1]]],[],266],[268],[-1,[[34,[268,81]]],82],[-1,[[34,[[267,[-2]],81]]],82,266],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[],[[265,[-1]]],266],[[],268],[[],[[267,[-1]]],266],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,2],[45,2],[45,2],[[[269,[-1]]],2,270],[45,2],[45,2],[268,[[13,[23]]]],[[268,-1],2,[98,99]],[[[267,[-1]],-2],2,266,[98,99]],[[[267,[-1]],[267,[-1]]],15,[70,266]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[269,[-1]]],[[34,[2]]],270],[[[267,[-1]],107],110,266],[[[269,[-1]]],2,270],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],15],[[],15],[[],15],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[[[271,[-1]]],[[269,[-1]]],270],[[[24,[23]]],[[271,[-1]]],[270,123]],[268,45],[[[267,[-1]]],45,266],[[],2],[[],2],[[],2],0,[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[[271,[-1]]],[[34,[[269,[-1]]]]],270],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[268,-1],-2,96,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[23]],53,233],[[271,[[265,[-1]]]]],266],[[[24,[23]],53],[[271,[[265,[-1]]]]],266],[[[24,[23]],233],[[271,[268]]]],[[[24,[23]],-1],[[271,[-1]]],270],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[272,-1],2,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[272,272],[273,273],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[272,[24,[23]],[24,[23]],[47,[[24,[23]]]],[24,[23]]],15],[[],274],[[],272],[[],275],[[],273],[[],276],[[],277],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,2],[45,2],[275,2],[45,2],[45,2],[45,2],[45,2],[[274,274],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[275,274],2],[[274,107],[[34,[2,108]]]],[[272,107],[[34,[2,108]]]],[[275,107],[[34,[2,108]]]],[[273,107],[[34,[2,108]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[275,87,274,-1,-2],2,[[50,[[13,[23,12]]]]],104],[[272,[24,[23]],[24,[23]]],[[47,[[13,[23,12]]]]]],[[272,[24,[23]]],[[47,[[13,[23,12]]]]]],0,[[273,240,29,29],[[34,[2,2]]]],[[273,29,29,[24,[23]]],[[34,[240,2]]]],[[273,240,[24,[23]],[47,[232]]],[[34,[2,241]]]],[[273,240],[[13,[[2,[[13,[23,12]],[13,[23,12]]]],12]]]],[[273,240,[24,[23]],[47,[232]]],[[34,[45,241]]]],[[273,[24,[240]],[47,[232]]],[[13,[242,12]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[273,15],0,[[273,239,[24,[23]]],2],[[273,239,[24,[23]],[47,[[24,[23]]]],[24,[23]]],15],[[273,239,[24,[23]]],[[47,[[13,[23,12]]]]]],[[273,239,[24,[23]],[24,[23]]],2],0,0,[273,[[34,[243,2]]]],[[],272],[[],[[2,[273,[280,[[279,[278,275]],12]]]]]],[[],[[2,[277,[280,[[279,[278,276]],12]]]]]],0,[273,[[32,[23]]]],0,[[272,[24,[23]],[24,[23]]],2],0,0,0,0,0,[[272,[24,[23]],[24,[23]],[24,[23]]],2],[[273,[13,[251,12]],15],2],[[273,232],2],[[277,[13,[23,12]]],[[34,[2,2]]]],[273,232],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[272,[[2,[273,[280,[[279,[278,275]],12]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[45,-1,[]],[45,-1,[]],[45,2],[[281,282],15],[281,2],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[[],2],[-1,-2,[],[]],[[281,283],2],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[],[[13,[284]]]],[[[285,[-1,-2]],193,45],[[195,[194]]],[99,156,286,55,69,18,102,198],125],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[179,[[24,[23]]]],[179,[[24,[23]]]],[179,[[32,[23]]]],[179,[[32,[23]]]],[179,[[24,[23]]]],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[179,23],[-1,[[34,[[24,[-2]],33]]],[],35],[179,23],[179,[[24,[23]]]],[284,[[24,[23]]]],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[[179,[24,[23]]],2],[[179,179]],[[179,179]],[[179,179],2],[[179,179],2],[[179,179]],[[179,179]],[[179,179],2],[[179,179],2],[[179,179]],[[179,179]],[[179,179],2],[[179,179],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[285,[-1,-2]],-3],[[34,[202]]],[18,286,156],[],[]],[[179,179],2],[[],-1,[]],[[],-1,[]],[179,179],[284,284],[287,287],[[[288,[-1]]],[[288,[-1]]],55],[[[289,[-1]]],[[289,[-1]]],55],[[[285,[-1,-2]]],[[285,[-1,-2]]],55,55],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[179,179],77],[[284,284],77],[[179,179],15],[-1,[[34,[179,81]]],82],[-1,[[34,[284,81]]],82],[-1,[[34,[287,81]]],82],[-1,[[34,[[288,[-2]],81]]],82,73],[-1,[[34,[[289,[-2]],81]]],82,[]],[-1,[[34,[[285,[-2,-3]],81]]],82,73,[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[[289,[-1]]],[[2,[13]]],[18,99,156,286,172,55,69,102,218]],[[],179],[[],284],[45,-1,[]],[45,-1,[]],[45,-1,[]],[[[288,[-1]]],[],[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[34,[179]]],90],[-1,[[34,[284]]],90],[-1,[[34,[287]]],90],[-1,[[34,[[289,[-2]]]]],90,[]],0,[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[284,[[13,[23]]]],[[[288,[-1]]],[[13,[23]]],72],[24,[[13,[23]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[[284,-1],2,[98,99]],[[287,-1],2,[98,99]],[[[288,[-1]],-2],2,72,[98,99]],[[[289,[-1]],-2],2,[],[98,99]],[[[285,[-1,-2]],-3],2,72,[],[98,99]],[[179,179],15],[[284,284],15],[[287,287],15],[[[288,[-1]],[288,[-1]]],15,70],[[[289,[-1]],[289,[-1]]],15,70],[[[285,[-1,-2]],[285,[-1,-2]]],15,70,70],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[289,[-1]]],24,[18,99,156,286,172,55,69,102,218]],0,0,[[179,107],[[34,[2,108]]]],[[179,107],[[34,[2,108]]]],[[179,107],[[34,[2,108]]]],[[179,107],[[34,[2,108]]]],[[284,107],110],[[287,107],110],[[[288,[-1]],107],110,102],[[[289,[-1]],107],110,102],[[[285,[-1,-2]],107],110,[],[]],[[[32,[23]]],179],[[[32,[23]]],179],[290,179],[[[32,[23]]],179],[114,179],[-1,-1,[]],[113,179],[-1,-1,[]],[85,284],[-1,-1,[]],[-1,-1,[]],[116,-1,[]],[-1,[[288,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[126,-1,[]],[127,[[34,[-1,44]]],[]],[126,-1,[]],[[],179],[-1,-2,129,[]],[-1,-2,130,[]],[85,179],[85,179],[85,179],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[23]]],179],[126,-1,[]],[29,[[34,[179,291]]]],[[[47,[[13,[23]]]]],284],[[284,59],[[47,[-1]]],73],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[284,59],[[24,[23]]]],[[179,-1],2,146],[[284,-1],2,146],[[287,-1],2,146],[[[289,[-1]]],[],[18,99,156,286,172,55,69,102,218]],0,[[179,-1],[],[[145,[[24,[23]]]]]],[[179,-1],[],[[145,[[24,[23]]]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[179],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[284],[[-1,127],[[34,[44]]],[]],[179],[-1,15,[]],[-1,15,[]],[[[288,[-1]]],[[47,[15]]],[]],[[[285,[-1,-2]]],[[47,[15]]],[18,286,156,223],223],[179,15],[[],[[24,[59]]]],[[],45],0,[[],45],[[],45],[13,[[289,[-1]]],[18,99,156,286,172,55,69,102,218]],[[-1,47],[[47,[[285,[-1,-2]]]]],[18,286,156,223],223],[[-1,[47,[[2,[85,-2]]]]],[[285,[-1,-2]]],[],[]],[[],292],0,0,[[179,179],[[47,[77]]]],[[284,284],[[47,[77]]]],[[],179],[-1,179,[293,99]],[179,2],[[179,-1],2,[293,99]],[23,179],[[179,-1],34,171],[[284,-1],34,171],[[287,-1],34,171],[[[288,[-1]],-2],34,72,171],[[[289,[-1]],-2],34,172,171],[[[285,[-1,-2]],-3],34,[],[],171],[-1,2,104],[[284,-1],47,[[37,[[24,[23]]]]]],0,[284,45],[287,45],[[[288,[-1]]],45,72],[[[289,[-1]]],45,[]],[[[285,[-1,-2]]],45,72,[]],0,0,[179,[[32,[23]]]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[179,85],[179,85],[179,85],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[284,-1,294],[284,[[13,[23]]]],[-1,44,[]],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],[[178,[177]]]],[[],178],[[],178],[[],178],[[],178],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[179,-1],-2,96,[]],[[284,-1],-2,96,[]],[[[288,[-1]],-2],-3,72,96,[]],[[[285,[-1,-2]],226,193,45],227,[99,156,286,55,69,18,102,198],125],[[284,-1],15,[[37,[[24,[23]]]]]],[[287,-1,85],15,[[180,[[24,[23]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],179],0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[59,[[13,[114,12]]]],[114,[[32,[23]]]],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[114,[[24,[23]]]],[119,[[24,[23]]]],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[21,[-2,-3]]],[],[],22],[-1,[[24,[23]]],[]],[-1,[[24,[23]]],[]],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[295,296],[114,[[24,[23]]]],[114,[[32,[23]]]],[119,[[32,[23]]]],[119,[[24,[23]]]],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,[[34,[[24,[-2]],33]]],[],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[295,295],[114,114],[119,119],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[114,114],77],[-1,[[34,[114,81]]],82],[-1,[[34,[119,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[45,-1,[]],[114],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[[295,-1,[47,[[32,[23]]]]],[[34,[[2,[295,[47,[[32,[23]]]]]],297]]],16],[[114,-1],[[47,[114]]],16],[-1,[[34,[114]]],90],[-1,[[34,[119]]],90],[45,2],[45,2],[45,2],[114,[[13,[23,12]]]],[119,[[13,[23,12]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[-1,-2,[],[[78,[97]]]],[[114,-1],2,[98,99]],[[119,-1],2,[98,99]],[[114,114],15],[[119,119],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[114,107],[[34,[2,108]]]],[[114,107],[[34,[2,108]]]],[[119,107],[[34,[2,108]]]],[-1,-1,[]],[298,295],[299,295],[300,295],[296,295],[-1,-1,[]],[301,114],[302,119],[-1,-1,[]],[303,119],[-1,[[34,[114,81]]],82],[127,[[34,[-1,44]]],[]],[127,[[34,[-1,44]]],[]],[179,114],[304,119],[[],114],[[],119],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[23]]],114],[[[32,[23]]],119],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[23]]],[[34,[295,305]]]],[[[24,[23]]],[[47,[119]]]],[29,[[34,[114]]]],[29,[[34,[-1,306]]],[]],[29,[[34,[[2,[-1,307]],306]]],[]],[[59,[47,[[13,[23,12]]]]],114],[[-1,-2],85,[143,99],144],[[-1,-2],85,[143,99],144],[[114,-1],2,146],[[119,-1],2,146],[[],45],[[],45],[[],45],[114],[119],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[114,114],[[-1,127],[[34,[44]]],[]],[[-1,127],[[34,[44]]],[]],[114],[119],[[295,[24,[23]],308],[[32,[23]]]],[[114,[24,[23]],308,309],[[34,[[32,[23]],81]]]],[[],45],[[],45],[[114,114],[[47,[77]]]],[295,114],[[114,-1],34,171],[[119,-1],34,171],[[295,[24,[23]]],119],[[114,59,-1],47,[[37,[[24,[23]]]]]],[114,45],[119,45],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[295,[[13,[23,12]]]],[114,[[13,[23,12]]]],[-1,44,[]],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[[21,[-2,-3]],[174,[-2]]]]],[],[],22],[-1,[[34,[-2]]],[],[]],[[[24,[23]]],[[34,[114]]]],[-1,[[34,[-2]]],[],[]],[42,[[34,[114]]]],[-1,[[34,[-2]]],[],[]],[[[24,[23]]],[[34,[119]]]],[63,[[34,[119]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],[[178,[177]]]],[[],[[178,[177]]]],[179,114],[[[32,[23]]],114],[[[32,[23]]],119],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[114,-1],-2,96,[]],[[119,-1],-2,96,[]],[[119,-1,114],15,[[37,[[24,[23]]]]]],[[114,-1],15,[[37,[[24,[23]]]]]],[[119,-1,114],15,[[180,[[24,[23]]]]]],[[119,-1,114],15,[[37,[[24,[23]]]]]],0,[295],[295],[114,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[310,308],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[308,308],[310,310],[311,311],[309,309],[312,312],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[34,[311,81]]],82],[-1,[[34,[309,81]]],82],[-1,[[34,[312,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,2],[45,2],[45,2],[45,2],[45,2],[309,[[13,[23,12]]]],[312,[[13,[23,12]]]],[[311,-1],2,[98,99]],[[311,311],15],[[309,309],15],[[312,312],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[311,107],[[34,[2,108]]]],[[309,107],[[34,[2,108]]]],[[312,107],[[34,[2,108]]]],[-1,-1,[]],[-1,-1,[]],[308,310],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[308,310],[[309,[24,[23]],308,114],[[34,[[32,[23]],81]]]],[[],45],[[],45],[[],45],[[[24,[23]],[24,[[2,[[24,[23]],[24,[23]]]]]]],308],[308,310],0,0,[311,45],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],[[178,[177]]]],[[],[[178,[177]]]],[[],[[178,[177]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[310,308],310],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,[[34,[202]]],[]],0,[[-1,193,45],[[195,[194]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[34,[202]]],[],[]],[-1,[[34,[202]]],[]],[[-1,-1],2,[]],[[-1,-1],[[47,[-1]]],[]],[[-1,-1],[[47,[-1]]],[]],[-1,[[47,[-2]]],[],[[212,[-1]]]],[-2,[[47,[-1]]],[],[[132,[-1]]]],[[-1,-1],[[47,[-1]]],[]],[[-1,45],[[47,[-1]]],[55,139,313]],[[-1,53],[[47,[-1]]],[]],[[-1,53],[[47,[-1]]],[]],[[-1,-1],[[47,[-1]]],[]],[[],-1,[]],[[],-1,[]],[[[314,[-1]]],[[314,[-1]]],55],[224,224],[315,315],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,-1,[]],[-1,[[47,[-1]]],55],[-1,[[47,[-2]]],[55,50],[55,[50,[-1]]]],[-2,-1,[],[[50,[-1]]]],[-1,[[47,[-2]]],[55,132],[55,[132,[-1]]]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-1]]],55],[-1,-1,[]],[-1,[[47,[-2]]],[55,50],[55,[50,[-1]]]],[-1,[[47,[-2]]],[55,132],[55,[132,[-1]]]],[[]],[-1,[[34,[121,81]]],82],[-1,[[34,[122,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[-1,[[2,[13]]],[]],[[],[[314,[-1]]],123],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[34,[224]]],90],[-1,[[34,[315]]],90],[-1,208,[]],[-1,208,[]],[-1,316,[]],[[-1,-2],[],[],[]],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[24,[[13,[23]]]],[[121,-1],2,[98,99]],[[122,-1],2,[98,99]],[[-1,-1],[[34,[-1,61]]],[]],[[-1,-1],[[34,[2,61]]],[]],[[-1,-1],[[34,[-1,61]]],[]],[[-1,-1],[[34,[2,61]]],[]],[[-1,-2],[[34,[-2,61]]],[],49],[-1,[[34,[-2,61]]],[],[]],[[-1,-2],[[34,[-3,61]]],49,49,[]],[-1,[[34,[-2,61]]],[],[]],[[-1,-1],[[34,[-1,61]]],[]],[[-1,-1],[[34,[2,61]]],[]],[[-1,-2],[[34,[-2,61]]],[],49],[[-1,45],[[34,[-1,61]]],[139,313,55]],[[-1,-1],[[34,[-1,61]]],[]],[[-1,-1],[[34,[2,61]]],[]],[[[314,[-1]],[314,[-1]]],15,70],[[224,224],15],[[315,315],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[-1,24,[]],[-1,[],[]],[[121,107],110],[[122,107],110],[[224,107],110],[[315,107],110],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,59],[[47,[-2]]],[],73],[[-1,59],[[24,[23]]],[]],[[[24,[23]]]],[-1,[],[]],[-1,[],[]],[[[24,[23]]]],[[[24,[23]]]],[-1,[],72],[-1,[],[]],0,[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-1,99],[-1,[[47,[-1]]],99],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,-2,[],[]],[[-1,-2],-3,[],72,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,70],[-1,[[47,[15]]],[]],[-1,15,[]],[[],[[24,[59]]]],[-1,[[34,[122]]],[]],[[],[[34,[122]]]],[[],[[34,[122]]]],[-1,[[34,[-1,122]]],[18,55,70,102,223]],[[[314,[-1]],-1],[[34,[-1,122]]],[]],[[],-1,[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-1]]],[]],[-2,[[47,[-1]]],[],[[50,[-1]]]],[-2,[[47,[-1]]],[],[55,[132,[-1]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-1]]],[]],[-1,[[47,[-2]]],50,[[50,[-1]]]],[-1,[[47,[-2]]],[55,132],[55,[132,[-1]]]],[[],[[13,[317]]]],[[],-1,[]],[-1,[],[]],[-2,-1,[],[[50,[-1]]]],[[[2,[-1]]],-1,[]],[[[2,[-1,-2,-3,-4]]],-1,[],[],[],[]],[[[2,[-1,-2,-3]]],-1,[],[],[]],[[[2,[-1,-2]]],-1,[],[]],[-1,-1,[]],[-1,[],[]],[[]],[[-1,-2],[],[],[]],[208,-1,[]],[13,-1,[]],[47,[[47,[-1]]],[]],[-1,[[318,[-1]]],[]],[[[24,[23]]],319],[-1,[],[]],[[],-1,[]],[[[13,[[13,[23]]]],57]],[[[13,[[13,[23]]]],57]],[[[13,[[13,[23]]]],57]],[[-1,[24,[23]]],15,[]],[-1,[],[]],[[47,193,194,45,320],[[34,[2,202]]]],[[-1,193,45],[[34,[202]]],[]],[[],[[34,[2,202]]]],[[193,45],[[34,[2,202]]]],[-1,2,[]],[[[318,[-1]],[24,[23]]],[[34,[2,81]]],82],[[319,[24,[23]]],[[34,[2,81]]]],[[-1,-2],[],[],[]],[[[318,[-1]]],[[34,[[47,[45]],81]]],82],[319,[[34,[[47,[45]],81]]]],[-1,-2,[],[[167,[-1]]]],[-2,-1,[],[[150,[-1]]]],[[-1,-1],2,139],[[-1,-1],-1,[]],[-1,2,139],[-1,2,139],[-1,-1,139],[[-1,-1],-1,[]],[-1,-1,139],[[-1,45],-1,[]],[[-1,-1],2,139],[[-1,-1],-1,[]],[[224,-1],34,171],[[315,-1],34,171],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[121,45],[122,45],[-1,[],[]],[[-1,[204,[-2]]],[[34,[47]]],[],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[204,[-2]]],[[34,[[47,[[225,[-2]]]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[[2,[[13,[23]],[13,[23]]]]]],57]],[[[13,[[2,[[13,[23]],[13,[23]]]]]],57]],[[[13,[[2,[[13,[23]],[13,[23]]]]]],57]],[-1,[[34,[-2,-1]]],[],[]],[-1,[[34,[-2,-1]]],[],[]],[-1,[[34,[-1,-1]]],[]],[-2,[[34,[-1,-2]]],[],[[50,[-1]]]],[-2,[[34,[-1,-2]]],[],[55,[132,[-1]]]],[-1,[[34,[-2,-1]]],[],[]],[-1,[[34,[-2,-1]]],[],[]],[-1,[[34,[-1,-1]]],[]],[-1,[[34,[-2,-1]]],50,[[50,[-1]]]],[-1,[[34,[-2,-1]]],[55,132],[55,[132,[-1]]]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[[2,[-2,-3]]]]],[],[],73],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[[-1,-2],[[47,[-3]]],[],72,[]],[-1,[[34,[2]]],[]],[-2,[[34,[-1,2]]],[],[[132,[-1]]]],[-1,[[34,[-1,2]]],[]],[-1,[[34,[2]]],[]],[[],[[34,[2]]]],[[],[[34,[2]]]],[[],[[34,[2]]]],0,[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],178],[[],178],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[]],[[]],[-1,-1,[18,55,70,102,223]],[[-1,226,193,45],227,[]],[[-1,193,45],227,[]],[226,227],[[193,45],227],[[-1,-2],15,[],[[180,[[24,[23]]]]]],[[-1,-2],15,[],[[180,[[24,[23]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[[],319],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[321,-1],321,72],[[321,-1],321,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[321,227],[[],-1,[]],[322,322],[323,323],[202,202],[226,226],[324,324],[321,321],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[324,324],324],[[321,324],321],[-1,[[34,[322,81]]],82],[-1,[[34,[323,81]]],82],[-1,[[34,[202,81]]],82],[-1,[[34,[226,81]]],82],[-1,[[34,[324,81]]],82],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,[24,[23]]],[[34,[-1,81]]],[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[53,-1],[[34,[-2,81]]],82,[]],[[],324],[[],321],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[45,-1,[]],[-1,[[34,[322]]],90],[-1,[[34,[323]]],90],[-1,[[34,[202]]],90],[45,2],[45,2],[45,2],[45,2],[45,2],[45,2],[[322,-1],2,[98,99]],[[323,-1],2,[98,99]],[[202,-1],2,[98,99]],[[226,-1],2,[98,99]],[[324,-1],2,[98,99]],[[322,322],15],[[323,323],15],[[202,202],15],[[226,226],15],[[324,324],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[322,15],[202,15],[[322,107],110],[[323,107],110],[[202,107],110],[[202,107],110],[[226,107],110],[[324,107],110],[[321,107],110],[322,227],[323,227],[321,227],[-1,-1,[]],[-1,-1,[]],[322,202],[-1,-1,[]],[323,202],[122,202],[-1,-1,[]],[-1,-1,[]],[321,324],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[[321,325],321],0,[[321,326],321],0,[[321,15],321],0,0,0,[[322,-1],34,171],[[323,-1],34,171],[[202,-1],34,171],[322,45],[323,45],[202,45],[226,45],[324,45],[202,[[47,[46]]]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[[-1,[24,[23]]],[[13,[23,12]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[-1,176,[]],[[],178],[[],178],[[],178],[[],178],[[],178],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[322,15],[202,15],[29,321]],"c":[20,335,1174,1256,1257,1258,1259,1260,1261],"p":[[3,"Private",6079],[15,"tuple"],[3,"FixedI64",0],[3,"FixedU64",0],[3,"FixedI128",0],[3,"FixedU128",0],[3,"Percent",0],[3,"PerU16",0],[3,"Permill",0],[3,"Perbill",0],[3,"Perquintill",0],[3,"Global",6080],[3,"Vec",6081],[4,"Either",0],[15,"bool"],[8,"Iterator",6082],[8,"FnMut",6083],[8,"Codec",6084],[3,"Justifications",0],[6,"Justification",0],[3,"BitSlice",6085],[8,"BitOrder",6086],[15,"u8"],[15,"slice"],[8,"AsMut",6087],[3,"CStr",6088],[3,"Path",6089],[3,"OsStr",6090],[15,"str"],[3,"WeakBoundedVec",0],[3,"AccountId32",0],[15,"array"],[4,"Error",6091],[4,"Result",6092],[8,"FromByteSlice",6091],[3,"Pin",6093],[8,"AsRef",6087],[3,"BoundedBTreeSet",0],[3,"BTreeSet",6094],[8,"Ord",6095],[4,"RuntimeString",0],[4,"MultiSigner",0],[3,"Storage",0],[3,"String",6096],[15,"usize"],[8,"Error",6097],[4,"Option",6098],[3,"Rational128",0],[8,"FixedPointOperand",0],[8,"Into",6087],[4,"SignedRounding",6099],[3,"Replacements",6100],[15,"u32"],[8,"Get",6101],[8,"Clone",6102],[3,"StorageChild",0],[4,"StateVersion",0],[4,"Rounding",0],[3,"KeyTypeId",0],[3,"CryptoTypeId",0],[4,"ArithmeticError",0],[4,"MultiAddress",0],[4,"MultiSignature",0],[3,"AnySignature",0],[3,"ModuleError",0],[4,"TransactionalError",0],[4,"DispatchError",0],[3,"DispatchErrorWithPostInfo",0],[8,"Eq",6095],[8,"PartialEq",6095],[8,"Copy",6103],[8,"Encode",6084],[8,"Decode",6084],[8,"Printable",5124],[4,"TokenError",0],[3,"OpaqueExtrinsic",0],[4,"Ordering",6095],[8,"FromIterator",6104],[8,"BufRead",6105],[15,"u128"],[3,"Error",6106],[8,"Input",6084],[8,"HasCompact",6107],[15,"i64"],[15,"u64"],[15,"i128"],[15,"u16"],[8,"Deref",6108],[8,"DerefMut",6108],[8,"Deserializer",6109],[8,"Deserialize",0],[8,"IndexedParallelIterator",6110],[8,"Consumer",6111],[8,"ParallelIterator",6110],[8,"UnindexedConsumer",6111],[8,"FnOnce",6083],[15,"char"],[8,"Output",6084],[8,"Sized",6103],[3,"BoundedVec",2426],[3,"BoundedSlice",2426],[8,"Debug",6112],[8,"Extend",6104],[8,"IntoIterator",6104],[3,"Error",6113],[8,"Write",6105],[3,"Formatter",6112],[3,"Error",6112],[8,"Display",6112],[6,"Result",6112],[3,"Compact",6107],[8,"PerThing",0],[3,"Public",6114],[3,"Public",4778],[6,"DispatchOutcome",0],[15,"never"],[3,"Signature",6114],[3,"Signature",6115],[3,"Signature",4778],[3,"Public",6115],[3,"BadOrigin",5124],[3,"LookupError",5124],[8,"Default",6116],[3,"UncheckedExtrinsic",2600],[8,"SignedExtension",5124],[3,"OwnedFd",6117],[8,"FunctionContext",6118],[15,"f64"],[8,"IntoFilelike",6119],[8,"IntoSocketlike",6119],[8,"RationalArg",6099],[8,"TryInto",6087],[8,"Div",6120],[8,"Rem",6120],[8,"Add",6120],[8,"AddAssign",6120],[8,"Unsigned",6121],[8,"Zero",5124],[8,"One",5124],[8,"MultiplyRational",6122],[6,"ConsensusEngineId",0],[6,"EncodedJustification",0],[8,"Hash",6123],[8,"BuildHasher",6123],[8,"SliceIndex",6124],[8,"Hasher",6123],[4,"TransactionOutcome",0],[8,"ExactSizeIterator",6125],[8,"Mul",6120],[8,"UniqueSaturatedInto",5124],[3,"Weight",6126],[8,"MultiplyArg",6099],[8,"DoubleEndedIterator",6127],[3,"Recompositions",6128],[3,"Decompositions",6129],[8,"Send",6103],[8,"ParallelExtend",6110],[8,"IntoParallelIterator",6110],[3,"Error",6130],[8,"Format",6131],[8,"FromFormattedStr",6132],[3,"Context",6133],[4,"Poll",6134],[8,"Future",6135],[8,"Read",6105],[8,"Borrow",6136],[8,"UniqueSaturatedFrom",5124],[8,"ReciprocalArg",6099],[4,"SeekFrom",6105],[8,"Seek",6105],[8,"Serializer",6137],[8,"Serialize",0],[3,"StreamSafe",6138],[4,"BitSpanError",6139],[3,"BoundedBTreeMap",2362],[3,"TypeId",6140],[4,"MetaForm",6141],[3,"Type",6142],[3,"H256",4417],[8,"Lazy",5124],[8,"Verify",5124],[8,"ProducerCallback",6111],[3,"Arguments",6112],[3,"BigUint",2291],[3,"BTreeMap",6143],[3,"IterMut",6143],[3,"Drain",6144],[8,"RangeBounds",6145],[3,"IterMut",6146],[3,"PiecewiseLinear",2574],[8,"AtLeast32BitUnsigned",5124],[3,"CheckedExtrinsic",2600],[6,"DispatchInfoOf",5124],[6,"PostDispatchInfoOf",5124],[6,"ApplyExtrinsicResultWithInfo",0],[8,"Member",5124],[8,"MaybeDisplay",5124],[8,"Dispatchable",5124],[4,"DigestItem",2600],[4,"DigestItemRef",2600],[4,"Era",2600],[4,"TransactionValidityError",5824],[8,"Lookup",5124],[4,"BlockId",2600],[8,"Block",5124],[3,"Block",2600],[3,"SignedBlock",2600],[3,"Digest",2600],[4,"OpaqueDigestItemId",2600],[3,"Header",2600],[3,"U256",6147],[8,"TryFrom",6087],[8,"Hash",5124],[8,"Fn",6083],[3,"SignedPayload",2600],[8,"Header",5124],[8,"MaybeSerializeDeserialize",5124],[8,"Extrinsic",5124],[8,"MaybeSerialize",5124],[8,"MaybeFromStr",5124],[8,"FullCodec",6084],[8,"MaxEncodedLen",6148],[8,"TypeInfo",6149],[3,"BlakeTwo256",5124],[6,"NumberFor",5124],[4,"TransactionSource",5824],[6,"TransactionValidity",5824],[3,"ModuleError",3099],[4,"DispatchError",3099],[6,"ApplyExtrinsicResult",3099],[6,"ApplyExtrinsicResult",0],[3,"Timestamp",3190],[3,"Duration",3190],[3,"Capabilities",3190],[3,"OffchainWorkerExt",3190],[8,"Any",6140],[3,"OffchainDbExt",3190],[3,"TransactionPoolExt",3190],[4,"StorageKind",3190],[3,"HttpRequestId",3190],[4,"HttpError",3190],[4,"HttpRequestStatus",3190],[3,"OpaqueNetworkState",3190],[3,"OpaqueMultiaddr",3190],[4,"OffchainOverlayedChange",3190],[8,"Externalities",3190],[3,"Box",6150],[8,"DbExternalities",3190],[8,"TransactionPool",3190],[3,"LimitedExternalities",3190],[3,"OpaquePeerId",6151],[3,"Request",3775],[4,"Method",3775],[3,"Response",3775],[3,"ResponseBody",3775],[4,"Error",3775],[3,"Headers",3775],[3,"HeadersIterator",3775],[3,"PendingRequest",3775],[3,"IterBridge",6152],[6,"HttpResult",3775],[3,"StorageValueRef",4012],[4,"StorageRetrievalError",4012],[4,"MutateStorageError",4012],[3,"BlockAndTime",4083],[8,"BlockNumberProvider",5124],[3,"BlockAndTimeDeadline",4083],[3,"Time",4083],[3,"StorageLockGuard",4083],[8,"Lockable",4083],[3,"StorageLock",4083],[3,"TestPersistentOffchainDB",4225],[3,"TestOffchainExt",4225],[3,"PendingRequest",4225],[3,"OffchainState",4225],[3,"PoolState",4225],[3,"TestTransactionPoolExt",4225],[3,"RawRwLock",6153],[3,"RwLock",6154],[3,"Arc",6155],[3,"RuntimeLogger",4396],[3,"Metadata",6156],[3,"Record",6156],[3,"UintAuthorityId",4417],[3,"TestXt",4417],[8,"Sync",6103],[3,"TestSignature",4417],[3,"ExtrinsicWrapper",4417],[3,"Block",4417],[3,"H160",6147],[4,"FromHexError",6157],[6,"Header",4417],[8,"Rng",6158],[8,"ByteArray",6159],[3,"Pair",4778],[3,"Keypair",6160],[4,"DeriveError",6159],[3,"Pair",6161],[3,"SecretKey",6160],[3,"MiniSecretKey",6160],[3,"Public",6161],[3,"Signature",6161],[3,"Signature",6162],[3,"H512",6147],[4,"SecretStringError",6159],[4,"PublicError",6159],[3,"Ss58AddressFormat",6163],[3,"VrfTranscript",4969],[3,"VrfOutput",4969],[3,"VrfSignData",4969],[3,"VrfSignature",4969],[3,"VrfProof",4969],[8,"CheckedMul",5124],[3,"IdentityLookup",5124],[3,"Keccak256",5124],[6,"DispatchResultWithInfo",0],[3,"SignedExtensionMetadata",5124],[3,"AppendZerosInput",5124],[3,"TrailingZeroInput",5124],[6,"DispatchResult",0],[3,"ValidTransactionBuilder",5824],[4,"InvalidTransaction",5824],[4,"UnknownTransaction",5824],[3,"ValidTransaction",5824],[6,"TransactionLongevity",5824],[6,"TransactionPriority",5824],[6,"TryRuntimeError",0],[8,"FixedPointNumber",0],[8,"RuntimeAppPublic",0],[8,"CryptoType",0],[8,"BoundToRuntimeAppPublic",0],[8,"TypeId",0],[8,"BuildStorage",0],[8,"BuildModuleGenesisStorage",0],[8,"SaturatedConversion",0],[8,"TruncateFrom",2426],[6,"DispatchOutcome",3099],[8,"OffchainStorage",3190],[6,"DigestItem",4417],[6,"Digest",4417],[8,"IdentifyAccount",5124],[8,"AppVerify",5124],[8,"Applyable",5124],[8,"ValidateUnsigned",5124],[8,"Checkable",5124],[8,"BlindCheckable",5124],[8,"BlockIdTo",5124],[8,"OpaqueKeys",5124],[8,"GetNodeBlockType",5124],[8,"Morph",5124],[8,"TryMorph",5124],[8,"Scale",5124],[8,"GetRuntimeBlockType",5124],[8,"SignaturePayload",5124],[8,"ExtrinsicMetadata",5124],[8,"StaticLookup",5124],[3,"AccountIdLookup",5124],[3,"MorphInto",5124],[3,"TryMorphInto",5124],[3,"TakeFirst",5124],[3,"ConvertToValue",5124],[3,"Identity",5124],[3,"ConvertInto",5124],[3,"TryConvertInto",5124],[3,"Replace",5124],[3,"ReduceBy",5124],[3,"CheckedReduceBy",5124],[3,"MorphWithUpperLimit",5124],[8,"CheckEqual",5124],[8,"CheckedAdd",5124],[8,"CheckedDiv",5124],[8,"CheckedConversion",5124],[8,"CheckedShl",5124],[8,"CheckedShr",5124],[8,"CheckedSub",5124],[8,"Clear",5124],[8,"Convert",5124],[8,"MaybeEquivalence",5124],[8,"ConvertBack",5124],[8,"EnsureAdd",5124],[8,"EnsureAddAssign",5124],[8,"EnsureDiv",5124],[8,"EnsureDivAssign",5124],[8,"EnsureFixedPointNumber",5124],[8,"EnsureFrom",5124],[8,"EnsureInto",5124],[8,"EnsureMul",5124],[8,"EnsureMulAssign",5124],[8,"EnsureSub",5124],[8,"EnsureSubAssign",5124],[8,"IntegerSquareRoot",5124],[8,"AccountIdConversion",5124],[8,"IsMember",5124],[8,"Bounded",5124],[8,"MaybeConvert",5124],[8,"MaybeConvertBack",5124],[8,"Saturating",5124],[8,"TryConvert",5124],[8,"TryConvertBack",5124]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
